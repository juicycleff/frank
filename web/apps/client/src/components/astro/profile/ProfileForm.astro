---
// Import necessary components
import { Button } from "../../react/ui/button";
import { Card, CardContent } from "../../react/ui/card";
import { Input } from "../../react/ui/input";
import { Label } from "../../react/ui/label";
import { Textarea } from "../../react/ui/textarea";
import { Switch } from "../../react/ui/switch";
import { Alert, AlertTitle, AlertDescription } from "../../react/ui/alert";
import { Separator } from "../../react/ui/separator";
import { CheckCircle2, AlertCircle, Upload } from "lucide-react";
import { UserAvatar } from "../../react/user-avatar";

// Define initial values and state
const isClient = import.meta.env.SSR === false;
let isLoading = false;
let success = "";
let error = "";

// Client-side script for form handling
---

<div class="space-y-8">
    {error && (
            <Alert variant="destructive">
                <AlertCircle className="h-4 w-4" />
                <AlertTitle>Error</AlertTitle>
                <AlertDescription>{error}</AlertDescription>
            </Alert>
    )}

    {success && (
            <Alert variant="default" className="border-green-500 bg-green-500/10 text-green-500">
                <CheckCircle2 className="h-4 w-4" />
                <AlertTitle>Success</AlertTitle>
                <AlertDescription>{success}</AlertDescription>
            </Alert>
    )}

    <form id="profile-form" class="space-y-8">
        <Card>
            <CardContent className="p-6">
                <div class="flex flex-col gap-8 md:flex-row">
                    <div class="flex flex-col items-center gap-2">
                        <UserAvatar />
                        <Button type="button" variant="outline" size="sm" className="mt-2">
                            <Upload className="mr-2 h-4 w-4" />
                            Change avatar
                        </Button>
                    </div>

                    <div class="flex-1 space-y-4">
                        <div class="grid grid-cols-1 gap-4 md:grid-cols-2">
                            <div class="space-y-2">
                                <Label htmlFor="first-name">First name</Label>
                                <Input id="first-name" defaultValue="John" disabled={isLoading} />
                            </div>
                            <div class="space-y-2">
                                <Label for="bio" htmlFor="last-name">Last name</Label>
                                <Input id="last-name" defaultValue="Doe" disabled={isLoading} />
                            </div>
                        </div>

                        <div class="space-y-2">
                            <Label for="bio" htmlFor="email">Email</Label>
                            <Input id="email" type="email" defaultValue="john.doe@example.com" disabled />
                            <p class="text-xs text-muted-foreground">
                                Your email cannot be changed. Contact support for help.
                            </p>
                        </div>

                        <div class="space-y-2">
                            <Label for="bio" htmlFor="username">Username</Label>
                            <Input id="username" defaultValue="johndoe" disabled={isLoading} />
                        </div>
                    </div>
                </div>
            </CardContent>
        </Card>

        <Card>
            <CardContent className="p-6 space-y-4">
                <div>
                    <h4 class="text-sm font-medium">About</h4>
                    <p class="text-sm text-muted-foreground">Tell others a little about yourself.</p>
                </div>

                <div class="space-y-2">
                    <Label for="bio" htmlFor="bio">Bio</Label>
                    <Textarea
                            id="bio"
                            placeholder="Write a short bio..."
                            className="min-h-[120px]"
                            defaultValue="Software developer with a passion for building beautiful user interfaces."
                            disabled={isLoading}
                    />
                    <p class="text-xs text-muted-foreground">Your bio will be shown on your public profile.</p>
                </div>
            </CardContent>
        </Card>

        <Card>
            <CardContent className="p-6 space-y-4">
                <div>
                    <h4 class="text-sm font-medium">Public profile</h4>
                    <p class="text-sm text-muted-foreground">Control what information is visible to others.</p>
                </div>

                <Separator />

                <div class="space-y-4">
                    <div class="flex items-center justify-between">
                        <div class="space-y-0.5">
                            <Label htmlFor="public-email">Show email on profile</Label>
                            <p class="text-xs text-muted-foreground">Your email will be visible to other users.</p>
                        </div>
                        <Switch id="public-email" checked={false} />
                    </div>

                    <div class="flex items-center justify-between">
                        <div class="space-y-0.5">
                            <Label htmlFor="public-projects">Show projects on profile</Label>
                            <p class="text-xs text-muted-foreground">Your projects will be visible to other users.</p>
                        </div>
                        <Switch id="public-projects" checked={true} />
                    </div>

                    <div class="flex items-center justify-between">
                        <div class="space-y-0.5">
                            <Label htmlFor="public-activity">Show activity on profile</Label>
                            <p class="text-xs text-muted-foreground">Your activity will be visible to other users.</p>
                        </div>
                        <Switch id="public-activity" checked={true} />
                    </div>
                </div>
            </CardContent>
        </Card>

        <div class="flex justify-end">
            <Button type="submit" id="submit-button" disabled={isLoading}>
                {isLoading ? "Saving..." : "Save changes"}
            </Button>
        </div>
    </form>
</div>

<script>
    // Client-side JavaScript
    document.addEventListener('DOMContentLoaded', () => {
        const form = document.getElementById('profile-form');
        const submitButton = document.getElementById('submit-button');

        let isLoading = false;

        form?.addEventListener('submit', async (event) => {
            event.preventDefault();

            if (!submitButton) return

            // Set loading state
            isLoading = true;
            submitButton.disabled = true;
            submitButton.textContent = 'Saving...';

            // Clear previous messages
            const successAlert = document.querySelector('.border-green-500');
            const errorAlert = document.querySelector('[variant="destructive"]');

            if (successAlert) successAlert.style.display = 'none';
            if (errorAlert) errorAlert.style.display = 'none';

            // Simulate profile update
            setTimeout(() => {
                // Reset loading state
                isLoading = false;
                submitButton.disabled = false;
                submitButton.textContent = 'Save changes';

                // Show success message
                if (successAlert) {
                    successAlert.style.display = 'flex';
                } else {
                    // Create success message if not exists
                    const alertDiv = document.createElement('div');
                    alertDiv.className = 'border-green-500 bg-green-500/10 text-green-500';
                    alertDiv.innerHTML = `
            <div class="flex items-center gap-2">
              <span class="h-4 w-4">âœ“</span>
              <div>
                <div class="font-medium">Success</div>
                <div>Your profile has been updated successfully.</div>
              </div>
            </div>
          `;
                    form?.parentNode?.insertBefore(alertDiv, form);
                }

                // Scroll to the top
                window.scrollTo(0, 0);
            }, 1500);
        });
    });
</script>