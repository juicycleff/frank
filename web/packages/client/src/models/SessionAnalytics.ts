/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { LocationUsage } from './LocationUsage';
import {
    LocationUsageFromJSON,
    LocationUsageFromJSONTyped,
    LocationUsageToJSON,
    LocationUsageToJSONTyped,
} from './LocationUsage';
import type { DeviceTypeUsage } from './DeviceTypeUsage';
import {
    DeviceTypeUsageFromJSON,
    DeviceTypeUsageFromJSONTyped,
    DeviceTypeUsageToJSON,
    DeviceTypeUsageToJSONTyped,
} from './DeviceTypeUsage';

/**
 * 
 * @export
 * @interface SessionAnalytics
 */
export interface SessionAnalytics {
    /**
     * 
     * @type {number}
     * @memberof SessionAnalytics
     */
    activeSessions: number;
    /**
     * 
     * @type {number}
     * @memberof SessionAnalytics
     */
    avgSessionDurationMinutes: number;
    /**
     * 
     * @type {Array<DeviceTypeUsage>}
     * @memberof SessionAnalytics
     */
    sessionsByDevice: Array<DeviceTypeUsage> | null;
    /**
     * 
     * @type {Array<LocationUsage>}
     * @memberof SessionAnalytics
     */
    sessionsByLocation: Array<LocationUsage> | null;
}

/**
 * Check if a given object implements the SessionAnalytics interface.
 */
export function instanceOfSessionAnalytics(value: object): value is SessionAnalytics {
    if (!('activeSessions' in value) || value['activeSessions'] === undefined) return false;
    if (!('avgSessionDurationMinutes' in value) || value['avgSessionDurationMinutes'] === undefined) return false;
    if (!('sessionsByDevice' in value) || value['sessionsByDevice'] === undefined) return false;
    if (!('sessionsByLocation' in value) || value['sessionsByLocation'] === undefined) return false;
    return true;
}

export function SessionAnalyticsFromJSON(json: any): SessionAnalytics {
    return SessionAnalyticsFromJSONTyped(json, false);
}

export function SessionAnalyticsFromJSONTyped(json: any, ignoreDiscriminator: boolean): SessionAnalytics {
    if (json == null) {
        return json;
    }
    return {
        
        'activeSessions': json['active_sessions'],
        'avgSessionDurationMinutes': json['avg_session_duration_minutes'],
        'sessionsByDevice': (json['sessions_by_device'] == null ? null : (json['sessions_by_device'] as Array<any>).map(DeviceTypeUsageFromJSON)),
        'sessionsByLocation': (json['sessions_by_location'] == null ? null : (json['sessions_by_location'] as Array<any>).map(LocationUsageFromJSON)),
    };
}

export function SessionAnalyticsToJSON(json: any): SessionAnalytics {
    return SessionAnalyticsToJSONTyped(json, false);
}

export function SessionAnalyticsToJSONTyped(value?: SessionAnalytics | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'active_sessions': value['activeSessions'],
        'avg_session_duration_minutes': value['avgSessionDurationMinutes'],
        'sessions_by_device': (value['sessionsByDevice'] == null ? null : (value['sessionsByDevice'] as Array<any>).map(DeviceTypeUsageToJSON)),
        'sessions_by_location': (value['sessionsByLocation'] == null ? null : (value['sessionsByLocation'] as Array<any>).map(LocationUsageToJSON)),
    };
}

