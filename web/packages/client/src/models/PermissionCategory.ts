/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


/**
 * 
 * @export
 */
export const PermissionCategory = {
    Platform: 'platform',
    Organization: 'organization',
    Application: 'application',
    Resource: 'resource',
    Membership: 'membership',
    UserManagement: 'user_management',
    SelfAccess: 'self_access',
    ApiManagement: 'api_management',
    Rbac: 'rbac',
    Security: 'security',
    Integration: 'integration',
    System: 'system',
    PlatformManagement: 'platform_management',
    Billing: 'billing',
    Analytics: 'analytics',
    Compliance: 'compliance',
    Support: 'support'
} as const;
export type PermissionCategory = typeof PermissionCategory[keyof typeof PermissionCategory];


export function instanceOfPermissionCategory(value: any): boolean {
    for (const key in PermissionCategory) {
        if (Object.prototype.hasOwnProperty.call(PermissionCategory, key)) {
            if (PermissionCategory[key as keyof typeof PermissionCategory] === value) {
                return true;
            }
        }
    }
    return false;
}

export function PermissionCategoryFromJSON(json: any): PermissionCategory {
    return PermissionCategoryFromJSONTyped(json, false);
}

export function PermissionCategoryFromJSONTyped(json: any, ignoreDiscriminator: boolean): PermissionCategory {
    return json as PermissionCategory;
}

export function PermissionCategoryToJSON(value?: PermissionCategory | null): any {
    return value as any;
}

export function PermissionCategoryToJSONTyped(value: any, ignoreDiscriminator: boolean): PermissionCategory {
    return value as PermissionCategory;
}

