/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface APIKeyActivity
 */
export interface APIKeyActivity {
    [key: string]: any | any;
    /**
     * Action type
     * @type {string}
     * @memberof APIKeyActivity
     */
    action: string;
    /**
     * API endpoint
     * @type {string}
     * @memberof APIKeyActivity
     */
    endpoint?: string;
    /**
     * Error message
     * @type {string}
     * @memberof APIKeyActivity
     */
    error?: string;
    /**
     * Activity ID
     * @type {string}
     * @memberof APIKeyActivity
     */
    id: string;
    /**
     * IP address
     * @type {string}
     * @memberof APIKeyActivity
     */
    ipAddress?: string;
    /**
     * API key ID
     * @type {string}
     * @memberof APIKeyActivity
     */
    keyId: string;
    /**
     * Additional activity metadata
     * @type {object}
     * @memberof APIKeyActivity
     */
    metadata?: object;
    /**
     * HTTP method
     * @type {string}
     * @memberof APIKeyActivity
     */
    method?: string;
    /**
     * Public key used
     * @type {string}
     * @memberof APIKeyActivity
     */
    publicKey?: string;
    /**
     * Response time in milliseconds
     * @type {number}
     * @memberof APIKeyActivity
     */
    responseTime?: number;
    /**
     * HTTP status code
     * @type {number}
     * @memberof APIKeyActivity
     */
    statusCode?: number;
    /**
     * Whether request was successful
     * @type {boolean}
     * @memberof APIKeyActivity
     */
    success: boolean;
    /**
     * Activity timestamp
     * @type {Date}
     * @memberof APIKeyActivity
     */
    timestamp: Date;
    /**
     * User agent
     * @type {string}
     * @memberof APIKeyActivity
     */
    userAgent?: string;
}

/**
 * Check if a given object implements the APIKeyActivity interface.
 */
export function instanceOfAPIKeyActivity(value: object): value is APIKeyActivity {
    if (!('action' in value) || value['action'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('keyId' in value) || value['keyId'] === undefined) return false;
    if (!('success' in value) || value['success'] === undefined) return false;
    if (!('timestamp' in value) || value['timestamp'] === undefined) return false;
    return true;
}

export function APIKeyActivityFromJSON(json: any): APIKeyActivity {
    return APIKeyActivityFromJSONTyped(json, false);
}

export function APIKeyActivityFromJSONTyped(json: any, ignoreDiscriminator: boolean): APIKeyActivity {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        'action': json['action'],
        'endpoint': json['endpoint'] == null ? undefined : json['endpoint'],
        'error': json['error'] == null ? undefined : json['error'],
        'id': json['id'],
        'ipAddress': json['ipAddress'] == null ? undefined : json['ipAddress'],
        'keyId': json['keyId'],
        'metadata': json['metadata'] == null ? undefined : json['metadata'],
        'method': json['method'] == null ? undefined : json['method'],
        'publicKey': json['publicKey'] == null ? undefined : json['publicKey'],
        'responseTime': json['responseTime'] == null ? undefined : json['responseTime'],
        'statusCode': json['statusCode'] == null ? undefined : json['statusCode'],
        'success': json['success'],
        'timestamp': (new Date(json['timestamp'])),
        'userAgent': json['userAgent'] == null ? undefined : json['userAgent'],
    };
}

export function APIKeyActivityToJSON(json: any): APIKeyActivity {
    return APIKeyActivityToJSONTyped(json, false);
}

export function APIKeyActivityToJSONTyped(value?: APIKeyActivity | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
            ...value,
        'action': value['action'],
        'endpoint': value['endpoint'],
        'error': value['error'],
        'id': value['id'],
        'ipAddress': value['ipAddress'],
        'keyId': value['keyId'],
        'metadata': value['metadata'],
        'method': value['method'],
        'publicKey': value['publicKey'],
        'responseTime': value['responseTime'],
        'statusCode': value['statusCode'],
        'success': value['success'],
        'timestamp': ((value['timestamp']).toISOString()),
        'userAgent': value['userAgent'],
    };
}

