/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TestWebhookResponse
 */
export interface TestWebhookResponse {
    [key: string]: any | any;
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof TestWebhookResponse
     */
    readonly $schema?: string;
    /**
     * Request duration in milliseconds
     * @type {number}
     * @memberof TestWebhookResponse
     */
    duration: number;
    /**
     * Error message if failed
     * @type {string}
     * @memberof TestWebhookResponse
     */
    error?: string;
    /**
     * Response headers
     * @type {{ [key: string]: string; }}
     * @memberof TestWebhookResponse
     */
    headers?: { [key: string]: string; };
    /**
     * Response body
     * @type {string}
     * @memberof TestWebhookResponse
     */
    responseBody: string;
    /**
     * HTTP status code
     * @type {number}
     * @memberof TestWebhookResponse
     */
    statusCode: number;
    /**
     * Whether test was successful
     * @type {boolean}
     * @memberof TestWebhookResponse
     */
    success: boolean;
}

/**
 * Check if a given object implements the TestWebhookResponse interface.
 */
export function instanceOfTestWebhookResponse(value: object): value is TestWebhookResponse {
    if (!('duration' in value) || value['duration'] === undefined) return false;
    if (!('responseBody' in value) || value['responseBody'] === undefined) return false;
    if (!('statusCode' in value) || value['statusCode'] === undefined) return false;
    if (!('success' in value) || value['success'] === undefined) return false;
    return true;
}

export function TestWebhookResponseFromJSON(json: any): TestWebhookResponse {
    return TestWebhookResponseFromJSONTyped(json, false);
}

export function TestWebhookResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): TestWebhookResponse {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        '$schema': json['$schema'] == null ? undefined : json['$schema'],
        'duration': json['duration'],
        'error': json['error'] == null ? undefined : json['error'],
        'headers': json['headers'] == null ? undefined : json['headers'],
        'responseBody': json['responseBody'],
        'statusCode': json['statusCode'],
        'success': json['success'],
    };
}

export function TestWebhookResponseToJSON(json: any): TestWebhookResponse {
    return TestWebhookResponseToJSONTyped(json, false);
}

export function TestWebhookResponseToJSONTyped(value?: Omit<TestWebhookResponse, '$schema'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
            ...value,
        'duration': value['duration'],
        'error': value['error'],
        'headers': value['headers'],
        'responseBody': value['responseBody'],
        'statusCode': value['statusCode'],
        'success': value['success'],
    };
}

