/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface APIKeySummary
 */
export interface APIKeySummary {
    [key: string]: any | any;
    /**
     * Whether key is active
     * @type {boolean}
     * @memberof APIKeySummary
     */
    active: boolean;
    /**
     * Creation timestamp
     * @type {Date}
     * @memberof APIKeySummary
     */
    createdAt: Date;
    /**
     * Expiration
     * @type {Date}
     * @memberof APIKeySummary
     */
    expiresAt?: Date;
    /**
     * API key ID
     * @type {string}
     * @memberof APIKeySummary
     */
    id: string;
    /**
     * Key prefix for identification
     * @type {string}
     * @memberof APIKeySummary
     */
    keyPrefix: string;
    /**
     * Last usage
     * @type {Date}
     * @memberof APIKeySummary
     */
    lastUsed?: Date;
    /**
     * API key name
     * @type {string}
     * @memberof APIKeySummary
     */
    name: string;
    /**
     * Number of permissions
     * @type {number}
     * @memberof APIKeySummary
     */
    permissionCount: number;
    /**
     * API key type
     * @type {string}
     * @memberof APIKeySummary
     */
    type: string;
    /**
     * Total usage count
     * @type {number}
     * @memberof APIKeySummary
     */
    usageCount: number;
}

/**
 * Check if a given object implements the APIKeySummary interface.
 */
export function instanceOfAPIKeySummary(value: object): value is APIKeySummary {
    if (!('active' in value) || value['active'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('keyPrefix' in value) || value['keyPrefix'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('permissionCount' in value) || value['permissionCount'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('usageCount' in value) || value['usageCount'] === undefined) return false;
    return true;
}

export function APIKeySummaryFromJSON(json: any): APIKeySummary {
    return APIKeySummaryFromJSONTyped(json, false);
}

export function APIKeySummaryFromJSONTyped(json: any, ignoreDiscriminator: boolean): APIKeySummary {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        'active': json['active'],
        'createdAt': (new Date(json['createdAt'])),
        'expiresAt': json['expiresAt'] == null ? undefined : (new Date(json['expiresAt'])),
        'id': json['id'],
        'keyPrefix': json['keyPrefix'],
        'lastUsed': json['lastUsed'] == null ? undefined : (new Date(json['lastUsed'])),
        'name': json['name'],
        'permissionCount': json['permissionCount'],
        'type': json['type'],
        'usageCount': json['usageCount'],
    };
}

export function APIKeySummaryToJSON(json: any): APIKeySummary {
    return APIKeySummaryToJSONTyped(json, false);
}

export function APIKeySummaryToJSONTyped(value?: APIKeySummary | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
            ...value,
        'active': value['active'],
        'createdAt': ((value['createdAt']).toISOString()),
        'expiresAt': value['expiresAt'] == null ? undefined : ((value['expiresAt']).toISOString()),
        'id': value['id'],
        'keyPrefix': value['keyPrefix'],
        'lastUsed': value['lastUsed'] == null ? undefined : ((value['lastUsed']).toISOString()),
        'name': value['name'],
        'permissionCount': value['permissionCount'],
        'type': value['type'],
        'usageCount': value['usageCount'],
    };
}

