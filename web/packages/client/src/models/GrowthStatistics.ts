/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { GrowthPredictions } from './GrowthPredictions';
import {
    GrowthPredictionsFromJSON,
    GrowthPredictionsFromJSONTyped,
    GrowthPredictionsToJSON,
    GrowthPredictionsToJSONTyped,
} from './GrowthPredictions';
import type { MonthlyGrowth } from './MonthlyGrowth';
import {
    MonthlyGrowthFromJSON,
    MonthlyGrowthFromJSONTyped,
    MonthlyGrowthToJSON,
    MonthlyGrowthToJSONTyped,
} from './MonthlyGrowth';

/**
 * 
 * @export
 * @interface GrowthStatistics
 */
export interface GrowthStatistics {
    /**
     * Monthly growth data
     * @type {Array<MonthlyGrowth>}
     * @memberof GrowthStatistics
     */
    monthly: Array<MonthlyGrowth> | null;
    /**
     * Organization growth rate percentage
     * @type {number}
     * @memberof GrowthStatistics
     */
    orgGrowthRate: number;
    /**
     * Growth predictions
     * @type {GrowthPredictions}
     * @memberof GrowthStatistics
     */
    predictions: GrowthPredictions;
    /**
     * Revenue growth rate percentage
     * @type {number}
     * @memberof GrowthStatistics
     */
    revenueGrowthRate: number;
    /**
     * User growth rate percentage
     * @type {number}
     * @memberof GrowthStatistics
     */
    userGrowthRate: number;
}

/**
 * Check if a given object implements the GrowthStatistics interface.
 */
export function instanceOfGrowthStatistics(value: object): value is GrowthStatistics {
    if (!('monthly' in value) || value['monthly'] === undefined) return false;
    if (!('orgGrowthRate' in value) || value['orgGrowthRate'] === undefined) return false;
    if (!('predictions' in value) || value['predictions'] === undefined) return false;
    if (!('revenueGrowthRate' in value) || value['revenueGrowthRate'] === undefined) return false;
    if (!('userGrowthRate' in value) || value['userGrowthRate'] === undefined) return false;
    return true;
}

export function GrowthStatisticsFromJSON(json: any): GrowthStatistics {
    return GrowthStatisticsFromJSONTyped(json, false);
}

export function GrowthStatisticsFromJSONTyped(json: any, ignoreDiscriminator: boolean): GrowthStatistics {
    if (json == null) {
        return json;
    }
    return {
        
        'monthly': (json['monthly'] == null ? null : (json['monthly'] as Array<any>).map(MonthlyGrowthFromJSON)),
        'orgGrowthRate': json['orgGrowthRate'],
        'predictions': GrowthPredictionsFromJSON(json['predictions']),
        'revenueGrowthRate': json['revenueGrowthRate'],
        'userGrowthRate': json['userGrowthRate'],
    };
}

export function GrowthStatisticsToJSON(json: any): GrowthStatistics {
    return GrowthStatisticsToJSONTyped(json, false);
}

export function GrowthStatisticsToJSONTyped(value?: GrowthStatistics | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'monthly': (value['monthly'] == null ? null : (value['monthly'] as Array<any>).map(MonthlyGrowthToJSON)),
        'orgGrowthRate': value['orgGrowthRate'],
        'predictions': GrowthPredictionsToJSON(value['predictions']),
        'revenueGrowthRate': value['revenueGrowthRate'],
        'userGrowthRate': value['userGrowthRate'],
    };
}

