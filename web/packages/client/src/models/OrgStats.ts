/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface OrgStats
 */
export interface OrgStats {
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof OrgStats
     */
    readonly $schema?: string;
    /**
     * Number of active end users
     * @type {number}
     * @memberof OrgStats
     */
    activeEndUsers: number;
    /**
     * Number of active members
     * @type {number}
     * @memberof OrgStats
     */
    activeMembers: number;
    /**
     * API calls this month
     * @type {number}
     * @memberof OrgStats
     */
    apiCallsThisMonth: number;
    /**
     * Last organization activity
     * @type {Date}
     * @memberof OrgStats
     */
    lastActivity?: Date;
    /**
     * Logins this month
     * @type {number}
     * @memberof OrgStats
     */
    loginsThisMonth: number;
    /**
     * Number of pending invitations
     * @type {number}
     * @memberof OrgStats
     */
    pendingInvitations: number;
    /**
     * Storage used in bytes
     * @type {number}
     * @memberof OrgStats
     */
    storageUsed: number;
    /**
     * Total number of end users
     * @type {number}
     * @memberof OrgStats
     */
    totalEndUsers: number;
    /**
     * Total number of members
     * @type {number}
     * @memberof OrgStats
     */
    totalMembers: number;
}

/**
 * Check if a given object implements the OrgStats interface.
 */
export function instanceOfOrgStats(value: object): value is OrgStats {
    if (!('activeEndUsers' in value) || value['activeEndUsers'] === undefined) return false;
    if (!('activeMembers' in value) || value['activeMembers'] === undefined) return false;
    if (!('apiCallsThisMonth' in value) || value['apiCallsThisMonth'] === undefined) return false;
    if (!('loginsThisMonth' in value) || value['loginsThisMonth'] === undefined) return false;
    if (!('pendingInvitations' in value) || value['pendingInvitations'] === undefined) return false;
    if (!('storageUsed' in value) || value['storageUsed'] === undefined) return false;
    if (!('totalEndUsers' in value) || value['totalEndUsers'] === undefined) return false;
    if (!('totalMembers' in value) || value['totalMembers'] === undefined) return false;
    return true;
}

export function OrgStatsFromJSON(json: any): OrgStats {
    return OrgStatsFromJSONTyped(json, false);
}

export function OrgStatsFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrgStats {
    if (json == null) {
        return json;
    }
    return {
        
        '$schema': json['$schema'] == null ? undefined : json['$schema'],
        'activeEndUsers': json['activeEndUsers'],
        'activeMembers': json['activeMembers'],
        'apiCallsThisMonth': json['apiCallsThisMonth'],
        'lastActivity': json['lastActivity'] == null ? undefined : (new Date(json['lastActivity'])),
        'loginsThisMonth': json['loginsThisMonth'],
        'pendingInvitations': json['pendingInvitations'],
        'storageUsed': json['storageUsed'],
        'totalEndUsers': json['totalEndUsers'],
        'totalMembers': json['totalMembers'],
    };
}

export function OrgStatsToJSON(json: any): OrgStats {
    return OrgStatsToJSONTyped(json, false);
}

export function OrgStatsToJSONTyped(value?: Omit<OrgStats, '$schema'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'activeEndUsers': value['activeEndUsers'],
        'activeMembers': value['activeMembers'],
        'apiCallsThisMonth': value['apiCallsThisMonth'],
        'lastActivity': value['lastActivity'] == null ? undefined : ((value['lastActivity']).toISOString()),
        'loginsThisMonth': value['loginsThisMonth'],
        'pendingInvitations': value['pendingInvitations'],
        'storageUsed': value['storageUsed'],
        'totalEndUsers': value['totalEndUsers'],
        'totalMembers': value['totalMembers'],
    };
}

