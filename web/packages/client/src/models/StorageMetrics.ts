/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface StorageMetrics
 */
export interface StorageMetrics {
    [key: string]: any | any;
    /**
     * 
     * @type {number}
     * @memberof StorageMetrics
     */
    avgFileSizeBytes: number;
    /**
     * 
     * @type {number}
     * @memberof StorageMetrics
     */
    filesCount: number;
    /**
     * 
     * @type {number}
     * @memberof StorageMetrics
     */
    totalStorageBytes: number;
    /**
     * 
     * @type {number}
     * @memberof StorageMetrics
     */
    usagePercent: number;
    /**
     * 
     * @type {number}
     * @memberof StorageMetrics
     */
    usedStorageBytes: number;
}

/**
 * Check if a given object implements the StorageMetrics interface.
 */
export function instanceOfStorageMetrics(value: object): value is StorageMetrics {
    if (!('avgFileSizeBytes' in value) || value['avgFileSizeBytes'] === undefined) return false;
    if (!('filesCount' in value) || value['filesCount'] === undefined) return false;
    if (!('totalStorageBytes' in value) || value['totalStorageBytes'] === undefined) return false;
    if (!('usagePercent' in value) || value['usagePercent'] === undefined) return false;
    if (!('usedStorageBytes' in value) || value['usedStorageBytes'] === undefined) return false;
    return true;
}

export function StorageMetricsFromJSON(json: any): StorageMetrics {
    return StorageMetricsFromJSONTyped(json, false);
}

export function StorageMetricsFromJSONTyped(json: any, ignoreDiscriminator: boolean): StorageMetrics {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        'avgFileSizeBytes': json['avg_file_size_bytes'],
        'filesCount': json['files_count'],
        'totalStorageBytes': json['total_storage_bytes'],
        'usagePercent': json['usage_percent'],
        'usedStorageBytes': json['used_storage_bytes'],
    };
}

export function StorageMetricsToJSON(json: any): StorageMetrics {
    return StorageMetricsToJSONTyped(json, false);
}

export function StorageMetricsToJSONTyped(value?: StorageMetrics | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
            ...value,
        'avg_file_size_bytes': value['avgFileSizeBytes'],
        'files_count': value['filesCount'],
        'total_storage_bytes': value['totalStorageBytes'],
        'usage_percent': value['usagePercent'],
        'used_storage_bytes': value['usedStorageBytes'],
    };
}

