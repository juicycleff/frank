/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { FeatureVariation } from './FeatureVariation';
import {
    FeatureVariationFromJSON,
    FeatureVariationFromJSONTyped,
    FeatureVariationToJSON,
    FeatureVariationToJSONTyped,
} from './FeatureVariation';

/**
 * 
 * @export
 * @interface CreateFeatureFlagRequest
 */
export interface CreateFeatureFlagRequest {
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof CreateFeatureFlagRequest
     */
    readonly $schema?: string;
    /**
     * 
     * @type {any}
     * @memberof CreateFeatureFlagRequest
     */
    defaultValue: any | null;
    /**
     * 
     * @type {string}
     * @memberof CreateFeatureFlagRequest
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof CreateFeatureFlagRequest
     */
    environment: string;
    /**
     * 
     * @type {string}
     * @memberof CreateFeatureFlagRequest
     */
    key: string;
    /**
     * 
     * @type {string}
     * @memberof CreateFeatureFlagRequest
     */
    name: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof CreateFeatureFlagRequest
     */
    tags?: Array<string> | null;
    /**
     * 
     * @type {string}
     * @memberof CreateFeatureFlagRequest
     */
    type: string;
    /**
     * 
     * @type {Array<FeatureVariation>}
     * @memberof CreateFeatureFlagRequest
     */
    variations?: Array<FeatureVariation> | null;
}

/**
 * Check if a given object implements the CreateFeatureFlagRequest interface.
 */
export function instanceOfCreateFeatureFlagRequest(value: object): value is CreateFeatureFlagRequest {
    if (!('defaultValue' in value) || value['defaultValue'] === undefined) return false;
    if (!('environment' in value) || value['environment'] === undefined) return false;
    if (!('key' in value) || value['key'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    return true;
}

export function CreateFeatureFlagRequestFromJSON(json: any): CreateFeatureFlagRequest {
    return CreateFeatureFlagRequestFromJSONTyped(json, false);
}

export function CreateFeatureFlagRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateFeatureFlagRequest {
    if (json == null) {
        return json;
    }
    return {
        
        '$schema': json['$schema'] == null ? undefined : json['$schema'],
        'defaultValue': json['default_value'],
        'description': json['description'] == null ? undefined : json['description'],
        'environment': json['environment'],
        'key': json['key'],
        'name': json['name'],
        'tags': json['tags'] == null ? undefined : json['tags'],
        'type': json['type'],
        'variations': json['variations'] == null ? undefined : ((json['variations'] as Array<any>).map(FeatureVariationFromJSON)),
    };
}

export function CreateFeatureFlagRequestToJSON(json: any): CreateFeatureFlagRequest {
    return CreateFeatureFlagRequestToJSONTyped(json, false);
}

export function CreateFeatureFlagRequestToJSONTyped(value?: Omit<CreateFeatureFlagRequest, '$schema'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'default_value': value['defaultValue'],
        'description': value['description'],
        'environment': value['environment'],
        'key': value['key'],
        'name': value['name'],
        'tags': value['tags'],
        'type': value['type'],
        'variations': value['variations'] == null ? undefined : ((value['variations'] as Array<any>).map(FeatureVariationToJSON)),
    };
}

