/* tslint:disable */
/* eslint-disable */
/**
 * My Project
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface MemberSummary
 */
export interface MemberSummary {
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof MemberSummary
     */
    readonly $schema?: string;
    /**
     * User avatar URL
     * @type {string}
     * @memberof MemberSummary
     */
    avatar?: string;
    /**
     * Member department
     * @type {string}
     * @memberof MemberSummary
     */
    department?: string;
    /**
     * Member email
     * @type {string}
     * @memberof MemberSummary
     */
    email: string;
    /**
     * First name
     * @type {string}
     * @memberof MemberSummary
     */
    firstName?: string;
    /**
     * User full name
     * @type {string}
     * @memberof MemberSummary
     */
    fullName: string;
    /**
     * Who invited this member
     * @type {string}
     * @memberof MemberSummary
     */
    invitedBy?: string;
    /**
     * Inviter full name
     * @type {string}
     * @memberof MemberSummary
     */
    inviterName?: string;
    /**
     * Whether member handles billing
     * @type {boolean}
     * @memberof MemberSummary
     */
    isBilling: boolean;
    /**
     * Whether member is the owner
     * @type {boolean}
     * @memberof MemberSummary
     */
    isOwner: boolean;
    /**
     * Whether member is primary contact
     * @type {boolean}
     * @memberof MemberSummary
     */
    isPrimary: boolean;
    /**
     * Member job title
     * @type {string}
     * @memberof MemberSummary
     */
    jobTitle?: string;
    /**
     * When member joined
     * @type {Date}
     * @memberof MemberSummary
     */
    joinedAt?: Date;
    /**
     * Last activity
     * @type {Date}
     * @memberof MemberSummary
     */
    lastActive?: Date;
    /**
     * Last name
     * @type {string}
     * @memberof MemberSummary
     */
    lastName?: string;
    /**
     * Last activity timestamp
     * @type {Date}
     * @memberof MemberSummary
     */
    lastSeenAt?: Date;
    /**
     * Member location
     * @type {string}
     * @memberof MemberSummary
     */
    location?: string;
    /**
     * Role display name
     * @type {string}
     * @memberof MemberSummary
     */
    roleDisplay: string;
    /**
     * Role ID
     * @type {string}
     * @memberof MemberSummary
     */
    roleId: string;
    /**
     * Role name
     * @type {string}
     * @memberof MemberSummary
     */
    roleName: string;
    /**
     * Membership status
     * @type {string}
     * @memberof MemberSummary
     */
    status: string;
    /**
     * Member tags
     * @type {Array<string>}
     * @memberof MemberSummary
     */
    tags?: Array<string> | null;
    /**
     * Member timezone
     * @type {string}
     * @memberof MemberSummary
     */
    timezone?: string;
    /**
     * User ID
     * @type {string}
     * @memberof MemberSummary
     */
    userId: string;
}

export function MemberSummaryFromJSON(json: any): MemberSummary {
    return MemberSummaryFromJSONTyped(json, false);
}

export function MemberSummaryFromJSONTyped(json: any, ignoreDiscriminator: boolean): MemberSummary {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        '$schema': !exists(json, '$schema') ? undefined : json['$schema'],
        'avatar': !exists(json, 'avatar') ? undefined : json['avatar'],
        'department': !exists(json, 'department') ? undefined : json['department'],
        'email': json['email'],
        'firstName': !exists(json, 'firstName') ? undefined : json['firstName'],
        'fullName': json['fullName'],
        'invitedBy': !exists(json, 'invitedBy') ? undefined : json['invitedBy'],
        'inviterName': !exists(json, 'inviterName') ? undefined : json['inviterName'],
        'isBilling': json['isBilling'],
        'isOwner': json['isOwner'],
        'isPrimary': json['isPrimary'],
        'jobTitle': !exists(json, 'jobTitle') ? undefined : json['jobTitle'],
        'joinedAt': !exists(json, 'joinedAt') ? undefined : (new Date(json['joinedAt'])),
        'lastActive': !exists(json, 'lastActive') ? undefined : (new Date(json['lastActive'])),
        'lastName': !exists(json, 'lastName') ? undefined : json['lastName'],
        'lastSeenAt': !exists(json, 'lastSeenAt') ? undefined : (new Date(json['lastSeenAt'])),
        'location': !exists(json, 'location') ? undefined : json['location'],
        'roleDisplay': json['roleDisplay'],
        'roleId': json['roleId'],
        'roleName': json['roleName'],
        'status': json['status'],
        'tags': !exists(json, 'tags') ? undefined : json['tags'],
        'timezone': !exists(json, 'timezone') ? undefined : json['timezone'],
        'userId': json['userId'],
    };
}

export function MemberSummaryToJSON(value?: MemberSummary | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'avatar': value.avatar,
        'department': value.department,
        'email': value.email,
        'firstName': value.firstName,
        'fullName': value.fullName,
        'invitedBy': value.invitedBy,
        'inviterName': value.inviterName,
        'isBilling': value.isBilling,
        'isOwner': value.isOwner,
        'isPrimary': value.isPrimary,
        'jobTitle': value.jobTitle,
        'joinedAt': value.joinedAt === undefined ? undefined : (value.joinedAt.toISOString()),
        'lastActive': value.lastActive === undefined ? undefined : (value.lastActive.toISOString()),
        'lastName': value.lastName,
        'lastSeenAt': value.lastSeenAt === undefined ? undefined : (value.lastSeenAt.toISOString()),
        'location': value.location,
        'roleDisplay': value.roleDisplay,
        'roleId': value.roleId,
        'roleName': value.roleName,
        'status': value.status,
        'tags': value.tags,
        'timezone': value.timezone,
        'userId': value.userId,
    };
}


