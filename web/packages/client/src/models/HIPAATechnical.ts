/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ControlStatus } from './ControlStatus';
import {
    ControlStatusFromJSON,
    ControlStatusFromJSONTyped,
    ControlStatusToJSON,
    ControlStatusToJSONTyped,
} from './ControlStatus';

/**
 * 
 * @export
 * @interface HIPAATechnical
 */
export interface HIPAATechnical {
    /**
     * 
     * @type {ControlStatus}
     * @memberof HIPAATechnical
     */
    accessControl: ControlStatus;
    /**
     * 
     * @type {ControlStatus}
     * @memberof HIPAATechnical
     */
    auditControls: ControlStatus;
    /**
     * 
     * @type {ControlStatus}
     * @memberof HIPAATechnical
     */
    integrity: ControlStatus;
    /**
     * 
     * @type {ControlStatus}
     * @memberof HIPAATechnical
     */
    transmission: ControlStatus;
}

/**
 * Check if a given object implements the HIPAATechnical interface.
 */
export function instanceOfHIPAATechnical(value: object): value is HIPAATechnical {
    if (!('accessControl' in value) || value['accessControl'] === undefined) return false;
    if (!('auditControls' in value) || value['auditControls'] === undefined) return false;
    if (!('integrity' in value) || value['integrity'] === undefined) return false;
    if (!('transmission' in value) || value['transmission'] === undefined) return false;
    return true;
}

export function HIPAATechnicalFromJSON(json: any): HIPAATechnical {
    return HIPAATechnicalFromJSONTyped(json, false);
}

export function HIPAATechnicalFromJSONTyped(json: any, ignoreDiscriminator: boolean): HIPAATechnical {
    if (json == null) {
        return json;
    }
    return {
        
        'accessControl': ControlStatusFromJSON(json['access_control']),
        'auditControls': ControlStatusFromJSON(json['audit_controls']),
        'integrity': ControlStatusFromJSON(json['integrity']),
        'transmission': ControlStatusFromJSON(json['transmission']),
    };
}

export function HIPAATechnicalToJSON(json: any): HIPAATechnical {
    return HIPAATechnicalToJSONTyped(json, false);
}

export function HIPAATechnicalToJSONTyped(value?: HIPAATechnical | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'access_control': ControlStatusToJSON(value['accessControl']),
        'audit_controls': ControlStatusToJSON(value['auditControls']),
        'integrity': ControlStatusToJSON(value['integrity']),
        'transmission': ControlStatusToJSON(value['transmission']),
    };
}

