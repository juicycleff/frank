/* tslint:disable */
/* eslint-disable */
/**
 * My Project
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    AuditSettings,
    AuditSettingsFromJSON,
    AuditSettingsFromJSONTyped,
    AuditSettingsToJSON,
    BrandingSettings,
    BrandingSettingsFromJSON,
    BrandingSettingsFromJSONTyped,
    BrandingSettingsToJSON,
    CustomField,
    CustomFieldFromJSON,
    CustomFieldFromJSONTyped,
    CustomFieldToJSON,
    MfaSettings,
    MfaSettingsFromJSON,
    MfaSettingsFromJSONTyped,
    MfaSettingsToJSON,
    PasswordPolicy,
    PasswordPolicyFromJSON,
    PasswordPolicyFromJSONTyped,
    PasswordPolicyToJSON,
    SessionSettings,
    SessionSettingsFromJSON,
    SessionSettingsFromJSONTyped,
    SessionSettingsToJSON,
    WebhookSettings,
    WebhookSettingsFromJSON,
    WebhookSettingsFromJSONTyped,
    WebhookSettingsToJSON,
} from './';

/**
 * 
 * @export
 * @interface UpdateOrganizationSettingsRequest
 */
export interface UpdateOrganizationSettingsRequest {
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof UpdateOrganizationSettingsRequest
     */
    readonly $schema?: string;
    /**
     * Updated allowed domains
     * @type {Array<string>}
     * @memberof UpdateOrganizationSettingsRequest
     */
    allowedDomains?: Array<string> | null;
    /**
     * 
     * @type {AuditSettings}
     * @memberof UpdateOrganizationSettingsRequest
     */
    auditSettings?: AuditSettings;
    /**
     * 
     * @type {BrandingSettings}
     * @memberof UpdateOrganizationSettingsRequest
     */
    branding?: BrandingSettings;
    /**
     * Updated custom fields
     * @type {Array<CustomField>}
     * @memberof UpdateOrganizationSettingsRequest
     */
    customFields?: Array<CustomField> | null;
    /**
     * 
     * @type {MfaSettings}
     * @memberof UpdateOrganizationSettingsRequest
     */
    mfaSettings?: MfaSettings;
    /**
     * 
     * @type {PasswordPolicy}
     * @memberof UpdateOrganizationSettingsRequest
     */
    passwordPolicy?: PasswordPolicy;
    /**
     * Updated email verification requirement
     * @type {boolean}
     * @memberof UpdateOrganizationSettingsRequest
     */
    requireEmailVerification?: boolean;
    /**
     * Updated phone verification requirement
     * @type {boolean}
     * @memberof UpdateOrganizationSettingsRequest
     */
    requirePhoneVerification?: boolean;
    /**
     * 
     * @type {SessionSettings}
     * @memberof UpdateOrganizationSettingsRequest
     */
    sessionSettings?: SessionSettings;
    /**
     * 
     * @type {WebhookSettings}
     * @memberof UpdateOrganizationSettingsRequest
     */
    webhookSettings?: WebhookSettings;
}

export function UpdateOrganizationSettingsRequestFromJSON(json: any): UpdateOrganizationSettingsRequest {
    return UpdateOrganizationSettingsRequestFromJSONTyped(json, false);
}

export function UpdateOrganizationSettingsRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateOrganizationSettingsRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        '$schema': !exists(json, '$schema') ? undefined : json['$schema'],
        'allowedDomains': !exists(json, 'allowedDomains') ? undefined : json['allowedDomains'],
        'auditSettings': !exists(json, 'auditSettings') ? undefined : AuditSettingsFromJSON(json['auditSettings']),
        'branding': !exists(json, 'branding') ? undefined : BrandingSettingsFromJSON(json['branding']),
        'customFields': !exists(json, 'customFields') ? undefined : (json['customFields'] === null ? null : (json['customFields'] as Array<any>).map(CustomFieldFromJSON)),
        'mfaSettings': !exists(json, 'mfaSettings') ? undefined : MfaSettingsFromJSON(json['mfaSettings']),
        'passwordPolicy': !exists(json, 'passwordPolicy') ? undefined : PasswordPolicyFromJSON(json['passwordPolicy']),
        'requireEmailVerification': !exists(json, 'requireEmailVerification') ? undefined : json['requireEmailVerification'],
        'requirePhoneVerification': !exists(json, 'requirePhoneVerification') ? undefined : json['requirePhoneVerification'],
        'sessionSettings': !exists(json, 'sessionSettings') ? undefined : SessionSettingsFromJSON(json['sessionSettings']),
        'webhookSettings': !exists(json, 'webhookSettings') ? undefined : WebhookSettingsFromJSON(json['webhookSettings']),
    };
}

export function UpdateOrganizationSettingsRequestToJSON(value?: UpdateOrganizationSettingsRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'allowedDomains': value.allowedDomains,
        'auditSettings': AuditSettingsToJSON(value.auditSettings),
        'branding': BrandingSettingsToJSON(value.branding),
        'customFields': value.customFields === undefined ? undefined : (value.customFields === null ? null : (value.customFields as Array<any>).map(CustomFieldToJSON)),
        'mfaSettings': MfaSettingsToJSON(value.mfaSettings),
        'passwordPolicy': PasswordPolicyToJSON(value.passwordPolicy),
        'requireEmailVerification': value.requireEmailVerification,
        'requirePhoneVerification': value.requirePhoneVerification,
        'sessionSettings': SessionSettingsToJSON(value.sessionSettings),
        'webhookSettings': WebhookSettingsToJSON(value.webhookSettings),
    };
}


