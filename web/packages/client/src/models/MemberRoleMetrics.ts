/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface MemberRoleMetrics
 */
export interface MemberRoleMetrics {
    /**
     * Churn rate for this role
     * @type {number}
     * @memberof MemberRoleMetrics
     */
    churnRate: number;
    /**
     * Growth rate for this role
     * @type {number}
     * @memberof MemberRoleMetrics
     */
    growthRate: number;
    /**
     * Members who left with this role in period
     * @type {number}
     * @memberof MemberRoleMetrics
     */
    leftMembers: number;
    /**
     * New members with this role in period
     * @type {number}
     * @memberof MemberRoleMetrics
     */
    newMembers: number;
    /**
     * Role ID
     * @type {string}
     * @memberof MemberRoleMetrics
     */
    roleId: string;
    /**
     * Role name
     * @type {string}
     * @memberof MemberRoleMetrics
     */
    roleName: string;
    /**
     * Total members with this role
     * @type {number}
     * @memberof MemberRoleMetrics
     */
    totalMembers: number;
}

/**
 * Check if a given object implements the MemberRoleMetrics interface.
 */
export function instanceOfMemberRoleMetrics(value: object): value is MemberRoleMetrics {
    if (!('churnRate' in value) || value['churnRate'] === undefined) return false;
    if (!('growthRate' in value) || value['growthRate'] === undefined) return false;
    if (!('leftMembers' in value) || value['leftMembers'] === undefined) return false;
    if (!('newMembers' in value) || value['newMembers'] === undefined) return false;
    if (!('roleId' in value) || value['roleId'] === undefined) return false;
    if (!('roleName' in value) || value['roleName'] === undefined) return false;
    if (!('totalMembers' in value) || value['totalMembers'] === undefined) return false;
    return true;
}

export function MemberRoleMetricsFromJSON(json: any): MemberRoleMetrics {
    return MemberRoleMetricsFromJSONTyped(json, false);
}

export function MemberRoleMetricsFromJSONTyped(json: any, ignoreDiscriminator: boolean): MemberRoleMetrics {
    if (json == null) {
        return json;
    }
    return {
        
        'churnRate': json['churnRate'],
        'growthRate': json['growthRate'],
        'leftMembers': json['leftMembers'],
        'newMembers': json['newMembers'],
        'roleId': json['roleId'],
        'roleName': json['roleName'],
        'totalMembers': json['totalMembers'],
    };
}

export function MemberRoleMetricsToJSON(json: any): MemberRoleMetrics {
    return MemberRoleMetricsToJSONTyped(json, false);
}

export function MemberRoleMetricsToJSONTyped(value?: MemberRoleMetrics | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'churnRate': value['churnRate'],
        'growthRate': value['growthRate'],
        'leftMembers': value['leftMembers'],
        'newMembers': value['newMembers'],
        'roleId': value['roleId'],
        'roleName': value['roleName'],
        'totalMembers': value['totalMembers'],
    };
}

