/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface OAuthClientSummary
 */
export interface OAuthClientSummary {
    /**
     * Whether client is active
     * @type {boolean}
     * @memberof OAuthClientSummary
     */
    active: boolean;
    /**
     * OAuth client ID
     * @type {string}
     * @memberof OAuthClientSummary
     */
    clientId: string;
    /**
     * Client name
     * @type {string}
     * @memberof OAuthClientSummary
     */
    clientName: string;
    /**
     * Creation timestamp
     * @type {Date}
     * @memberof OAuthClientSummary
     */
    createdAt: Date;
    /**
     * Client ID
     * @type {string}
     * @memberof OAuthClientSummary
     */
    id: string;
    /**
     * Last usage timestamp
     * @type {Date}
     * @memberof OAuthClientSummary
     */
    lastUsed?: Date;
    /**
     * Logo URL
     * @type {string}
     * @memberof OAuthClientSummary
     */
    logoUri?: string;
    /**
     * Whether client is public
     * @type {boolean}
     * @memberof OAuthClientSummary
     */
    _public: boolean;
    /**
     * Active token count
     * @type {number}
     * @memberof OAuthClientSummary
     */
    tokenCount: number;
}

/**
 * Check if a given object implements the OAuthClientSummary interface.
 */
export function instanceOfOAuthClientSummary(value: object): value is OAuthClientSummary {
    if (!('active' in value) || value['active'] === undefined) return false;
    if (!('clientId' in value) || value['clientId'] === undefined) return false;
    if (!('clientName' in value) || value['clientName'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('_public' in value) || value['_public'] === undefined) return false;
    if (!('tokenCount' in value) || value['tokenCount'] === undefined) return false;
    return true;
}

export function OAuthClientSummaryFromJSON(json: any): OAuthClientSummary {
    return OAuthClientSummaryFromJSONTyped(json, false);
}

export function OAuthClientSummaryFromJSONTyped(json: any, ignoreDiscriminator: boolean): OAuthClientSummary {
    if (json == null) {
        return json;
    }
    return {
        
        'active': json['active'],
        'clientId': json['clientId'],
        'clientName': json['clientName'],
        'createdAt': (new Date(json['createdAt'])),
        'id': json['id'],
        'lastUsed': json['lastUsed'] == null ? undefined : (new Date(json['lastUsed'])),
        'logoUri': json['logoUri'] == null ? undefined : json['logoUri'],
        '_public': json['public'],
        'tokenCount': json['tokenCount'],
    };
}

export function OAuthClientSummaryToJSON(json: any): OAuthClientSummary {
    return OAuthClientSummaryToJSONTyped(json, false);
}

export function OAuthClientSummaryToJSONTyped(value?: OAuthClientSummary | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'active': value['active'],
        'clientId': value['clientId'],
        'clientName': value['clientName'],
        'createdAt': ((value['createdAt']).toISOString()),
        'id': value['id'],
        'lastUsed': value['lastUsed'] == null ? undefined : ((value['lastUsed']).toISOString()),
        'logoUri': value['logoUri'],
        'public': value['_public'],
        'tokenCount': value['tokenCount'],
    };
}

