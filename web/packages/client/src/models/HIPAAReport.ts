/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { HIPAAIncidentSummary } from './HIPAAIncidentSummary';
import {
    HIPAAIncidentSummaryFromJSON,
    HIPAAIncidentSummaryFromJSONTyped,
    HIPAAIncidentSummaryToJSON,
    HIPAAIncidentSummaryToJSONTyped,
} from './HIPAAIncidentSummary';
import type { HIPAASafeguards } from './HIPAASafeguards';
import {
    HIPAASafeguardsFromJSON,
    HIPAASafeguardsFromJSONTyped,
    HIPAASafeguardsToJSON,
    HIPAASafeguardsToJSONTyped,
} from './HIPAASafeguards';
import type { HIPAATrainingSummary } from './HIPAATrainingSummary';
import {
    HIPAATrainingSummaryFromJSON,
    HIPAATrainingSummaryFromJSONTyped,
    HIPAATrainingSummaryToJSON,
    HIPAATrainingSummaryToJSONTyped,
} from './HIPAATrainingSummary';
import type { ComplianceViolation } from './ComplianceViolation';
import {
    ComplianceViolationFromJSON,
    ComplianceViolationFromJSONTyped,
    ComplianceViolationToJSON,
    ComplianceViolationToJSONTyped,
} from './ComplianceViolation';
import type { HIPAARiskAssessment } from './HIPAARiskAssessment';
import {
    HIPAARiskAssessmentFromJSON,
    HIPAARiskAssessmentFromJSONTyped,
    HIPAARiskAssessmentToJSON,
    HIPAARiskAssessmentToJSONTyped,
} from './HIPAARiskAssessment';

/**
 * 
 * @export
 * @interface HIPAAReport
 */
export interface HIPAAReport {
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof HIPAAReport
     */
    readonly $schema?: string;
    /**
     * 
     * @type {number}
     * @memberof HIPAAReport
     */
    complianceScore: number;
    /**
     * 
     * @type {Date}
     * @memberof HIPAAReport
     */
    generatedAt: Date;
    /**
     * 
     * @type {HIPAAIncidentSummary}
     * @memberof HIPAAReport
     */
    incidentSummary: HIPAAIncidentSummary;
    /**
     * 
     * @type {string}
     * @memberof HIPAAReport
     */
    organizationId: string;
    /**
     * 
     * @type {string}
     * @memberof HIPAAReport
     */
    reportPeriod: string;
    /**
     * 
     * @type {HIPAARiskAssessment}
     * @memberof HIPAAReport
     */
    riskAssessment: HIPAARiskAssessment;
    /**
     * 
     * @type {HIPAASafeguards}
     * @memberof HIPAAReport
     */
    safeguards: HIPAASafeguards;
    /**
     * 
     * @type {HIPAATrainingSummary}
     * @memberof HIPAAReport
     */
    trainingSummary: HIPAATrainingSummary;
    /**
     * 
     * @type {Array<ComplianceViolation>}
     * @memberof HIPAAReport
     */
    violations: Array<ComplianceViolation> | null;
}

/**
 * Check if a given object implements the HIPAAReport interface.
 */
export function instanceOfHIPAAReport(value: object): value is HIPAAReport {
    if (!('complianceScore' in value) || value['complianceScore'] === undefined) return false;
    if (!('generatedAt' in value) || value['generatedAt'] === undefined) return false;
    if (!('incidentSummary' in value) || value['incidentSummary'] === undefined) return false;
    if (!('organizationId' in value) || value['organizationId'] === undefined) return false;
    if (!('reportPeriod' in value) || value['reportPeriod'] === undefined) return false;
    if (!('riskAssessment' in value) || value['riskAssessment'] === undefined) return false;
    if (!('safeguards' in value) || value['safeguards'] === undefined) return false;
    if (!('trainingSummary' in value) || value['trainingSummary'] === undefined) return false;
    if (!('violations' in value) || value['violations'] === undefined) return false;
    return true;
}

export function HIPAAReportFromJSON(json: any): HIPAAReport {
    return HIPAAReportFromJSONTyped(json, false);
}

export function HIPAAReportFromJSONTyped(json: any, ignoreDiscriminator: boolean): HIPAAReport {
    if (json == null) {
        return json;
    }
    return {
        
        '$schema': json['$schema'] == null ? undefined : json['$schema'],
        'complianceScore': json['compliance_score'],
        'generatedAt': (new Date(json['generated_at'])),
        'incidentSummary': HIPAAIncidentSummaryFromJSON(json['incident_summary']),
        'organizationId': json['organization_id'],
        'reportPeriod': json['report_period'],
        'riskAssessment': HIPAARiskAssessmentFromJSON(json['risk_assessment']),
        'safeguards': HIPAASafeguardsFromJSON(json['safeguards']),
        'trainingSummary': HIPAATrainingSummaryFromJSON(json['training_summary']),
        'violations': (json['violations'] == null ? null : (json['violations'] as Array<any>).map(ComplianceViolationFromJSON)),
    };
}

export function HIPAAReportToJSON(json: any): HIPAAReport {
    return HIPAAReportToJSONTyped(json, false);
}

export function HIPAAReportToJSONTyped(value?: Omit<HIPAAReport, '$schema'> | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'compliance_score': value['complianceScore'],
        'generated_at': ((value['generatedAt']).toISOString()),
        'incident_summary': HIPAAIncidentSummaryToJSON(value['incidentSummary']),
        'organization_id': value['organizationId'],
        'report_period': value['reportPeriod'],
        'risk_assessment': HIPAARiskAssessmentToJSON(value['riskAssessment']),
        'safeguards': HIPAASafeguardsToJSON(value['safeguards']),
        'training_summary': HIPAATrainingSummaryToJSON(value['trainingSummary']),
        'violations': (value['violations'] == null ? null : (value['violations'] as Array<any>).map(ComplianceViolationToJSON)),
    };
}

