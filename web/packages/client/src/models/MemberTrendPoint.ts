/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface MemberTrendPoint
 */
export interface MemberTrendPoint {
    /**
     * Active members at this date
     * @type {number}
     * @memberof MemberTrendPoint
     */
    activeMembers: number;
    /**
     * Date point
     * @type {Date}
     * @memberof MemberTrendPoint
     */
    date: Date;
    /**
     * Members who left on this date
     * @type {number}
     * @memberof MemberTrendPoint
     */
    leftMembers: number;
    /**
     * New members on this date
     * @type {number}
     * @memberof MemberTrendPoint
     */
    newMembers: number;
    /**
     * Total members at this date
     * @type {number}
     * @memberof MemberTrendPoint
     */
    totalMembers: number;
}

/**
 * Check if a given object implements the MemberTrendPoint interface.
 */
export function instanceOfMemberTrendPoint(value: object): value is MemberTrendPoint {
    if (!('activeMembers' in value) || value['activeMembers'] === undefined) return false;
    if (!('date' in value) || value['date'] === undefined) return false;
    if (!('leftMembers' in value) || value['leftMembers'] === undefined) return false;
    if (!('newMembers' in value) || value['newMembers'] === undefined) return false;
    if (!('totalMembers' in value) || value['totalMembers'] === undefined) return false;
    return true;
}

export function MemberTrendPointFromJSON(json: any): MemberTrendPoint {
    return MemberTrendPointFromJSONTyped(json, false);
}

export function MemberTrendPointFromJSONTyped(json: any, ignoreDiscriminator: boolean): MemberTrendPoint {
    if (json == null) {
        return json;
    }
    return {
        
        'activeMembers': json['activeMembers'],
        'date': (new Date(json['date'])),
        'leftMembers': json['leftMembers'],
        'newMembers': json['newMembers'],
        'totalMembers': json['totalMembers'],
    };
}

export function MemberTrendPointToJSON(json: any): MemberTrendPoint {
    return MemberTrendPointToJSONTyped(json, false);
}

export function MemberTrendPointToJSONTyped(value?: MemberTrendPoint | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'activeMembers': value['activeMembers'],
        'date': ((value['date']).toISOString()),
        'leftMembers': value['leftMembers'],
        'newMembers': value['newMembers'],
        'totalMembers': value['totalMembers'],
    };
}

