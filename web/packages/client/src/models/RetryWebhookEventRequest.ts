/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface RetryWebhookEventRequest
 */
export interface RetryWebhookEventRequest {
    [key: string]: any | any;
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof RetryWebhookEventRequest
     */
    readonly $schema?: string;
    /**
     * Event ID to retry
     * @type {string}
     * @memberof RetryWebhookEventRequest
     */
    eventId: string;
    /**
     * Force retry even if max attempts reached
     * @type {boolean}
     * @memberof RetryWebhookEventRequest
     */
    force: boolean;
}

/**
 * Check if a given object implements the RetryWebhookEventRequest interface.
 */
export function instanceOfRetryWebhookEventRequest(value: object): value is RetryWebhookEventRequest {
    if (!('eventId' in value) || value['eventId'] === undefined) return false;
    if (!('force' in value) || value['force'] === undefined) return false;
    return true;
}

export function RetryWebhookEventRequestFromJSON(json: any): RetryWebhookEventRequest {
    return RetryWebhookEventRequestFromJSONTyped(json, false);
}

export function RetryWebhookEventRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): RetryWebhookEventRequest {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        '$schema': json['$schema'] == null ? undefined : json['$schema'],
        'eventId': json['eventId'],
        'force': json['force'],
    };
}

export function RetryWebhookEventRequestToJSON(json: any): RetryWebhookEventRequest {
    return RetryWebhookEventRequestToJSONTyped(json, false);
}

export function RetryWebhookEventRequestToJSONTyped(value?: Omit<RetryWebhookEventRequest, '$schema'> | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
            ...value,
        'eventId': value['eventId'],
        'force': value['force'],
    };
}

