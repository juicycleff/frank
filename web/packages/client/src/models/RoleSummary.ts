/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RoleType } from './RoleType';
import {
    RoleTypeFromJSON,
    RoleTypeFromJSONTyped,
    RoleTypeToJSON,
    RoleTypeToJSONTyped,
} from './RoleType';

/**
 * 
 * @export
 * @interface RoleSummary
 */
export interface RoleSummary {
    /**
     * Active role
     * @type {boolean}
     * @memberof RoleSummary
     */
    active: boolean;
    /**
     * Role description
     * @type {string}
     * @memberof RoleSummary
     */
    description?: string;
    /**
     * Role display name
     * @type {string}
     * @memberof RoleSummary
     */
    displayName: string;
    /**
     * Role ID
     * @type {string}
     * @memberof RoleSummary
     */
    id: string;
    /**
     * Role name
     * @type {string}
     * @memberof RoleSummary
     */
    name: string;
    /**
     * Role priority
     * @type {number}
     * @memberof RoleSummary
     */
    priority: number;
    /**
     * Role type
     * @type {RoleType}
     * @memberof RoleSummary
     */
    roleType: RoleType;
}



/**
 * Check if a given object implements the RoleSummary interface.
 */
export function instanceOfRoleSummary(value: object): value is RoleSummary {
    if (!('active' in value) || value['active'] === undefined) return false;
    if (!('displayName' in value) || value['displayName'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('priority' in value) || value['priority'] === undefined) return false;
    if (!('roleType' in value) || value['roleType'] === undefined) return false;
    return true;
}

export function RoleSummaryFromJSON(json: any): RoleSummary {
    return RoleSummaryFromJSONTyped(json, false);
}

export function RoleSummaryFromJSONTyped(json: any, ignoreDiscriminator: boolean): RoleSummary {
    if (json == null) {
        return json;
    }
    return {
        
        'active': json['active'],
        'description': json['description'] == null ? undefined : json['description'],
        'displayName': json['displayName'],
        'id': json['id'],
        'name': json['name'],
        'priority': json['priority'],
        'roleType': RoleTypeFromJSON(json['roleType']),
    };
}

export function RoleSummaryToJSON(json: any): RoleSummary {
    return RoleSummaryToJSONTyped(json, false);
}

export function RoleSummaryToJSONTyped(value?: RoleSummary | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'active': value['active'],
        'description': value['description'],
        'displayName': value['displayName'],
        'id': value['id'],
        'name': value['name'],
        'priority': value['priority'],
        'roleType': RoleTypeToJSON(value['roleType']),
    };
}

