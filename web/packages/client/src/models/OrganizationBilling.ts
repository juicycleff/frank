/* tslint:disable */
/* eslint-disable */
/**
 * My Project
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface OrganizationBilling
 */
export interface OrganizationBilling {
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof OrganizationBilling
     */
    readonly $schema?: string;
    /**
     * Amount in cents
     * @type {number}
     * @memberof OrganizationBilling
     */
    amount: number;
    /**
     * Currency
     * @type {string}
     * @memberof OrganizationBilling
     */
    currency: string;
    /**
     * Current billing period end
     * @type {Date}
     * @memberof OrganizationBilling
     */
    currentPeriodEnd: Date;
    /**
     * Current billing period start
     * @type {Date}
     * @memberof OrganizationBilling
     */
    currentPeriodStart: Date;
    /**
     * Billing customer ID
     * @type {string}
     * @memberof OrganizationBilling
     */
    customerId: string;
    /**
     * Next invoice date
     * @type {Date}
     * @memberof OrganizationBilling
     */
    nextInvoiceDate?: Date;
    /**
     * Payment method type
     * @type {string}
     * @memberof OrganizationBilling
     */
    paymentMethod?: string;
    /**
     * Current plan
     * @type {string}
     * @memberof OrganizationBilling
     */
    plan: string;
    /**
     * Billing status
     * @type {string}
     * @memberof OrganizationBilling
     */
    status: string;
    /**
     * Subscription ID
     * @type {string}
     * @memberof OrganizationBilling
     */
    subscriptionId: string;
    /**
     * Trial end date
     * @type {Date}
     * @memberof OrganizationBilling
     */
    trialEnd?: Date;
    /**
     * Trial start date
     * @type {Date}
     * @memberof OrganizationBilling
     */
    trialStart?: Date;
}

export function OrganizationBillingFromJSON(json: any): OrganizationBilling {
    return OrganizationBillingFromJSONTyped(json, false);
}

export function OrganizationBillingFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrganizationBilling {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        '$schema': !exists(json, '$schema') ? undefined : json['$schema'],
        'amount': json['amount'],
        'currency': json['currency'],
        'currentPeriodEnd': (new Date(json['currentPeriodEnd'])),
        'currentPeriodStart': (new Date(json['currentPeriodStart'])),
        'customerId': json['customerId'],
        'nextInvoiceDate': !exists(json, 'nextInvoiceDate') ? undefined : (new Date(json['nextInvoiceDate'])),
        'paymentMethod': !exists(json, 'paymentMethod') ? undefined : json['paymentMethod'],
        'plan': json['plan'],
        'status': json['status'],
        'subscriptionId': json['subscriptionId'],
        'trialEnd': !exists(json, 'trialEnd') ? undefined : (new Date(json['trialEnd'])),
        'trialStart': !exists(json, 'trialStart') ? undefined : (new Date(json['trialStart'])),
    };
}

export function OrganizationBillingToJSON(value?: OrganizationBilling | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'amount': value.amount,
        'currency': value.currency,
        'currentPeriodEnd': (value.currentPeriodEnd.toISOString()),
        'currentPeriodStart': (value.currentPeriodStart.toISOString()),
        'customerId': value.customerId,
        'nextInvoiceDate': value.nextInvoiceDate === undefined ? undefined : (value.nextInvoiceDate.toISOString()),
        'paymentMethod': value.paymentMethod,
        'plan': value.plan,
        'status': value.status,
        'subscriptionId': value.subscriptionId,
        'trialEnd': value.trialEnd === undefined ? undefined : (value.trialEnd.toISOString()),
        'trialStart': value.trialStart === undefined ? undefined : (value.trialStart.toISOString()),
    };
}


