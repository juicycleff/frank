/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ResponseTimeStats } from './ResponseTimeStats';
import {
    ResponseTimeStatsFromJSON,
    ResponseTimeStatsFromJSONTyped,
    ResponseTimeStatsToJSON,
    ResponseTimeStatsToJSONTyped,
} from './ResponseTimeStats';
import type { EndpointStats } from './EndpointStats';
import {
    EndpointStatsFromJSON,
    EndpointStatsFromJSONTyped,
    EndpointStatsToJSON,
    EndpointStatsToJSONTyped,
} from './EndpointStats';
import type { ErrorRateStats } from './ErrorRateStats';
import {
    ErrorRateStatsFromJSON,
    ErrorRateStatsFromJSONTyped,
    ErrorRateStatsToJSON,
    ErrorRateStatsToJSONTyped,
} from './ErrorRateStats';

/**
 * 
 * @export
 * @interface ActivityStats
 */
export interface ActivityStats {
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof ActivityStats
     */
    readonly $schema?: string;
    /**
     * 
     * @type {{ [key: string]: number; }}
     * @memberof ActivityStats
     */
    activitiesByAction: { [key: string]: number; };
    /**
     * 
     * @type {{ [key: string]: number; }}
     * @memberof ActivityStats
     */
    activitiesByDay: { [key: string]: number; };
    /**
     * 
     * @type {{ [key: string]: number; }}
     * @memberof ActivityStats
     */
    activitiesByHour: { [key: string]: number; };
    /**
     * 
     * @type {{ [key: string]: number; }}
     * @memberof ActivityStats
     */
    activitiesBySource: { [key: string]: number; };
    /**
     * 
     * @type {ErrorRateStats}
     * @memberof ActivityStats
     */
    errorRates: ErrorRateStats;
    /**
     * 
     * @type {number}
     * @memberof ActivityStats
     */
    failedCount: number;
    /**
     * 
     * @type {Date}
     * @memberof ActivityStats
     */
    generatedAt: Date;
    /**
     * 
     * @type {string}
     * @memberof ActivityStats
     */
    peakHour: string;
    /**
     * 
     * @type {ResponseTimeStats}
     * @memberof ActivityStats
     */
    responseTimeStats: ResponseTimeStats;
    /**
     * 
     * @type {number}
     * @memberof ActivityStats
     */
    successRate: number;
    /**
     * 
     * @type {number}
     * @memberof ActivityStats
     */
    successfulCount: number;
    /**
     * 
     * @type {Array<EndpointStats>}
     * @memberof ActivityStats
     */
    topEndpoints: Array<EndpointStats> | null;
    /**
     * 
     * @type {number}
     * @memberof ActivityStats
     */
    totalActivities: number;
    /**
     * 
     * @type {number}
     * @memberof ActivityStats
     */
    uniqueIps: number;
    /**
     * 
     * @type {number}
     * @memberof ActivityStats
     */
    uniqueUsers: number;
}

/**
 * Check if a given object implements the ActivityStats interface.
 */
export function instanceOfActivityStats(value: object): value is ActivityStats {
    if (!('activitiesByAction' in value) || value['activitiesByAction'] === undefined) return false;
    if (!('activitiesByDay' in value) || value['activitiesByDay'] === undefined) return false;
    if (!('activitiesByHour' in value) || value['activitiesByHour'] === undefined) return false;
    if (!('activitiesBySource' in value) || value['activitiesBySource'] === undefined) return false;
    if (!('errorRates' in value) || value['errorRates'] === undefined) return false;
    if (!('failedCount' in value) || value['failedCount'] === undefined) return false;
    if (!('generatedAt' in value) || value['generatedAt'] === undefined) return false;
    if (!('peakHour' in value) || value['peakHour'] === undefined) return false;
    if (!('responseTimeStats' in value) || value['responseTimeStats'] === undefined) return false;
    if (!('successRate' in value) || value['successRate'] === undefined) return false;
    if (!('successfulCount' in value) || value['successfulCount'] === undefined) return false;
    if (!('topEndpoints' in value) || value['topEndpoints'] === undefined) return false;
    if (!('totalActivities' in value) || value['totalActivities'] === undefined) return false;
    if (!('uniqueIps' in value) || value['uniqueIps'] === undefined) return false;
    if (!('uniqueUsers' in value) || value['uniqueUsers'] === undefined) return false;
    return true;
}

export function ActivityStatsFromJSON(json: any): ActivityStats {
    return ActivityStatsFromJSONTyped(json, false);
}

export function ActivityStatsFromJSONTyped(json: any, ignoreDiscriminator: boolean): ActivityStats {
    if (json == null) {
        return json;
    }
    return {
        
        '$schema': json['$schema'] == null ? undefined : json['$schema'],
        'activitiesByAction': json['activitiesByAction'],
        'activitiesByDay': json['activitiesByDay'],
        'activitiesByHour': json['activitiesByHour'],
        'activitiesBySource': json['activitiesBySource'],
        'errorRates': ErrorRateStatsFromJSON(json['errorRates']),
        'failedCount': json['failedCount'],
        'generatedAt': (new Date(json['generatedAt'])),
        'peakHour': json['peakHour'],
        'responseTimeStats': ResponseTimeStatsFromJSON(json['responseTimeStats']),
        'successRate': json['successRate'],
        'successfulCount': json['successfulCount'],
        'topEndpoints': (json['topEndpoints'] == null ? null : (json['topEndpoints'] as Array<any>).map(EndpointStatsFromJSON)),
        'totalActivities': json['totalActivities'],
        'uniqueIps': json['uniqueIps'],
        'uniqueUsers': json['uniqueUsers'],
    };
}

export function ActivityStatsToJSON(json: any): ActivityStats {
    return ActivityStatsToJSONTyped(json, false);
}

export function ActivityStatsToJSONTyped(value?: Omit<ActivityStats, '$schema'> | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'activitiesByAction': value['activitiesByAction'],
        'activitiesByDay': value['activitiesByDay'],
        'activitiesByHour': value['activitiesByHour'],
        'activitiesBySource': value['activitiesBySource'],
        'errorRates': ErrorRateStatsToJSON(value['errorRates']),
        'failedCount': value['failedCount'],
        'generatedAt': ((value['generatedAt']).toISOString()),
        'peakHour': value['peakHour'],
        'responseTimeStats': ResponseTimeStatsToJSON(value['responseTimeStats']),
        'successRate': value['successRate'],
        'successfulCount': value['successfulCount'],
        'topEndpoints': (value['topEndpoints'] == null ? null : (value['topEndpoints'] as Array<any>).map(EndpointStatsToJSON)),
        'totalActivities': value['totalActivities'],
        'uniqueIps': value['uniqueIps'],
        'uniqueUsers': value['uniqueUsers'],
    };
}

