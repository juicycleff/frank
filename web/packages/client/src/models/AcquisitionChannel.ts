/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AcquisitionChannel
 */
export interface AcquisitionChannel {
    /**
     * 
     * @type {string}
     * @memberof AcquisitionChannel
     */
    channel: string;
    /**
     * 
     * @type {number}
     * @memberof AcquisitionChannel
     */
    conversionRatePercent: number;
    /**
     * 
     * @type {number}
     * @memberof AcquisitionChannel
     */
    cost: number;
    /**
     * 
     * @type {number}
     * @memberof AcquisitionChannel
     */
    costPerUser: number;
    /**
     * 
     * @type {number}
     * @memberof AcquisitionChannel
     */
    newUsers: number;
}

/**
 * Check if a given object implements the AcquisitionChannel interface.
 */
export function instanceOfAcquisitionChannel(value: object): value is AcquisitionChannel {
    if (!('channel' in value) || value['channel'] === undefined) return false;
    if (!('conversionRatePercent' in value) || value['conversionRatePercent'] === undefined) return false;
    if (!('cost' in value) || value['cost'] === undefined) return false;
    if (!('costPerUser' in value) || value['costPerUser'] === undefined) return false;
    if (!('newUsers' in value) || value['newUsers'] === undefined) return false;
    return true;
}

export function AcquisitionChannelFromJSON(json: any): AcquisitionChannel {
    return AcquisitionChannelFromJSONTyped(json, false);
}

export function AcquisitionChannelFromJSONTyped(json: any, ignoreDiscriminator: boolean): AcquisitionChannel {
    if (json == null) {
        return json;
    }
    return {
        
        'channel': json['channel'],
        'conversionRatePercent': json['conversion_rate_percent'],
        'cost': json['cost'],
        'costPerUser': json['cost_per_user'],
        'newUsers': json['new_users'],
    };
}

export function AcquisitionChannelToJSON(json: any): AcquisitionChannel {
    return AcquisitionChannelToJSONTyped(json, false);
}

export function AcquisitionChannelToJSONTyped(value?: AcquisitionChannel | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'channel': value['channel'],
        'conversion_rate_percent': value['conversionRatePercent'],
        'cost': value['cost'],
        'cost_per_user': value['costPerUser'],
        'new_users': value['newUsers'],
    };
}

