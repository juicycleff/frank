/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ScheduleMaintenanceRequest
 */
export interface ScheduleMaintenanceRequest {
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof ScheduleMaintenanceRequest
     */
    readonly $schema?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof ScheduleMaintenanceRequest
     */
    affectedServices: Array<string> | null;
    /**
     * 
     * @type {string}
     * @memberof ScheduleMaintenanceRequest
     */
    description: string;
    /**
     * 
     * @type {Date}
     * @memberof ScheduleMaintenanceRequest
     */
    endTime: Date;
    /**
     * 
     * @type {Array<string>}
     * @memberof ScheduleMaintenanceRequest
     */
    notifyOrgs?: Array<string> | null;
    /**
     * 
     * @type {boolean}
     * @memberof ScheduleMaintenanceRequest
     */
    notifyUsers: boolean;
    /**
     * 
     * @type {Date}
     * @memberof ScheduleMaintenanceRequest
     */
    startTime: Date;
    /**
     * 
     * @type {string}
     * @memberof ScheduleMaintenanceRequest
     */
    title: string;
}

/**
 * Check if a given object implements the ScheduleMaintenanceRequest interface.
 */
export function instanceOfScheduleMaintenanceRequest(value: object): value is ScheduleMaintenanceRequest {
    if (!('affectedServices' in value) || value['affectedServices'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('endTime' in value) || value['endTime'] === undefined) return false;
    if (!('notifyUsers' in value) || value['notifyUsers'] === undefined) return false;
    if (!('startTime' in value) || value['startTime'] === undefined) return false;
    if (!('title' in value) || value['title'] === undefined) return false;
    return true;
}

export function ScheduleMaintenanceRequestFromJSON(json: any): ScheduleMaintenanceRequest {
    return ScheduleMaintenanceRequestFromJSONTyped(json, false);
}

export function ScheduleMaintenanceRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ScheduleMaintenanceRequest {
    if (json == null) {
        return json;
    }
    return {
        
        '$schema': json['$schema'] == null ? undefined : json['$schema'],
        'affectedServices': json['affected_services'] == null ? null : json['affected_services'],
        'description': json['description'],
        'endTime': (new Date(json['end_time'])),
        'notifyOrgs': json['notify_orgs'] == null ? undefined : json['notify_orgs'],
        'notifyUsers': json['notify_users'],
        'startTime': (new Date(json['start_time'])),
        'title': json['title'],
    };
}

export function ScheduleMaintenanceRequestToJSON(json: any): ScheduleMaintenanceRequest {
    return ScheduleMaintenanceRequestToJSONTyped(json, false);
}

export function ScheduleMaintenanceRequestToJSONTyped(value?: Omit<ScheduleMaintenanceRequest, '$schema'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'affected_services': value['affectedServices'],
        'description': value['description'],
        'end_time': ((value['endTime']).toISOString()),
        'notify_orgs': value['notifyOrgs'],
        'notify_users': value['notifyUsers'],
        'start_time': ((value['startTime']).toISOString()),
        'title': value['title'],
    };
}

