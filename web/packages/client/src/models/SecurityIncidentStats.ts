/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SecurityIncidentStats
 */
export interface SecurityIncidentStats {
    /**
     * 
     * @type {number}
     * @memberof SecurityIncidentStats
     */
    critical: number;
    /**
     * 
     * @type {number}
     * @memberof SecurityIncidentStats
     */
    high: number;
    /**
     * 
     * @type {number}
     * @memberof SecurityIncidentStats
     */
    inProgress: number;
    /**
     * 
     * @type {number}
     * @memberof SecurityIncidentStats
     */
    low: number;
    /**
     * 
     * @type {number}
     * @memberof SecurityIncidentStats
     */
    medium: number;
    /**
     * 
     * @type {number}
     * @memberof SecurityIncidentStats
     */
    open: number;
    /**
     * 
     * @type {number}
     * @memberof SecurityIncidentStats
     */
    resolved: number;
    /**
     * 
     * @type {number}
     * @memberof SecurityIncidentStats
     */
    total: number;
}

/**
 * Check if a given object implements the SecurityIncidentStats interface.
 */
export function instanceOfSecurityIncidentStats(value: object): value is SecurityIncidentStats {
    if (!('critical' in value) || value['critical'] === undefined) return false;
    if (!('high' in value) || value['high'] === undefined) return false;
    if (!('inProgress' in value) || value['inProgress'] === undefined) return false;
    if (!('low' in value) || value['low'] === undefined) return false;
    if (!('medium' in value) || value['medium'] === undefined) return false;
    if (!('open' in value) || value['open'] === undefined) return false;
    if (!('resolved' in value) || value['resolved'] === undefined) return false;
    if (!('total' in value) || value['total'] === undefined) return false;
    return true;
}

export function SecurityIncidentStatsFromJSON(json: any): SecurityIncidentStats {
    return SecurityIncidentStatsFromJSONTyped(json, false);
}

export function SecurityIncidentStatsFromJSONTyped(json: any, ignoreDiscriminator: boolean): SecurityIncidentStats {
    if (json == null) {
        return json;
    }
    return {
        
        'critical': json['critical'],
        'high': json['high'],
        'inProgress': json['in_progress'],
        'low': json['low'],
        'medium': json['medium'],
        'open': json['open'],
        'resolved': json['resolved'],
        'total': json['total'],
    };
}

export function SecurityIncidentStatsToJSON(json: any): SecurityIncidentStats {
    return SecurityIncidentStatsToJSONTyped(json, false);
}

export function SecurityIncidentStatsToJSONTyped(value?: SecurityIncidentStats | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'critical': value['critical'],
        'high': value['high'],
        'in_progress': value['inProgress'],
        'low': value['low'],
        'medium': value['medium'],
        'open': value['open'],
        'resolved': value['resolved'],
        'total': value['total'],
    };
}

