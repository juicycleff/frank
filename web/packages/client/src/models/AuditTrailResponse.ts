/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Pagination } from './Pagination';
import {
    PaginationFromJSON,
    PaginationFromJSONTyped,
    PaginationToJSON,
    PaginationToJSONTyped,
} from './Pagination';
import type { AuditLogSummary } from './AuditLogSummary';
import {
    AuditLogSummaryFromJSON,
    AuditLogSummaryFromJSONTyped,
    AuditLogSummaryToJSON,
    AuditLogSummaryToJSONTyped,
} from './AuditLogSummary';

/**
 * 
 * @export
 * @interface AuditTrailResponse
 */
export interface AuditTrailResponse {
    [key: string]: any | any;
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof AuditTrailResponse
     */
    readonly $schema?: string;
    /**
     * 
     * @type {object}
     * @memberof AuditTrailResponse
     */
    appliedFilters: object;
    /**
     * 
     * @type {Array<AuditLogSummary>}
     * @memberof AuditTrailResponse
     */
    auditLogs: Array<AuditLogSummary>;
    /**
     * 
     * @type {Pagination}
     * @memberof AuditTrailResponse
     */
    pagination: Pagination;
}

/**
 * Check if a given object implements the AuditTrailResponse interface.
 */
export function instanceOfAuditTrailResponse(value: object): value is AuditTrailResponse {
    if (!('appliedFilters' in value) || value['appliedFilters'] === undefined) return false;
    if (!('auditLogs' in value) || value['auditLogs'] === undefined) return false;
    if (!('pagination' in value) || value['pagination'] === undefined) return false;
    return true;
}

export function AuditTrailResponseFromJSON(json: any): AuditTrailResponse {
    return AuditTrailResponseFromJSONTyped(json, false);
}

export function AuditTrailResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): AuditTrailResponse {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        '$schema': json['$schema'] == null ? undefined : json['$schema'],
        'appliedFilters': json['applied_filters'],
        'auditLogs': ((json['audit_logs'] as Array<any>).map(AuditLogSummaryFromJSON)),
        'pagination': PaginationFromJSON(json['pagination']),
    };
}

export function AuditTrailResponseToJSON(json: any): AuditTrailResponse {
    return AuditTrailResponseToJSONTyped(json, false);
}

export function AuditTrailResponseToJSONTyped(value?: Omit<AuditTrailResponse, '$schema'> | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
            ...value,
        'applied_filters': value['appliedFilters'],
        'audit_logs': ((value['auditLogs'] as Array<any>).map(AuditLogSummaryToJSON)),
        'pagination': PaginationToJSON(value['pagination']),
    };
}

