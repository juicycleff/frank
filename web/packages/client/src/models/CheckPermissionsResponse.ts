/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CheckPermissionsResponse
 */
export interface CheckPermissionsResponse {
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof CheckPermissionsResponse
     */
    readonly $schema?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof CheckPermissionsResponse
     */
    granted: Array<string> | null;
    /**
     * 
     * @type {boolean}
     * @memberof CheckPermissionsResponse
     */
    hasPermissions: boolean;
    /**
     * 
     * @type {Array<string>}
     * @memberof CheckPermissionsResponse
     */
    missing?: Array<string> | null;
}

/**
 * Check if a given object implements the CheckPermissionsResponse interface.
 */
export function instanceOfCheckPermissionsResponse(value: object): value is CheckPermissionsResponse {
    if (!('granted' in value) || value['granted'] === undefined) return false;
    if (!('hasPermissions' in value) || value['hasPermissions'] === undefined) return false;
    return true;
}

export function CheckPermissionsResponseFromJSON(json: any): CheckPermissionsResponse {
    return CheckPermissionsResponseFromJSONTyped(json, false);
}

export function CheckPermissionsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CheckPermissionsResponse {
    if (json == null) {
        return json;
    }
    return {
        
        '$schema': json['$schema'] == null ? undefined : json['$schema'],
        'granted': json['granted'] == null ? null : json['granted'],
        'hasPermissions': json['hasPermissions'],
        'missing': json['missing'] == null ? undefined : json['missing'],
    };
}

export function CheckPermissionsResponseToJSON(json: any): CheckPermissionsResponse {
    return CheckPermissionsResponseToJSONTyped(json, false);
}

export function CheckPermissionsResponseToJSONTyped(value?: Omit<CheckPermissionsResponse, '$schema'> | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'granted': value['granted'],
        'hasPermissions': value['hasPermissions'],
        'missing': value['missing'],
    };
}

