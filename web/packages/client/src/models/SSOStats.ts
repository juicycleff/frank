/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SSOStats
 */
export interface SSOStats {
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof SSOStats
     */
    readonly $schema?: string;
    /**
     * Active SSO providers
     * @type {number}
     * @memberof SSOStats
     */
    activeProviders: number;
    /**
     * Auto-provisioned users
     * @type {number}
     * @memberof SSOStats
     */
    autoProvisionedUsers: number;
    /**
     * Average login time in seconds
     * @type {number}
     * @memberof SSOStats
     */
    averageLoginTime: number;
    /**
     * Enabled SSO providers
     * @type {number}
     * @memberof SSOStats
     */
    enabledProviders: number;
    /**
     * Failed SSO logins today
     * @type {number}
     * @memberof SSOStats
     */
    failedLoginsToday: number;
    /**
     * Providers by type
     * @type {{ [key: string]: number; }}
     * @memberof SSOStats
     */
    providersByType: { [key: string]: number; };
    /**
     * SSO logins this month
     * @type {number}
     * @memberof SSOStats
     */
    ssoLoginsMonth: number;
    /**
     * SSO logins today
     * @type {number}
     * @memberof SSOStats
     */
    ssoLoginsToday: number;
    /**
     * SSO logins this week
     * @type {number}
     * @memberof SSOStats
     */
    ssoLoginsWeek: number;
    /**
     * Total SSO providers
     * @type {number}
     * @memberof SSOStats
     */
    totalProviders: number;
    /**
     * Unique users today
     * @type {number}
     * @memberof SSOStats
     */
    uniqueUsersToday: number;
    /**
     * Unique users this week
     * @type {number}
     * @memberof SSOStats
     */
    uniqueUsersWeek: number;
}

/**
 * Check if a given object implements the SSOStats interface.
 */
export function instanceOfSSOStats(value: object): value is SSOStats {
    if (!('activeProviders' in value) || value['activeProviders'] === undefined) return false;
    if (!('autoProvisionedUsers' in value) || value['autoProvisionedUsers'] === undefined) return false;
    if (!('averageLoginTime' in value) || value['averageLoginTime'] === undefined) return false;
    if (!('enabledProviders' in value) || value['enabledProviders'] === undefined) return false;
    if (!('failedLoginsToday' in value) || value['failedLoginsToday'] === undefined) return false;
    if (!('providersByType' in value) || value['providersByType'] === undefined) return false;
    if (!('ssoLoginsMonth' in value) || value['ssoLoginsMonth'] === undefined) return false;
    if (!('ssoLoginsToday' in value) || value['ssoLoginsToday'] === undefined) return false;
    if (!('ssoLoginsWeek' in value) || value['ssoLoginsWeek'] === undefined) return false;
    if (!('totalProviders' in value) || value['totalProviders'] === undefined) return false;
    if (!('uniqueUsersToday' in value) || value['uniqueUsersToday'] === undefined) return false;
    if (!('uniqueUsersWeek' in value) || value['uniqueUsersWeek'] === undefined) return false;
    return true;
}

export function SSOStatsFromJSON(json: any): SSOStats {
    return SSOStatsFromJSONTyped(json, false);
}

export function SSOStatsFromJSONTyped(json: any, ignoreDiscriminator: boolean): SSOStats {
    if (json == null) {
        return json;
    }
    return {
        
        '$schema': json['$schema'] == null ? undefined : json['$schema'],
        'activeProviders': json['activeProviders'],
        'autoProvisionedUsers': json['autoProvisionedUsers'],
        'averageLoginTime': json['averageLoginTime'],
        'enabledProviders': json['enabledProviders'],
        'failedLoginsToday': json['failedLoginsToday'],
        'providersByType': json['providersByType'],
        'ssoLoginsMonth': json['ssoLoginsMonth'],
        'ssoLoginsToday': json['ssoLoginsToday'],
        'ssoLoginsWeek': json['ssoLoginsWeek'],
        'totalProviders': json['totalProviders'],
        'uniqueUsersToday': json['uniqueUsersToday'],
        'uniqueUsersWeek': json['uniqueUsersWeek'],
    };
}

export function SSOStatsToJSON(json: any): SSOStats {
    return SSOStatsToJSONTyped(json, false);
}

export function SSOStatsToJSONTyped(value?: Omit<SSOStats, '$schema'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'activeProviders': value['activeProviders'],
        'autoProvisionedUsers': value['autoProvisionedUsers'],
        'averageLoginTime': value['averageLoginTime'],
        'enabledProviders': value['enabledProviders'],
        'failedLoginsToday': value['failedLoginsToday'],
        'providersByType': value['providersByType'],
        'ssoLoginsMonth': value['ssoLoginsMonth'],
        'ssoLoginsToday': value['ssoLoginsToday'],
        'ssoLoginsWeek': value['ssoLoginsWeek'],
        'totalProviders': value['totalProviders'],
        'uniqueUsersToday': value['uniqueUsersToday'],
        'uniqueUsersWeek': value['uniqueUsersWeek'],
    };
}

