/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface RemoveMemberRequest
 */
export interface RemoveMemberRequest {
    [key: string]: any | any;
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof RemoveMemberRequest
     */
    readonly $schema?: string;
    /**
     * Whether to notify the user
     * @type {boolean}
     * @memberof RemoveMemberRequest
     */
    notifyUser: boolean;
    /**
     * Reason for removal
     * @type {string}
     * @memberof RemoveMemberRequest
     */
    reason?: string;
    /**
     * User to transfer data to
     * @type {string}
     * @memberof RemoveMemberRequest
     */
    transferDataTo?: string;
}

/**
 * Check if a given object implements the RemoveMemberRequest interface.
 */
export function instanceOfRemoveMemberRequest(value: object): value is RemoveMemberRequest {
    if (!('notifyUser' in value) || value['notifyUser'] === undefined) return false;
    return true;
}

export function RemoveMemberRequestFromJSON(json: any): RemoveMemberRequest {
    return RemoveMemberRequestFromJSONTyped(json, false);
}

export function RemoveMemberRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): RemoveMemberRequest {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        '$schema': json['$schema'] == null ? undefined : json['$schema'],
        'notifyUser': json['notifyUser'],
        'reason': json['reason'] == null ? undefined : json['reason'],
        'transferDataTo': json['transferDataTo'] == null ? undefined : json['transferDataTo'],
    };
}

export function RemoveMemberRequestToJSON(json: any): RemoveMemberRequest {
    return RemoveMemberRequestToJSONTyped(json, false);
}

export function RemoveMemberRequestToJSONTyped(value?: Omit<RemoveMemberRequest, '$schema'> | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
            ...value,
        'notifyUser': value['notifyUser'],
        'reason': value['reason'],
        'transferDataTo': value['transferDataTo'],
    };
}

