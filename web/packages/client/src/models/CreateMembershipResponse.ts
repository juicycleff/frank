/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Membership } from './Membership';
import {
    MembershipFromJSON,
    MembershipFromJSONTyped,
    MembershipToJSON,
    MembershipToJSONTyped,
} from './Membership';

/**
 * 
 * @export
 * @interface CreateMembershipResponse
 */
export interface CreateMembershipResponse {
    [key: string]: any | any;
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof CreateMembershipResponse
     */
    readonly $schema?: string;
    /**
     * Whether invitation email was sent
     * @type {boolean}
     * @memberof CreateMembershipResponse
     */
    invitationSent: boolean;
    /**
     * Invitation token (for testing)
     * @type {string}
     * @memberof CreateMembershipResponse
     */
    invitationToken?: string;
    /**
     * Created membership
     * @type {Membership}
     * @memberof CreateMembershipResponse
     */
    membership: Membership;
    /**
     * Whether a new user was created
     * @type {boolean}
     * @memberof CreateMembershipResponse
     */
    userCreated: boolean;
}

/**
 * Check if a given object implements the CreateMembershipResponse interface.
 */
export function instanceOfCreateMembershipResponse(value: object): value is CreateMembershipResponse {
    if (!('invitationSent' in value) || value['invitationSent'] === undefined) return false;
    if (!('membership' in value) || value['membership'] === undefined) return false;
    if (!('userCreated' in value) || value['userCreated'] === undefined) return false;
    return true;
}

export function CreateMembershipResponseFromJSON(json: any): CreateMembershipResponse {
    return CreateMembershipResponseFromJSONTyped(json, false);
}

export function CreateMembershipResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateMembershipResponse {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        '$schema': json['$schema'] == null ? undefined : json['$schema'],
        'invitationSent': json['invitationSent'],
        'invitationToken': json['invitationToken'] == null ? undefined : json['invitationToken'],
        'membership': MembershipFromJSON(json['membership']),
        'userCreated': json['userCreated'],
    };
}

export function CreateMembershipResponseToJSON(json: any): CreateMembershipResponse {
    return CreateMembershipResponseToJSONTyped(json, false);
}

export function CreateMembershipResponseToJSONTyped(value?: Omit<CreateMembershipResponse, '$schema'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
            ...value,
        'invitationSent': value['invitationSent'],
        'invitationToken': value['invitationToken'],
        'membership': MembershipToJSON(value['membership']),
        'userCreated': value['userCreated'],
    };
}

