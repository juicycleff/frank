/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ErrorBreakdown
 */
export interface ErrorBreakdown {
    /**
     * 
     * @type {number}
     * @memberof ErrorBreakdown
     */
    count: number;
    /**
     * 
     * @type {string}
     * @memberof ErrorBreakdown
     */
    message: string;
    /**
     * 
     * @type {number}
     * @memberof ErrorBreakdown
     */
    percentage: number;
    /**
     * 
     * @type {number}
     * @memberof ErrorBreakdown
     */
    statusCode: number;
}

/**
 * Check if a given object implements the ErrorBreakdown interface.
 */
export function instanceOfErrorBreakdown(value: object): value is ErrorBreakdown {
    if (!('count' in value) || value['count'] === undefined) return false;
    if (!('message' in value) || value['message'] === undefined) return false;
    if (!('percentage' in value) || value['percentage'] === undefined) return false;
    if (!('statusCode' in value) || value['statusCode'] === undefined) return false;
    return true;
}

export function ErrorBreakdownFromJSON(json: any): ErrorBreakdown {
    return ErrorBreakdownFromJSONTyped(json, false);
}

export function ErrorBreakdownFromJSONTyped(json: any, ignoreDiscriminator: boolean): ErrorBreakdown {
    if (json == null) {
        return json;
    }
    return {
        
        'count': json['count'],
        'message': json['message'],
        'percentage': json['percentage'],
        'statusCode': json['status_code'],
    };
}

export function ErrorBreakdownToJSON(json: any): ErrorBreakdown {
    return ErrorBreakdownToJSONTyped(json, false);
}

export function ErrorBreakdownToJSONTyped(value?: ErrorBreakdown | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'count': value['count'],
        'message': value['message'],
        'percentage': value['percentage'],
        'status_code': value['statusCode'],
    };
}

