/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AuditOverview } from './AuditOverview';
import {
    AuditOverviewFromJSON,
    AuditOverviewFromJSONTyped,
    AuditOverviewToJSON,
    AuditOverviewToJSONTyped,
} from './AuditOverview';
import type { AuditResourceSummary } from './AuditResourceSummary';
import {
    AuditResourceSummaryFromJSON,
    AuditResourceSummaryFromJSONTyped,
    AuditResourceSummaryToJSON,
    AuditResourceSummaryToJSONTyped,
} from './AuditResourceSummary';
import type { AuditTrend } from './AuditTrend';
import {
    AuditTrendFromJSON,
    AuditTrendFromJSONTyped,
    AuditTrendToJSON,
    AuditTrendToJSONTyped,
} from './AuditTrend';
import type { AuditSecuritySummary } from './AuditSecuritySummary';
import {
    AuditSecuritySummaryFromJSON,
    AuditSecuritySummaryFromJSONTyped,
    AuditSecuritySummaryToJSON,
    AuditSecuritySummaryToJSONTyped,
} from './AuditSecuritySummary';
import type { AuditRiskSummary } from './AuditRiskSummary';
import {
    AuditRiskSummaryFromJSON,
    AuditRiskSummaryFromJSONTyped,
    AuditRiskSummaryToJSON,
    AuditRiskSummaryToJSONTyped,
} from './AuditRiskSummary';
import type { AuditUserActivity } from './AuditUserActivity';
import {
    AuditUserActivityFromJSON,
    AuditUserActivityFromJSONTyped,
    AuditUserActivityToJSON,
    AuditUserActivityToJSONTyped,
} from './AuditUserActivity';
import type { AuditActionSummary } from './AuditActionSummary';
import {
    AuditActionSummaryFromJSON,
    AuditActionSummaryFromJSONTyped,
    AuditActionSummaryToJSON,
    AuditActionSummaryToJSONTyped,
} from './AuditActionSummary';

/**
 * 
 * @export
 * @interface AuditSummary
 */
export interface AuditSummary {
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof AuditSummary
     */
    readonly $schema?: string;
    /**
     * 
     * @type {Array<AuditActionSummary>}
     * @memberof AuditSummary
     */
    byAction: Array<AuditActionSummary> | null;
    /**
     * 
     * @type {Array<AuditResourceSummary>}
     * @memberof AuditSummary
     */
    byResource: Array<AuditResourceSummary> | null;
    /**
     * 
     * @type {Array<AuditRiskSummary>}
     * @memberof AuditSummary
     */
    byRiskLevel: Array<AuditRiskSummary> | null;
    /**
     * 
     * @type {Date}
     * @memberof AuditSummary
     */
    generatedAt: Date;
    /**
     * 
     * @type {AuditOverview}
     * @memberof AuditSummary
     */
    overview: AuditOverview;
    /**
     * 
     * @type {string}
     * @memberof AuditSummary
     */
    period: string;
    /**
     * 
     * @type {AuditSecuritySummary}
     * @memberof AuditSummary
     */
    securityEvents: AuditSecuritySummary;
    /**
     * 
     * @type {Array<AuditUserActivity>}
     * @memberof AuditSummary
     */
    topUsers: Array<AuditUserActivity> | null;
    /**
     * 
     * @type {Array<AuditTrend>}
     * @memberof AuditSummary
     */
    trends: Array<AuditTrend> | null;
}

/**
 * Check if a given object implements the AuditSummary interface.
 */
export function instanceOfAuditSummary(value: object): value is AuditSummary {
    if (!('byAction' in value) || value['byAction'] === undefined) return false;
    if (!('byResource' in value) || value['byResource'] === undefined) return false;
    if (!('byRiskLevel' in value) || value['byRiskLevel'] === undefined) return false;
    if (!('generatedAt' in value) || value['generatedAt'] === undefined) return false;
    if (!('overview' in value) || value['overview'] === undefined) return false;
    if (!('period' in value) || value['period'] === undefined) return false;
    if (!('securityEvents' in value) || value['securityEvents'] === undefined) return false;
    if (!('topUsers' in value) || value['topUsers'] === undefined) return false;
    if (!('trends' in value) || value['trends'] === undefined) return false;
    return true;
}

export function AuditSummaryFromJSON(json: any): AuditSummary {
    return AuditSummaryFromJSONTyped(json, false);
}

export function AuditSummaryFromJSONTyped(json: any, ignoreDiscriminator: boolean): AuditSummary {
    if (json == null) {
        return json;
    }
    return {
        
        '$schema': json['$schema'] == null ? undefined : json['$schema'],
        'byAction': (json['by_action'] == null ? null : (json['by_action'] as Array<any>).map(AuditActionSummaryFromJSON)),
        'byResource': (json['by_resource'] == null ? null : (json['by_resource'] as Array<any>).map(AuditResourceSummaryFromJSON)),
        'byRiskLevel': (json['by_risk_level'] == null ? null : (json['by_risk_level'] as Array<any>).map(AuditRiskSummaryFromJSON)),
        'generatedAt': (new Date(json['generated_at'])),
        'overview': AuditOverviewFromJSON(json['overview']),
        'period': json['period'],
        'securityEvents': AuditSecuritySummaryFromJSON(json['security_events']),
        'topUsers': (json['top_users'] == null ? null : (json['top_users'] as Array<any>).map(AuditUserActivityFromJSON)),
        'trends': (json['trends'] == null ? null : (json['trends'] as Array<any>).map(AuditTrendFromJSON)),
    };
}

export function AuditSummaryToJSON(json: any): AuditSummary {
    return AuditSummaryToJSONTyped(json, false);
}

export function AuditSummaryToJSONTyped(value?: Omit<AuditSummary, '$schema'> | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'by_action': (value['byAction'] == null ? null : (value['byAction'] as Array<any>).map(AuditActionSummaryToJSON)),
        'by_resource': (value['byResource'] == null ? null : (value['byResource'] as Array<any>).map(AuditResourceSummaryToJSON)),
        'by_risk_level': (value['byRiskLevel'] == null ? null : (value['byRiskLevel'] as Array<any>).map(AuditRiskSummaryToJSON)),
        'generated_at': ((value['generatedAt']).toISOString()),
        'overview': AuditOverviewToJSON(value['overview']),
        'period': value['period'],
        'security_events': AuditSecuritySummaryToJSON(value['securityEvents']),
        'top_users': (value['topUsers'] == null ? null : (value['topUsers'] as Array<any>).map(AuditUserActivityToJSON)),
        'trends': (value['trends'] == null ? null : (value['trends'] as Array<any>).map(AuditTrendToJSON)),
    };
}

