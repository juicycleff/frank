/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SecurityIncidentSummary
 */
export interface SecurityIncidentSummary {
    /**
     * 
     * @type {string}
     * @memberof SecurityIncidentSummary
     */
    assignee?: string;
    /**
     * 
     * @type {Date}
     * @memberof SecurityIncidentSummary
     */
    createdAt: Date;
    /**
     * 
     * @type {number}
     * @memberof SecurityIncidentSummary
     */
    durationMinutes?: number;
    /**
     * 
     * @type {string}
     * @memberof SecurityIncidentSummary
     */
    id: string;
    /**
     * 
     * @type {Date}
     * @memberof SecurityIncidentSummary
     */
    resolvedAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof SecurityIncidentSummary
     */
    severity: string;
    /**
     * 
     * @type {string}
     * @memberof SecurityIncidentSummary
     */
    status: string;
    /**
     * 
     * @type {string}
     * @memberof SecurityIncidentSummary
     */
    title: string;
    /**
     * 
     * @type {string}
     * @memberof SecurityIncidentSummary
     */
    type: string;
}

/**
 * Check if a given object implements the SecurityIncidentSummary interface.
 */
export function instanceOfSecurityIncidentSummary(value: object): value is SecurityIncidentSummary {
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('severity' in value) || value['severity'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    return true;
}

export function SecurityIncidentSummaryFromJSON(json: any): SecurityIncidentSummary {
    return SecurityIncidentSummaryFromJSONTyped(json, false);
}

export function SecurityIncidentSummaryFromJSONTyped(json: any, ignoreDiscriminator: boolean): SecurityIncidentSummary {
    if (json == null) {
        return json;
    }
    return {
        
        'assignee': json['assignee'] == null ? undefined : json['assignee'],
        'createdAt': (new Date(json['created_at'])),
        'durationMinutes': json['duration_minutes'] == null ? undefined : json['duration_minutes'],
        'id': json['id'],
        'resolvedAt': json['resolved_at'] == null ? undefined : (new Date(json['resolved_at'])),
        'severity': json['severity'],
        'status': json['status'],
        'title': json['title'],
        'type': json['type'],
    };
}

export function SecurityIncidentSummaryToJSON(json: any): SecurityIncidentSummary {
    return SecurityIncidentSummaryToJSONTyped(json, false);
}

export function SecurityIncidentSummaryToJSONTyped(value?: SecurityIncidentSummary | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'assignee': value['assignee'],
        'created_at': ((value['createdAt']).toISOString()),
        'duration_minutes': value['durationMinutes'],
        'id': value['id'],
        'resolved_at': value['resolvedAt'] == null ? undefined : ((value['resolvedAt']).toISOString()),
        'severity': value['severity'],
        'status': value['status'],
        'title': value['title'],
        'type': value['type'],
    };
}

