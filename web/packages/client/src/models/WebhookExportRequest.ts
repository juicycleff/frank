/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface WebhookExportRequest
 */
export interface WebhookExportRequest {
    [key: string]: any | any;
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof WebhookExportRequest
     */
    readonly $schema?: string;
    /**
     * End date
     * @type {Date}
     * @memberof WebhookExportRequest
     */
    endDate?: Date;
    /**
     * Export format (json, csv)
     * @type {string}
     * @memberof WebhookExportRequest
     */
    format: string;
    /**
     * Include event data
     * @type {boolean}
     * @memberof WebhookExportRequest
     */
    includeEvents: boolean;
    /**
     * Include event payloads
     * @type {boolean}
     * @memberof WebhookExportRequest
     */
    includePayloads: boolean;
    /**
     * Include response data
     * @type {boolean}
     * @memberof WebhookExportRequest
     */
    includeResponses: boolean;
    /**
     * Organization ID
     * @type {string}
     * @memberof WebhookExportRequest
     */
    organizationId?: string;
    /**
     * Start date
     * @type {Date}
     * @memberof WebhookExportRequest
     */
    startDate?: Date;
    /**
     * Specific webhook IDs
     * @type {Array<string>}
     * @memberof WebhookExportRequest
     */
    webhookIds?: Array<string>;
}

/**
 * Check if a given object implements the WebhookExportRequest interface.
 */
export function instanceOfWebhookExportRequest(value: object): value is WebhookExportRequest {
    if (!('format' in value) || value['format'] === undefined) return false;
    if (!('includeEvents' in value) || value['includeEvents'] === undefined) return false;
    if (!('includePayloads' in value) || value['includePayloads'] === undefined) return false;
    if (!('includeResponses' in value) || value['includeResponses'] === undefined) return false;
    return true;
}

export function WebhookExportRequestFromJSON(json: any): WebhookExportRequest {
    return WebhookExportRequestFromJSONTyped(json, false);
}

export function WebhookExportRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): WebhookExportRequest {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        '$schema': json['$schema'] == null ? undefined : json['$schema'],
        'endDate': json['endDate'] == null ? undefined : (new Date(json['endDate'])),
        'format': json['format'],
        'includeEvents': json['includeEvents'],
        'includePayloads': json['includePayloads'],
        'includeResponses': json['includeResponses'],
        'organizationId': json['organizationId'] == null ? undefined : json['organizationId'],
        'startDate': json['startDate'] == null ? undefined : (new Date(json['startDate'])),
        'webhookIds': json['webhookIds'] == null ? undefined : json['webhookIds'],
    };
}

export function WebhookExportRequestToJSON(json: any): WebhookExportRequest {
    return WebhookExportRequestToJSONTyped(json, false);
}

export function WebhookExportRequestToJSONTyped(value?: Omit<WebhookExportRequest, '$schema'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
            ...value,
        'endDate': value['endDate'] == null ? undefined : ((value['endDate']).toISOString()),
        'format': value['format'],
        'includeEvents': value['includeEvents'],
        'includePayloads': value['includePayloads'],
        'includeResponses': value['includeResponses'],
        'organizationId': value['organizationId'],
        'startDate': value['startDate'] == null ? undefined : ((value['startDate']).toISOString()),
        'webhookIds': value['webhookIds'],
    };
}

