/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface RiskDataPoint
 */
export interface RiskDataPoint {
    /**
     * 
     * @type {number}
     * @memberof RiskDataPoint
     */
    count: number;
    /**
     * 
     * @type {string}
     * @memberof RiskDataPoint
     */
    risk: string;
    /**
     * 
     * @type {string}
     * @memberof RiskDataPoint
     */
    severity: string;
}

/**
 * Check if a given object implements the RiskDataPoint interface.
 */
export function instanceOfRiskDataPoint(value: object): value is RiskDataPoint {
    if (!('count' in value) || value['count'] === undefined) return false;
    if (!('risk' in value) || value['risk'] === undefined) return false;
    if (!('severity' in value) || value['severity'] === undefined) return false;
    return true;
}

export function RiskDataPointFromJSON(json: any): RiskDataPoint {
    return RiskDataPointFromJSONTyped(json, false);
}

export function RiskDataPointFromJSONTyped(json: any, ignoreDiscriminator: boolean): RiskDataPoint {
    if (json == null) {
        return json;
    }
    return {
        
        'count': json['count'],
        'risk': json['risk'],
        'severity': json['severity'],
    };
}

export function RiskDataPointToJSON(json: any): RiskDataPoint {
    return RiskDataPointToJSONTyped(json, false);
}

export function RiskDataPointToJSONTyped(value?: RiskDataPoint | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'count': value['count'],
        'risk': value['risk'],
        'severity': value['severity'],
    };
}

