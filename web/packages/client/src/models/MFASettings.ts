/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface MFASettings
 */
export interface MFASettings {
    /**
     * Allowed MFA methods
     * @type {Array<string>}
     * @memberof MFASettings
     */
    allowedMethods: Array<string> | null;
    /**
     * Grace period in hours for MFA setup
     * @type {number}
     * @memberof MFASettings
     */
    gracePeriod: number;
    /**
     * Whether MFA is required for all users
     * @type {boolean}
     * @memberof MFASettings
     */
    required: boolean;
}

/**
 * Check if a given object implements the MFASettings interface.
 */
export function instanceOfMFASettings(value: object): value is MFASettings {
    if (!('allowedMethods' in value) || value['allowedMethods'] === undefined) return false;
    if (!('gracePeriod' in value) || value['gracePeriod'] === undefined) return false;
    if (!('required' in value) || value['required'] === undefined) return false;
    return true;
}

export function MFASettingsFromJSON(json: any): MFASettings {
    return MFASettingsFromJSONTyped(json, false);
}

export function MFASettingsFromJSONTyped(json: any, ignoreDiscriminator: boolean): MFASettings {
    if (json == null) {
        return json;
    }
    return {
        
        'allowedMethods': json['allowedMethods'] == null ? null : json['allowedMethods'],
        'gracePeriod': json['gracePeriod'],
        'required': json['required'],
    };
}

export function MFASettingsToJSON(json: any): MFASettings {
    return MFASettingsToJSONTyped(json, false);
}

export function MFASettingsToJSONTyped(value?: MFASettings | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'allowedMethods': value['allowedMethods'],
        'gracePeriod': value['gracePeriod'],
        'required': value['required'],
    };
}

