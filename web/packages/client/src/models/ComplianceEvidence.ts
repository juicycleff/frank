/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ComplianceEvidence
 */
export interface ComplianceEvidence {
    /**
     * 
     * @type {Date}
     * @memberof ComplianceEvidence
     */
    collectedAt: Date;
    /**
     * 
     * @type {string}
     * @memberof ComplianceEvidence
     */
    controlId: string;
    /**
     * 
     * @type {string}
     * @memberof ComplianceEvidence
     */
    description: string;
    /**
     * 
     * @type {string}
     * @memberof ComplianceEvidence
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof ComplianceEvidence
     */
    type: string;
    /**
     * 
     * @type {string}
     * @memberof ComplianceEvidence
     */
    url?: string;
    /**
     * 
     * @type {Date}
     * @memberof ComplianceEvidence
     */
    validUntil: Date;
}

/**
 * Check if a given object implements the ComplianceEvidence interface.
 */
export function instanceOfComplianceEvidence(value: object): value is ComplianceEvidence {
    if (!('collectedAt' in value) || value['collectedAt'] === undefined) return false;
    if (!('controlId' in value) || value['controlId'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('validUntil' in value) || value['validUntil'] === undefined) return false;
    return true;
}

export function ComplianceEvidenceFromJSON(json: any): ComplianceEvidence {
    return ComplianceEvidenceFromJSONTyped(json, false);
}

export function ComplianceEvidenceFromJSONTyped(json: any, ignoreDiscriminator: boolean): ComplianceEvidence {
    if (json == null) {
        return json;
    }
    return {
        
        'collectedAt': (new Date(json['collected_at'])),
        'controlId': json['control_id'],
        'description': json['description'],
        'id': json['id'],
        'type': json['type'],
        'url': json['url'] == null ? undefined : json['url'],
        'validUntil': (new Date(json['valid_until'])),
    };
}

export function ComplianceEvidenceToJSON(json: any): ComplianceEvidence {
    return ComplianceEvidenceToJSONTyped(json, false);
}

export function ComplianceEvidenceToJSONTyped(value?: ComplianceEvidence | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'collected_at': ((value['collectedAt']).toISOString()),
        'control_id': value['controlId'],
        'description': value['description'],
        'id': value['id'],
        'type': value['type'],
        'url': value['url'],
        'valid_until': ((value['validUntil']).toISOString()),
    };
}

