/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UpdateSubscriptionRequest
 */
export interface UpdateSubscriptionRequest {
    [key: string]: any | any;
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof UpdateSubscriptionRequest
     */
    readonly $schema?: string;
    /**
     * 
     * @type {Date}
     * @memberof UpdateSubscriptionRequest
     */
    cancelAt?: Date;
    /**
     * 
     * @type {object}
     * @memberof UpdateSubscriptionRequest
     */
    metadata?: object;
    /**
     * 
     * @type {Date}
     * @memberof UpdateSubscriptionRequest
     */
    pauseUntil?: Date;
    /**
     * 
     * @type {string}
     * @memberof UpdateSubscriptionRequest
     */
    plan?: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateSubscriptionRequest
     */
    status?: string;
}

/**
 * Check if a given object implements the UpdateSubscriptionRequest interface.
 */
export function instanceOfUpdateSubscriptionRequest(value: object): value is UpdateSubscriptionRequest {
    return true;
}

export function UpdateSubscriptionRequestFromJSON(json: any): UpdateSubscriptionRequest {
    return UpdateSubscriptionRequestFromJSONTyped(json, false);
}

export function UpdateSubscriptionRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateSubscriptionRequest {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        '$schema': json['$schema'] == null ? undefined : json['$schema'],
        'cancelAt': json['cancel_at'] == null ? undefined : (new Date(json['cancel_at'])),
        'metadata': json['metadata'] == null ? undefined : json['metadata'],
        'pauseUntil': json['pause_until'] == null ? undefined : (new Date(json['pause_until'])),
        'plan': json['plan'] == null ? undefined : json['plan'],
        'status': json['status'] == null ? undefined : json['status'],
    };
}

export function UpdateSubscriptionRequestToJSON(json: any): UpdateSubscriptionRequest {
    return UpdateSubscriptionRequestToJSONTyped(json, false);
}

export function UpdateSubscriptionRequestToJSONTyped(value?: Omit<UpdateSubscriptionRequest, '$schema'> | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
            ...value,
        'cancel_at': value['cancelAt'] == null ? undefined : ((value['cancelAt']).toISOString()),
        'metadata': value['metadata'],
        'pause_until': value['pauseUntil'] == null ? undefined : ((value['pauseUntil']).toISOString()),
        'plan': value['plan'],
        'status': value['status'],
    };
}

