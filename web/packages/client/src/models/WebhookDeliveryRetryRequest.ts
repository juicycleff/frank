/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface WebhookDeliveryRetryRequest
 */
export interface WebhookDeliveryRetryRequest {
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof WebhookDeliveryRetryRequest
     */
    readonly $schema?: string;
    /**
     * End date for failed events
     * @type {Date}
     * @memberof WebhookDeliveryRetryRequest
     */
    endDate?: Date;
    /**
     * Filter by event type
     * @type {string}
     * @memberof WebhookDeliveryRetryRequest
     */
    eventType?: string;
    /**
     * Maximum retries per event
     * @type {number}
     * @memberof WebhookDeliveryRetryRequest
     */
    maxRetries?: number;
    /**
     * Start date for failed events
     * @type {Date}
     * @memberof WebhookDeliveryRetryRequest
     */
    startDate?: Date;
    /**
     * Specific webhook ID
     * @type {string}
     * @memberof WebhookDeliveryRetryRequest
     */
    webhookId?: string;
}

/**
 * Check if a given object implements the WebhookDeliveryRetryRequest interface.
 */
export function instanceOfWebhookDeliveryRetryRequest(value: object): value is WebhookDeliveryRetryRequest {
    return true;
}

export function WebhookDeliveryRetryRequestFromJSON(json: any): WebhookDeliveryRetryRequest {
    return WebhookDeliveryRetryRequestFromJSONTyped(json, false);
}

export function WebhookDeliveryRetryRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): WebhookDeliveryRetryRequest {
    if (json == null) {
        return json;
    }
    return {
        
        '$schema': json['$schema'] == null ? undefined : json['$schema'],
        'endDate': json['endDate'] == null ? undefined : (new Date(json['endDate'])),
        'eventType': json['eventType'] == null ? undefined : json['eventType'],
        'maxRetries': json['maxRetries'] == null ? undefined : json['maxRetries'],
        'startDate': json['startDate'] == null ? undefined : (new Date(json['startDate'])),
        'webhookId': json['webhookId'] == null ? undefined : json['webhookId'],
    };
}

export function WebhookDeliveryRetryRequestToJSON(json: any): WebhookDeliveryRetryRequest {
    return WebhookDeliveryRetryRequestToJSONTyped(json, false);
}

export function WebhookDeliveryRetryRequestToJSONTyped(value?: Omit<WebhookDeliveryRetryRequest, '$schema'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'endDate': value['endDate'] == null ? undefined : ((value['endDate']).toISOString()),
        'eventType': value['eventType'],
        'maxRetries': value['maxRetries'],
        'startDate': value['startDate'] == null ? undefined : ((value['startDate']).toISOString()),
        'webhookId': value['webhookId'],
    };
}

