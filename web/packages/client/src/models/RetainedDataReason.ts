/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface RetainedDataReason
 */
export interface RetainedDataReason {
    /**
     * 
     * @type {string}
     * @memberof RetainedDataReason
     */
    dataType: string;
    /**
     * 
     * @type {string}
     * @memberof RetainedDataReason
     */
    legalBasis: string;
    /**
     * 
     * @type {string}
     * @memberof RetainedDataReason
     */
    reason: string;
    /**
     * 
     * @type {string}
     * @memberof RetainedDataReason
     */
    retentionPeriod: string;
}

/**
 * Check if a given object implements the RetainedDataReason interface.
 */
export function instanceOfRetainedDataReason(value: object): value is RetainedDataReason {
    if (!('dataType' in value) || value['dataType'] === undefined) return false;
    if (!('legalBasis' in value) || value['legalBasis'] === undefined) return false;
    if (!('reason' in value) || value['reason'] === undefined) return false;
    if (!('retentionPeriod' in value) || value['retentionPeriod'] === undefined) return false;
    return true;
}

export function RetainedDataReasonFromJSON(json: any): RetainedDataReason {
    return RetainedDataReasonFromJSONTyped(json, false);
}

export function RetainedDataReasonFromJSONTyped(json: any, ignoreDiscriminator: boolean): RetainedDataReason {
    if (json == null) {
        return json;
    }
    return {
        
        'dataType': json['data_type'],
        'legalBasis': json['legal_basis'],
        'reason': json['reason'],
        'retentionPeriod': json['retention_period'],
    };
}

export function RetainedDataReasonToJSON(json: any): RetainedDataReason {
    return RetainedDataReasonToJSONTyped(json, false);
}

export function RetainedDataReasonToJSONTyped(value?: RetainedDataReason | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'data_type': value['dataType'],
        'legal_basis': value['legalBasis'],
        'reason': value['reason'],
        'retention_period': value['retentionPeriod'],
    };
}

