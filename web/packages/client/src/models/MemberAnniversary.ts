/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface MemberAnniversary
 */
export interface MemberAnniversary {
    /**
     * Upcoming anniversary date
     * @type {Date}
     * @memberof MemberAnniversary
     */
    anniversary: Date;
    /**
     * Days until anniversary
     * @type {number}
     * @memberof MemberAnniversary
     */
    daysUntil: number;
    /**
     * User email
     * @type {string}
     * @memberof MemberAnniversary
     */
    email: string;
    /**
     * User full name
     * @type {string}
     * @memberof MemberAnniversary
     */
    fullName: string;
    /**
     * Join date
     * @type {Date}
     * @memberof MemberAnniversary
     */
    joinedAt: Date;
    /**
     * Current role name
     * @type {string}
     * @memberof MemberAnniversary
     */
    roleName: string;
    /**
     * User ID
     * @type {string}
     * @memberof MemberAnniversary
     */
    userId: string;
    /**
     * Years of service
     * @type {number}
     * @memberof MemberAnniversary
     */
    yearsOfService: number;
}

/**
 * Check if a given object implements the MemberAnniversary interface.
 */
export function instanceOfMemberAnniversary(value: object): value is MemberAnniversary {
    if (!('anniversary' in value) || value['anniversary'] === undefined) return false;
    if (!('daysUntil' in value) || value['daysUntil'] === undefined) return false;
    if (!('email' in value) || value['email'] === undefined) return false;
    if (!('fullName' in value) || value['fullName'] === undefined) return false;
    if (!('joinedAt' in value) || value['joinedAt'] === undefined) return false;
    if (!('roleName' in value) || value['roleName'] === undefined) return false;
    if (!('userId' in value) || value['userId'] === undefined) return false;
    if (!('yearsOfService' in value) || value['yearsOfService'] === undefined) return false;
    return true;
}

export function MemberAnniversaryFromJSON(json: any): MemberAnniversary {
    return MemberAnniversaryFromJSONTyped(json, false);
}

export function MemberAnniversaryFromJSONTyped(json: any, ignoreDiscriminator: boolean): MemberAnniversary {
    if (json == null) {
        return json;
    }
    return {
        
        'anniversary': (new Date(json['anniversary'])),
        'daysUntil': json['daysUntil'],
        'email': json['email'],
        'fullName': json['fullName'],
        'joinedAt': (new Date(json['joinedAt'])),
        'roleName': json['roleName'],
        'userId': json['userId'],
        'yearsOfService': json['yearsOfService'],
    };
}

export function MemberAnniversaryToJSON(json: any): MemberAnniversary {
    return MemberAnniversaryToJSONTyped(json, false);
}

export function MemberAnniversaryToJSONTyped(value?: MemberAnniversary | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'anniversary': ((value['anniversary']).toISOString()),
        'daysUntil': value['daysUntil'],
        'email': value['email'],
        'fullName': value['fullName'],
        'joinedAt': ((value['joinedAt']).toISOString()),
        'roleName': value['roleName'],
        'userId': value['userId'],
        'yearsOfService': value['yearsOfService'],
    };
}

