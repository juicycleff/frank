/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface BrandingSettings
 */
export interface BrandingSettings {
    /**
     * Custom CSS
     * @type {string}
     * @memberof BrandingSettings
     */
    customCss?: string;
    /**
     * Favicon URL
     * @type {string}
     * @memberof BrandingSettings
     */
    faviconUrl?: string;
    /**
     * Font family
     * @type {string}
     * @memberof BrandingSettings
     */
    fontFamily?: string;
    /**
     * Logo URL
     * @type {string}
     * @memberof BrandingSettings
     */
    logoUrl?: string;
    /**
     * Primary brand color
     * @type {string}
     * @memberof BrandingSettings
     */
    primaryColor?: string;
    /**
     * Secondary brand color
     * @type {string}
     * @memberof BrandingSettings
     */
    secondaryColor?: string;
}

/**
 * Check if a given object implements the BrandingSettings interface.
 */
export function instanceOfBrandingSettings(value: object): value is BrandingSettings {
    return true;
}

export function BrandingSettingsFromJSON(json: any): BrandingSettings {
    return BrandingSettingsFromJSONTyped(json, false);
}

export function BrandingSettingsFromJSONTyped(json: any, ignoreDiscriminator: boolean): BrandingSettings {
    if (json == null) {
        return json;
    }
    return {
        
        'customCss': json['customCss'] == null ? undefined : json['customCss'],
        'faviconUrl': json['faviconUrl'] == null ? undefined : json['faviconUrl'],
        'fontFamily': json['fontFamily'] == null ? undefined : json['fontFamily'],
        'logoUrl': json['logoUrl'] == null ? undefined : json['logoUrl'],
        'primaryColor': json['primaryColor'] == null ? undefined : json['primaryColor'],
        'secondaryColor': json['secondaryColor'] == null ? undefined : json['secondaryColor'],
    };
}

export function BrandingSettingsToJSON(json: any): BrandingSettings {
    return BrandingSettingsToJSONTyped(json, false);
}

export function BrandingSettingsToJSONTyped(value?: BrandingSettings | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'customCss': value['customCss'],
        'faviconUrl': value['faviconUrl'],
        'fontFamily': value['fontFamily'],
        'logoUrl': value['logoUrl'],
        'primaryColor': value['primaryColor'],
        'secondaryColor': value['secondaryColor'],
    };
}

