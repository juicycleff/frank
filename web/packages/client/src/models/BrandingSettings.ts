/* tslint:disable */
/* eslint-disable */
/**
 * My Project
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface BrandingSettings
 */
export interface BrandingSettings {
    /**
     * Custom CSS
     * @type {string}
     * @memberof BrandingSettings
     */
    customCss?: string;
    /**
     * Favicon URL
     * @type {string}
     * @memberof BrandingSettings
     */
    faviconUrl?: string;
    /**
     * Font family
     * @type {string}
     * @memberof BrandingSettings
     */
    fontFamily?: string;
    /**
     * Logo URL
     * @type {string}
     * @memberof BrandingSettings
     */
    logoUrl?: string;
    /**
     * Primary brand color
     * @type {string}
     * @memberof BrandingSettings
     */
    primaryColor?: string;
    /**
     * Secondary brand color
     * @type {string}
     * @memberof BrandingSettings
     */
    secondaryColor?: string;
}

export function BrandingSettingsFromJSON(json: any): BrandingSettings {
    return BrandingSettingsFromJSONTyped(json, false);
}

export function BrandingSettingsFromJSONTyped(json: any, ignoreDiscriminator: boolean): BrandingSettings {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'customCss': !exists(json, 'customCss') ? undefined : json['customCss'],
        'faviconUrl': !exists(json, 'faviconUrl') ? undefined : json['faviconUrl'],
        'fontFamily': !exists(json, 'fontFamily') ? undefined : json['fontFamily'],
        'logoUrl': !exists(json, 'logoUrl') ? undefined : json['logoUrl'],
        'primaryColor': !exists(json, 'primaryColor') ? undefined : json['primaryColor'],
        'secondaryColor': !exists(json, 'secondaryColor') ? undefined : json['secondaryColor'],
    };
}

export function BrandingSettingsToJSON(value?: BrandingSettings | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'customCss': value.customCss,
        'faviconUrl': value.faviconUrl,
        'fontFamily': value.fontFamily,
        'logoUrl': value.logoUrl,
        'primaryColor': value.primaryColor,
        'secondaryColor': value.secondaryColor,
    };
}


