/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AuditSettings
 */
export interface AuditSettings {
    /**
     * Whether audit logging is enabled
     * @type {boolean}
     * @memberof AuditSettings
     */
    enabled: boolean;
    /**
     * Audit event types to log
     * @type {Array<string>}
     * @memberof AuditSettings
     */
    eventTypes: Array<string> | null;
    /**
     * Whether audit export is enabled
     * @type {boolean}
     * @memberof AuditSettings
     */
    exportEnabled: boolean;
    /**
     * Audit log retention in days
     * @type {number}
     * @memberof AuditSettings
     */
    retentionDays: number;
}

/**
 * Check if a given object implements the AuditSettings interface.
 */
export function instanceOfAuditSettings(value: object): value is AuditSettings {
    if (!('enabled' in value) || value['enabled'] === undefined) return false;
    if (!('eventTypes' in value) || value['eventTypes'] === undefined) return false;
    if (!('exportEnabled' in value) || value['exportEnabled'] === undefined) return false;
    if (!('retentionDays' in value) || value['retentionDays'] === undefined) return false;
    return true;
}

export function AuditSettingsFromJSON(json: any): AuditSettings {
    return AuditSettingsFromJSONTyped(json, false);
}

export function AuditSettingsFromJSONTyped(json: any, ignoreDiscriminator: boolean): AuditSettings {
    if (json == null) {
        return json;
    }
    return {
        
        'enabled': json['enabled'],
        'eventTypes': json['eventTypes'] == null ? null : json['eventTypes'],
        'exportEnabled': json['exportEnabled'],
        'retentionDays': json['retentionDays'],
    };
}

export function AuditSettingsToJSON(json: any): AuditSettings {
    return AuditSettingsToJSONTyped(json, false);
}

export function AuditSettingsToJSONTyped(value?: AuditSettings | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'enabled': value['enabled'],
        'eventTypes': value['eventTypes'],
        'exportEnabled': value['exportEnabled'],
        'retentionDays': value['retentionDays'],
    };
}

