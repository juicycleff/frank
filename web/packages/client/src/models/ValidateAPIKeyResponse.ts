/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RateLimitInfo } from './RateLimitInfo';
import {
    RateLimitInfoFromJSON,
    RateLimitInfoFromJSONTyped,
    RateLimitInfoToJSON,
    RateLimitInfoToJSONTyped,
} from './RateLimitInfo';
import type { APIKeyType } from './APIKeyType';
import {
    APIKeyTypeFromJSON,
    APIKeyTypeFromJSONTyped,
    APIKeyTypeToJSON,
    APIKeyTypeToJSONTyped,
} from './APIKeyType';
import type { Environment } from './Environment';
import {
    EnvironmentFromJSON,
    EnvironmentFromJSONTyped,
    EnvironmentToJSON,
    EnvironmentToJSONTyped,
} from './Environment';

/**
 * 
 * @export
 * @interface ValidateAPIKeyResponse
 */
export interface ValidateAPIKeyResponse {
    [key: string]: any | any;
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof ValidateAPIKeyResponse
     */
    readonly $schema?: string;
    /**
     * Environment
     * @type {Environment}
     * @memberof ValidateAPIKeyResponse
     */
    environment?: Environment;
    /**
     * Validation error
     * @type {string}
     * @memberof ValidateAPIKeyResponse
     */
    error?: string;
    /**
     * Key expiration
     * @type {Date}
     * @memberof ValidateAPIKeyResponse
     */
    expiresAt?: Date;
    /**
     * API key ID
     * @type {string}
     * @memberof ValidateAPIKeyResponse
     */
    keyId?: string;
    /**
     * Organization ID
     * @type {string}
     * @memberof ValidateAPIKeyResponse
     */
    organizationId?: string;
    /**
     * Granted permissions
     * @type {Array<string>}
     * @memberof ValidateAPIKeyResponse
     */
    permissions?: Array<string>;
    /**
     * Public key
     * @type {string}
     * @memberof ValidateAPIKeyResponse
     */
    publicKey?: string;
    /**
     * Rate limit information
     * @type {RateLimitInfo}
     * @memberof ValidateAPIKeyResponse
     */
    rateLimitInfo?: RateLimitInfo;
    /**
     * API scopes
     * @type {Array<string>}
     * @memberof ValidateAPIKeyResponse
     */
    scopes?: Array<string>;
    /**
     * API key type
     * @type {APIKeyType}
     * @memberof ValidateAPIKeyResponse
     */
    type?: APIKeyType;
    /**
     * User ID
     * @type {string}
     * @memberof ValidateAPIKeyResponse
     */
    userId?: string;
    /**
     * Whether key is valid
     * @type {boolean}
     * @memberof ValidateAPIKeyResponse
     */
    valid: boolean;
}



/**
 * Check if a given object implements the ValidateAPIKeyResponse interface.
 */
export function instanceOfValidateAPIKeyResponse(value: object): value is ValidateAPIKeyResponse {
    if (!('valid' in value) || value['valid'] === undefined) return false;
    return true;
}

export function ValidateAPIKeyResponseFromJSON(json: any): ValidateAPIKeyResponse {
    return ValidateAPIKeyResponseFromJSONTyped(json, false);
}

export function ValidateAPIKeyResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ValidateAPIKeyResponse {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        '$schema': json['$schema'] == null ? undefined : json['$schema'],
        'environment': json['environment'] == null ? undefined : EnvironmentFromJSON(json['environment']),
        'error': json['error'] == null ? undefined : json['error'],
        'expiresAt': json['expiresAt'] == null ? undefined : (new Date(json['expiresAt'])),
        'keyId': json['keyId'] == null ? undefined : json['keyId'],
        'organizationId': json['organizationId'] == null ? undefined : json['organizationId'],
        'permissions': json['permissions'] == null ? undefined : json['permissions'],
        'publicKey': json['publicKey'] == null ? undefined : json['publicKey'],
        'rateLimitInfo': json['rateLimitInfo'] == null ? undefined : RateLimitInfoFromJSON(json['rateLimitInfo']),
        'scopes': json['scopes'] == null ? undefined : json['scopes'],
        'type': json['type'] == null ? undefined : APIKeyTypeFromJSON(json['type']),
        'userId': json['userId'] == null ? undefined : json['userId'],
        'valid': json['valid'],
    };
}

export function ValidateAPIKeyResponseToJSON(json: any): ValidateAPIKeyResponse {
    return ValidateAPIKeyResponseToJSONTyped(json, false);
}

export function ValidateAPIKeyResponseToJSONTyped(value?: Omit<ValidateAPIKeyResponse, '$schema'> | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
            ...value,
        'environment': EnvironmentToJSON(value['environment']),
        'error': value['error'],
        'expiresAt': value['expiresAt'] == null ? undefined : ((value['expiresAt']).toISOString()),
        'keyId': value['keyId'],
        'organizationId': value['organizationId'],
        'permissions': value['permissions'],
        'publicKey': value['publicKey'],
        'rateLimitInfo': RateLimitInfoToJSON(value['rateLimitInfo']),
        'scopes': value['scopes'],
        'type': APIKeyTypeToJSON(value['type']),
        'userId': value['userId'],
        'valid': value['valid'],
    };
}

