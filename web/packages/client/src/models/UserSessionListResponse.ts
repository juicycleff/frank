/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Session } from './Session';
import {
    SessionFromJSON,
    SessionFromJSONTyped,
    SessionToJSON,
    SessionToJSONTyped,
} from './Session';

/**
 * 
 * @export
 * @interface UserSessionListResponse
 */
export interface UserSessionListResponse {
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof UserSessionListResponse
     */
    readonly $schema?: string;
    /**
     * 
     * @type {number}
     * @memberof UserSessionListResponse
     */
    active: number;
    /**
     * 
     * @type {Array<Session>}
     * @memberof UserSessionListResponse
     */
    sessions: Array<Session> | null;
    /**
     * 
     * @type {number}
     * @memberof UserSessionListResponse
     */
    total: number;
}

/**
 * Check if a given object implements the UserSessionListResponse interface.
 */
export function instanceOfUserSessionListResponse(value: object): value is UserSessionListResponse {
    if (!('active' in value) || value['active'] === undefined) return false;
    if (!('sessions' in value) || value['sessions'] === undefined) return false;
    if (!('total' in value) || value['total'] === undefined) return false;
    return true;
}

export function UserSessionListResponseFromJSON(json: any): UserSessionListResponse {
    return UserSessionListResponseFromJSONTyped(json, false);
}

export function UserSessionListResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserSessionListResponse {
    if (json == null) {
        return json;
    }
    return {
        
        '$schema': json['$schema'] == null ? undefined : json['$schema'],
        'active': json['active'],
        'sessions': (json['sessions'] == null ? null : (json['sessions'] as Array<any>).map(SessionFromJSON)),
        'total': json['total'],
    };
}

export function UserSessionListResponseToJSON(json: any): UserSessionListResponse {
    return UserSessionListResponseToJSONTyped(json, false);
}

export function UserSessionListResponseToJSONTyped(value?: Omit<UserSessionListResponse, '$schema'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'active': value['active'],
        'sessions': (value['sessions'] == null ? null : (value['sessions'] as Array<any>).map(SessionToJSON)),
        'total': value['total'],
    };
}

