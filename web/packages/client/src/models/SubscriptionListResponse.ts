/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Pagination } from './Pagination';
import {
    PaginationFromJSON,
    PaginationFromJSONTyped,
    PaginationToJSON,
    PaginationToJSONTyped,
} from './Pagination';
import type { SubscriptionSummary } from './SubscriptionSummary';
import {
    SubscriptionSummaryFromJSON,
    SubscriptionSummaryFromJSONTyped,
    SubscriptionSummaryToJSON,
    SubscriptionSummaryToJSONTyped,
} from './SubscriptionSummary';
import type { SubscriptionStats } from './SubscriptionStats';
import {
    SubscriptionStatsFromJSON,
    SubscriptionStatsFromJSONTyped,
    SubscriptionStatsToJSON,
    SubscriptionStatsToJSONTyped,
} from './SubscriptionStats';

/**
 * 
 * @export
 * @interface SubscriptionListResponse
 */
export interface SubscriptionListResponse {
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof SubscriptionListResponse
     */
    readonly $schema?: string;
    /**
     * 
     * @type {Pagination}
     * @memberof SubscriptionListResponse
     */
    pagination: Pagination;
    /**
     * 
     * @type {Array<SubscriptionSummary>}
     * @memberof SubscriptionListResponse
     */
    subscriptions: Array<SubscriptionSummary> | null;
    /**
     * 
     * @type {SubscriptionStats}
     * @memberof SubscriptionListResponse
     */
    summary: SubscriptionStats;
}

/**
 * Check if a given object implements the SubscriptionListResponse interface.
 */
export function instanceOfSubscriptionListResponse(value: object): value is SubscriptionListResponse {
    if (!('pagination' in value) || value['pagination'] === undefined) return false;
    if (!('subscriptions' in value) || value['subscriptions'] === undefined) return false;
    if (!('summary' in value) || value['summary'] === undefined) return false;
    return true;
}

export function SubscriptionListResponseFromJSON(json: any): SubscriptionListResponse {
    return SubscriptionListResponseFromJSONTyped(json, false);
}

export function SubscriptionListResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): SubscriptionListResponse {
    if (json == null) {
        return json;
    }
    return {
        
        '$schema': json['$schema'] == null ? undefined : json['$schema'],
        'pagination': PaginationFromJSON(json['pagination']),
        'subscriptions': (json['subscriptions'] == null ? null : (json['subscriptions'] as Array<any>).map(SubscriptionSummaryFromJSON)),
        'summary': SubscriptionStatsFromJSON(json['summary']),
    };
}

export function SubscriptionListResponseToJSON(json: any): SubscriptionListResponse {
    return SubscriptionListResponseToJSONTyped(json, false);
}

export function SubscriptionListResponseToJSONTyped(value?: Omit<SubscriptionListResponse, '$schema'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'pagination': PaginationToJSON(value['pagination']),
        'subscriptions': (value['subscriptions'] == null ? null : (value['subscriptions'] as Array<any>).map(SubscriptionSummaryToJSON)),
        'summary': SubscriptionStatsToJSON(value['summary']),
    };
}

