/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { OrgStats } from './OrgStats';
import {
    OrgStatsFromJSON,
    OrgStatsFromJSONTyped,
    OrgStatsToJSON,
    OrgStatsToJSONTyped,
} from './OrgStats';
import type { OrgType } from './OrgType';
import {
    OrgTypeFromJSON,
    OrgTypeFromJSONTyped,
    OrgTypeToJSON,
    OrgTypeToJSONTyped,
} from './OrgType';
import type { FeatureSummary } from './FeatureSummary';
import {
    FeatureSummaryFromJSON,
    FeatureSummaryFromJSONTyped,
    FeatureSummaryToJSON,
    FeatureSummaryToJSONTyped,
} from './FeatureSummary';
import type { UserSummary } from './UserSummary';
import {
    UserSummaryFromJSON,
    UserSummaryFromJSONTyped,
    UserSummaryToJSON,
    UserSummaryToJSONTyped,
} from './UserSummary';
import type { MemberSummary } from './MemberSummary';
import {
    MemberSummaryFromJSON,
    MemberSummaryFromJSONTyped,
    MemberSummaryToJSON,
    MemberSummaryToJSONTyped,
} from './MemberSummary';

/**
 * 
 * @export
 * @interface PlatformOrganizationSummary
 */
export interface PlatformOrganizationSummary {
    [key: string]: any | any;
    /**
     * Whether organization is active
     * @type {boolean}
     * @memberof PlatformOrganizationSummary
     */
    active: boolean;
    /**
     * Monthly API request limit
     * @type {number}
     * @memberof PlatformOrganizationSummary
     */
    apiRequestLimit: number;
    /**
     * API requests used this month
     * @type {number}
     * @memberof PlatformOrganizationSummary
     */
    apiRequestsUsed: number;
    /**
     * Auth service configuration
     * @type {object}
     * @memberof PlatformOrganizationSummary
     */
    authConfig?: object;
    /**
     * Custom auth domain
     * @type {string}
     * @memberof PlatformOrganizationSummary
     */
    authDomain?: string;
    /**
     * Whether auth service is enabled
     * @type {boolean}
     * @memberof PlatformOrganizationSummary
     */
    authServiceEnabled: boolean;
    /**
     * 
     * @type {Date}
     * @memberof PlatformOrganizationSummary
     */
    createdAt: Date;
    /**
     * Current end user count
     * @type {number}
     * @memberof PlatformOrganizationSummary
     */
    currentEndUsers: number;
    /**
     * Current external user count
     * @type {number}
     * @memberof PlatformOrganizationSummary
     */
    currentExternalUsers: number;
    /**
     * Billing customer ID
     * @type {string}
     * @memberof PlatformOrganizationSummary
     */
    customerId?: string;
    /**
     * Primary domain
     * @type {string}
     * @memberof PlatformOrganizationSummary
     */
    domain?: string;
    /**
     * Organization domains
     * @type {Array<string>}
     * @memberof PlatformOrganizationSummary
     */
    domains?: Array<string>;
    /**
     * Maximum end users allowed
     * @type {number}
     * @memberof PlatformOrganizationSummary
     */
    endUserLimit: number;
    /**
     * Maximum external users allowed
     * @type {number}
     * @memberof PlatformOrganizationSummary
     */
    externalUserLimit: number;
    /**
     * Enabled features
     * @type {Array<FeatureSummary>}
     * @memberof PlatformOrganizationSummary
     */
    features?: Array<FeatureSummary>;
    /**
     * 
     * @type {string}
     * @memberof PlatformOrganizationSummary
     */
    id: string;
    /**
     * Whether this is the platform organization
     * @type {boolean}
     * @memberof PlatformOrganizationSummary
     */
    isPlatformOrganization: boolean;
    /**
     * Organization logo URL
     * @type {string}
     * @memberof PlatformOrganizationSummary
     */
    logoUrl?: string;
    /**
     * Organization members
     * @type {Array<MemberSummary>}
     * @memberof PlatformOrganizationSummary
     */
    members?: Array<MemberSummary>;
    /**
     * Additional organization metadata
     * @type {object}
     * @memberof PlatformOrganizationSummary
     */
    metadata?: object;
    /**
     * Organization name
     * @type {string}
     * @memberof PlatformOrganizationSummary
     */
    name: string;
    /**
     * Organization type (platform, customer)
     * @type {OrgType}
     * @memberof PlatformOrganizationSummary
     */
    orgType: OrgType;
    /**
     * Organization owner
     * @type {UserSummary}
     * @memberof PlatformOrganizationSummary
     */
    owner?: UserSummary;
    /**
     * Organization owner ID
     * @type {string}
     * @memberof PlatformOrganizationSummary
     */
    ownerId?: string;
    /**
     * Subscription plan
     * @type {string}
     * @memberof PlatformOrganizationSummary
     */
    plan: string;
    /**
     * Unique organization slug
     * @type {string}
     * @memberof PlatformOrganizationSummary
     */
    slug: string;
    /**
     * SSO domain
     * @type {string}
     * @memberof PlatformOrganizationSummary
     */
    ssoDomain?: string;
    /**
     * Whether SSO is enabled
     * @type {boolean}
     * @memberof PlatformOrganizationSummary
     */
    ssoEnabled: boolean;
    /**
     * Organization statistics
     * @type {OrgStats}
     * @memberof PlatformOrganizationSummary
     */
    stats?: OrgStats;
    /**
     * Billing subscription ID
     * @type {string}
     * @memberof PlatformOrganizationSummary
     */
    subscriptionId?: string;
    /**
     * Subscription status
     * @type {string}
     * @memberof PlatformOrganizationSummary
     */
    subscriptionStatus: string;
    /**
     * Trial end date
     * @type {Date}
     * @memberof PlatformOrganizationSummary
     */
    trialEndsAt?: Date;
    /**
     * Whether trial has been used
     * @type {boolean}
     * @memberof PlatformOrganizationSummary
     */
    trialUsed: boolean;
    /**
     * 
     * @type {Date}
     * @memberof PlatformOrganizationSummary
     */
    updatedAt: Date;
    /**
     * Verified domains
     * @type {Array<string>}
     * @memberof PlatformOrganizationSummary
     */
    verifiedDomains?: Array<string>;
}



/**
 * Check if a given object implements the PlatformOrganizationSummary interface.
 */
export function instanceOfPlatformOrganizationSummary(value: object): value is PlatformOrganizationSummary {
    if (!('active' in value) || value['active'] === undefined) return false;
    if (!('apiRequestLimit' in value) || value['apiRequestLimit'] === undefined) return false;
    if (!('apiRequestsUsed' in value) || value['apiRequestsUsed'] === undefined) return false;
    if (!('authServiceEnabled' in value) || value['authServiceEnabled'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('currentEndUsers' in value) || value['currentEndUsers'] === undefined) return false;
    if (!('currentExternalUsers' in value) || value['currentExternalUsers'] === undefined) return false;
    if (!('endUserLimit' in value) || value['endUserLimit'] === undefined) return false;
    if (!('externalUserLimit' in value) || value['externalUserLimit'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('isPlatformOrganization' in value) || value['isPlatformOrganization'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('orgType' in value) || value['orgType'] === undefined) return false;
    if (!('plan' in value) || value['plan'] === undefined) return false;
    if (!('slug' in value) || value['slug'] === undefined) return false;
    if (!('ssoEnabled' in value) || value['ssoEnabled'] === undefined) return false;
    if (!('subscriptionStatus' in value) || value['subscriptionStatus'] === undefined) return false;
    if (!('trialUsed' in value) || value['trialUsed'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    return true;
}

export function PlatformOrganizationSummaryFromJSON(json: any): PlatformOrganizationSummary {
    return PlatformOrganizationSummaryFromJSONTyped(json, false);
}

export function PlatformOrganizationSummaryFromJSONTyped(json: any, ignoreDiscriminator: boolean): PlatformOrganizationSummary {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        'active': json['active'],
        'apiRequestLimit': json['apiRequestLimit'],
        'apiRequestsUsed': json['apiRequestsUsed'],
        'authConfig': json['authConfig'] == null ? undefined : json['authConfig'],
        'authDomain': json['authDomain'] == null ? undefined : json['authDomain'],
        'authServiceEnabled': json['authServiceEnabled'],
        'createdAt': (new Date(json['createdAt'])),
        'currentEndUsers': json['currentEndUsers'],
        'currentExternalUsers': json['currentExternalUsers'],
        'customerId': json['customerId'] == null ? undefined : json['customerId'],
        'domain': json['domain'] == null ? undefined : json['domain'],
        'domains': json['domains'] == null ? undefined : json['domains'],
        'endUserLimit': json['endUserLimit'],
        'externalUserLimit': json['externalUserLimit'],
        'features': json['features'] == null ? undefined : ((json['features'] as Array<any>).map(FeatureSummaryFromJSON)),
        'id': json['id'],
        'isPlatformOrganization': json['isPlatformOrganization'],
        'logoUrl': json['logoUrl'] == null ? undefined : json['logoUrl'],
        'members': json['members'] == null ? undefined : ((json['members'] as Array<any>).map(MemberSummaryFromJSON)),
        'metadata': json['metadata'] == null ? undefined : json['metadata'],
        'name': json['name'],
        'orgType': OrgTypeFromJSON(json['orgType']),
        'owner': json['owner'] == null ? undefined : UserSummaryFromJSON(json['owner']),
        'ownerId': json['ownerId'] == null ? undefined : json['ownerId'],
        'plan': json['plan'],
        'slug': json['slug'],
        'ssoDomain': json['ssoDomain'] == null ? undefined : json['ssoDomain'],
        'ssoEnabled': json['ssoEnabled'],
        'stats': json['stats'] == null ? undefined : OrgStatsFromJSON(json['stats']),
        'subscriptionId': json['subscriptionId'] == null ? undefined : json['subscriptionId'],
        'subscriptionStatus': json['subscriptionStatus'],
        'trialEndsAt': json['trialEndsAt'] == null ? undefined : (new Date(json['trialEndsAt'])),
        'trialUsed': json['trialUsed'],
        'updatedAt': (new Date(json['updatedAt'])),
        'verifiedDomains': json['verifiedDomains'] == null ? undefined : json['verifiedDomains'],
    };
}

export function PlatformOrganizationSummaryToJSON(json: any): PlatformOrganizationSummary {
    return PlatformOrganizationSummaryToJSONTyped(json, false);
}

export function PlatformOrganizationSummaryToJSONTyped(value?: PlatformOrganizationSummary | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
            ...value,
        'active': value['active'],
        'apiRequestLimit': value['apiRequestLimit'],
        'apiRequestsUsed': value['apiRequestsUsed'],
        'authConfig': value['authConfig'],
        'authDomain': value['authDomain'],
        'authServiceEnabled': value['authServiceEnabled'],
        'createdAt': ((value['createdAt']).toISOString()),
        'currentEndUsers': value['currentEndUsers'],
        'currentExternalUsers': value['currentExternalUsers'],
        'customerId': value['customerId'],
        'domain': value['domain'],
        'domains': value['domains'],
        'endUserLimit': value['endUserLimit'],
        'externalUserLimit': value['externalUserLimit'],
        'features': value['features'] == null ? undefined : ((value['features'] as Array<any>).map(FeatureSummaryToJSON)),
        'id': value['id'],
        'isPlatformOrganization': value['isPlatformOrganization'],
        'logoUrl': value['logoUrl'],
        'members': value['members'] == null ? undefined : ((value['members'] as Array<any>).map(MemberSummaryToJSON)),
        'metadata': value['metadata'],
        'name': value['name'],
        'orgType': OrgTypeToJSON(value['orgType']),
        'owner': UserSummaryToJSON(value['owner']),
        'ownerId': value['ownerId'],
        'plan': value['plan'],
        'slug': value['slug'],
        'ssoDomain': value['ssoDomain'],
        'ssoEnabled': value['ssoEnabled'],
        'stats': OrgStatsToJSON(value['stats']),
        'subscriptionId': value['subscriptionId'],
        'subscriptionStatus': value['subscriptionStatus'],
        'trialEndsAt': value['trialEndsAt'] == null ? undefined : ((value['trialEndsAt']).toISOString()),
        'trialUsed': value['trialUsed'],
        'updatedAt': ((value['updatedAt']).toISOString()),
        'verifiedDomains': value['verifiedDomains'],
    };
}

