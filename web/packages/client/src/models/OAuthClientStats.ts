/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface OAuthClientStats
 */
export interface OAuthClientStats {
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof OAuthClientStats
     */
    readonly $schema?: string;
    /**
     * Active tokens
     * @type {number}
     * @memberof OAuthClientStats
     */
    activeTokens: number;
    /**
     * Authorizations this month
     * @type {number}
     * @memberof OAuthClientStats
     */
    authorizationsThisMonth: number;
    /**
     * Last usage timestamp
     * @type {Date}
     * @memberof OAuthClientStats
     */
    lastUsed?: Date;
    /**
     * Authorization success rate percentage
     * @type {number}
     * @memberof OAuthClientStats
     */
    successRate: number;
    /**
     * Tokens issued this month
     * @type {number}
     * @memberof OAuthClientStats
     */
    tokensThisMonth: number;
    /**
     * Total authorizations
     * @type {number}
     * @memberof OAuthClientStats
     */
    totalAuthorizations: number;
    /**
     * Total tokens issued
     * @type {number}
     * @memberof OAuthClientStats
     */
    totalTokens: number;
    /**
     * Unique users who authorized
     * @type {number}
     * @memberof OAuthClientStats
     */
    uniqueUsers: number;
}

/**
 * Check if a given object implements the OAuthClientStats interface.
 */
export function instanceOfOAuthClientStats(value: object): value is OAuthClientStats {
    if (!('activeTokens' in value) || value['activeTokens'] === undefined) return false;
    if (!('authorizationsThisMonth' in value) || value['authorizationsThisMonth'] === undefined) return false;
    if (!('successRate' in value) || value['successRate'] === undefined) return false;
    if (!('tokensThisMonth' in value) || value['tokensThisMonth'] === undefined) return false;
    if (!('totalAuthorizations' in value) || value['totalAuthorizations'] === undefined) return false;
    if (!('totalTokens' in value) || value['totalTokens'] === undefined) return false;
    if (!('uniqueUsers' in value) || value['uniqueUsers'] === undefined) return false;
    return true;
}

export function OAuthClientStatsFromJSON(json: any): OAuthClientStats {
    return OAuthClientStatsFromJSONTyped(json, false);
}

export function OAuthClientStatsFromJSONTyped(json: any, ignoreDiscriminator: boolean): OAuthClientStats {
    if (json == null) {
        return json;
    }
    return {
        
        '$schema': json['$schema'] == null ? undefined : json['$schema'],
        'activeTokens': json['activeTokens'],
        'authorizationsThisMonth': json['authorizationsThisMonth'],
        'lastUsed': json['lastUsed'] == null ? undefined : (new Date(json['lastUsed'])),
        'successRate': json['successRate'],
        'tokensThisMonth': json['tokensThisMonth'],
        'totalAuthorizations': json['totalAuthorizations'],
        'totalTokens': json['totalTokens'],
        'uniqueUsers': json['uniqueUsers'],
    };
}

export function OAuthClientStatsToJSON(json: any): OAuthClientStats {
    return OAuthClientStatsToJSONTyped(json, false);
}

export function OAuthClientStatsToJSONTyped(value?: Omit<OAuthClientStats, '$schema'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'activeTokens': value['activeTokens'],
        'authorizationsThisMonth': value['authorizationsThisMonth'],
        'lastUsed': value['lastUsed'] == null ? undefined : ((value['lastUsed']).toISOString()),
        'successRate': value['successRate'],
        'tokensThisMonth': value['tokensThisMonth'],
        'totalAuthorizations': value['totalAuthorizations'],
        'totalTokens': value['totalTokens'],
        'uniqueUsers': value['uniqueUsers'],
    };
}

