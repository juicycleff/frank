/* tslint:disable */
/* eslint-disable */
/**
 * My Project
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UserStats
 */
export interface UserStats {
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof UserStats
     */
    readonly $schema?: string;
    /**
     * Number of active users
     * @type {number}
     * @memberof UserStats
     */
    activeUsers: number;
    /**
     * Number of end users
     * @type {number}
     * @memberof UserStats
     */
    endUsers: number;
    /**
     * Number of external users
     * @type {number}
     * @memberof UserStats
     */
    externalUsers: number;
    /**
     * Number of internal users
     * @type {number}
     * @memberof UserStats
     */
    internalUsers: number;
    /**
     * Number of users with MFA enabled
     * @type {number}
     * @memberof UserStats
     */
    mfaEnabled: number;
    /**
     * Number of users logged in recently
     * @type {number}
     * @memberof UserStats
     */
    recentLogins: number;
    /**
     * Total number of users
     * @type {number}
     * @memberof UserStats
     */
    totalUsers: number;
    /**
     * Number of users with verified emails
     * @type {number}
     * @memberof UserStats
     */
    verifiedEmails: number;
    /**
     * Number of users with verified phones
     * @type {number}
     * @memberof UserStats
     */
    verifiedPhones: number;
}

export function UserStatsFromJSON(json: any): UserStats {
    return UserStatsFromJSONTyped(json, false);
}

export function UserStatsFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserStats {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        '$schema': !exists(json, '$schema') ? undefined : json['$schema'],
        'activeUsers': json['activeUsers'],
        'endUsers': json['endUsers'],
        'externalUsers': json['externalUsers'],
        'internalUsers': json['internalUsers'],
        'mfaEnabled': json['mfaEnabled'],
        'recentLogins': json['recentLogins'],
        'totalUsers': json['totalUsers'],
        'verifiedEmails': json['verifiedEmails'],
        'verifiedPhones': json['verifiedPhones'],
    };
}

export function UserStatsToJSON(value?: UserStats | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'activeUsers': value.activeUsers,
        'endUsers': value.endUsers,
        'externalUsers': value.externalUsers,
        'internalUsers': value.internalUsers,
        'mfaEnabled': value.mfaEnabled,
        'recentLogins': value.recentLogins,
        'totalUsers': value.totalUsers,
        'verifiedEmails': value.verifiedEmails,
        'verifiedPhones': value.verifiedPhones,
    };
}


