/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface OAuthStats
 */
export interface OAuthStats {
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof OAuthStats
     */
    readonly $schema?: string;
    /**
     * Active OAuth clients
     * @type {number}
     * @memberof OAuthStats
     */
    activeClients: number;
    /**
     * Active tokens
     * @type {number}
     * @memberof OAuthStats
     */
    activeTokens: number;
    /**
     * Authorizations today
     * @type {number}
     * @memberof OAuthStats
     */
    authorizationsToday: number;
    /**
     * Expired tokens
     * @type {number}
     * @memberof OAuthStats
     */
    expiredTokens: number;
    /**
     * Public OAuth clients
     * @type {number}
     * @memberof OAuthStats
     */
    publicClients: number;
    /**
     * Revoked tokens
     * @type {number}
     * @memberof OAuthStats
     */
    revokedTokens: number;
    /**
     * Tokens issued today
     * @type {number}
     * @memberof OAuthStats
     */
    tokensToday: number;
    /**
     * Total authorizations
     * @type {number}
     * @memberof OAuthStats
     */
    totalAuthorizations: number;
    /**
     * Total OAuth clients
     * @type {number}
     * @memberof OAuthStats
     */
    totalClients: number;
    /**
     * Total scopes
     * @type {number}
     * @memberof OAuthStats
     */
    totalScopes: number;
    /**
     * Total issued tokens
     * @type {number}
     * @memberof OAuthStats
     */
    totalTokens: number;
}

/**
 * Check if a given object implements the OAuthStats interface.
 */
export function instanceOfOAuthStats(value: object): value is OAuthStats {
    if (!('activeClients' in value) || value['activeClients'] === undefined) return false;
    if (!('activeTokens' in value) || value['activeTokens'] === undefined) return false;
    if (!('authorizationsToday' in value) || value['authorizationsToday'] === undefined) return false;
    if (!('expiredTokens' in value) || value['expiredTokens'] === undefined) return false;
    if (!('publicClients' in value) || value['publicClients'] === undefined) return false;
    if (!('revokedTokens' in value) || value['revokedTokens'] === undefined) return false;
    if (!('tokensToday' in value) || value['tokensToday'] === undefined) return false;
    if (!('totalAuthorizations' in value) || value['totalAuthorizations'] === undefined) return false;
    if (!('totalClients' in value) || value['totalClients'] === undefined) return false;
    if (!('totalScopes' in value) || value['totalScopes'] === undefined) return false;
    if (!('totalTokens' in value) || value['totalTokens'] === undefined) return false;
    return true;
}

export function OAuthStatsFromJSON(json: any): OAuthStats {
    return OAuthStatsFromJSONTyped(json, false);
}

export function OAuthStatsFromJSONTyped(json: any, ignoreDiscriminator: boolean): OAuthStats {
    if (json == null) {
        return json;
    }
    return {
        
        '$schema': json['$schema'] == null ? undefined : json['$schema'],
        'activeClients': json['activeClients'],
        'activeTokens': json['activeTokens'],
        'authorizationsToday': json['authorizationsToday'],
        'expiredTokens': json['expiredTokens'],
        'publicClients': json['publicClients'],
        'revokedTokens': json['revokedTokens'],
        'tokensToday': json['tokensToday'],
        'totalAuthorizations': json['totalAuthorizations'],
        'totalClients': json['totalClients'],
        'totalScopes': json['totalScopes'],
        'totalTokens': json['totalTokens'],
    };
}

export function OAuthStatsToJSON(json: any): OAuthStats {
    return OAuthStatsToJSONTyped(json, false);
}

export function OAuthStatsToJSONTyped(value?: Omit<OAuthStats, '$schema'> | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'activeClients': value['activeClients'],
        'activeTokens': value['activeTokens'],
        'authorizationsToday': value['authorizationsToday'],
        'expiredTokens': value['expiredTokens'],
        'publicClients': value['publicClients'],
        'revokedTokens': value['revokedTokens'],
        'tokensToday': value['tokensToday'],
        'totalAuthorizations': value['totalAuthorizations'],
        'totalClients': value['totalClients'],
        'totalScopes': value['totalScopes'],
        'totalTokens': value['totalTokens'],
    };
}

