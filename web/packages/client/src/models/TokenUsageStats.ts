/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { OAuthDailyUsage } from './OAuthDailyUsage';
import {
    OAuthDailyUsageFromJSON,
    OAuthDailyUsageFromJSONTyped,
    OAuthDailyUsageToJSON,
    OAuthDailyUsageToJSONTyped,
} from './OAuthDailyUsage';

/**
 * 
 * @export
 * @interface TokenUsageStats
 */
export interface TokenUsageStats {
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof TokenUsageStats
     */
    readonly $schema?: string;
    /**
     * 
     * @type {number}
     * @memberof TokenUsageStats
     */
    activeTokens: number;
    /**
     * 
     * @type {{ [key: string]: number; }}
     * @memberof TokenUsageStats
     */
    clientBreakdown: { [key: string]: number; };
    /**
     * 
     * @type {Array<OAuthDailyUsage>}
     * @memberof TokenUsageStats
     */
    dailyBreakdown: Array<OAuthDailyUsage> | null;
    /**
     * 
     * @type {number}
     * @memberof TokenUsageStats
     */
    expiredTokens: number;
    /**
     * 
     * @type {number}
     * @memberof TokenUsageStats
     */
    revokedTokens: number;
    /**
     * 
     * @type {{ [key: string]: number; }}
     * @memberof TokenUsageStats
     */
    scopeBreakdown: { [key: string]: number; };
    /**
     * 
     * @type {number}
     * @memberof TokenUsageStats
     */
    totalTokens: number;
}

/**
 * Check if a given object implements the TokenUsageStats interface.
 */
export function instanceOfTokenUsageStats(value: object): value is TokenUsageStats {
    if (!('activeTokens' in value) || value['activeTokens'] === undefined) return false;
    if (!('clientBreakdown' in value) || value['clientBreakdown'] === undefined) return false;
    if (!('dailyBreakdown' in value) || value['dailyBreakdown'] === undefined) return false;
    if (!('expiredTokens' in value) || value['expiredTokens'] === undefined) return false;
    if (!('revokedTokens' in value) || value['revokedTokens'] === undefined) return false;
    if (!('scopeBreakdown' in value) || value['scopeBreakdown'] === undefined) return false;
    if (!('totalTokens' in value) || value['totalTokens'] === undefined) return false;
    return true;
}

export function TokenUsageStatsFromJSON(json: any): TokenUsageStats {
    return TokenUsageStatsFromJSONTyped(json, false);
}

export function TokenUsageStatsFromJSONTyped(json: any, ignoreDiscriminator: boolean): TokenUsageStats {
    if (json == null) {
        return json;
    }
    return {
        
        '$schema': json['$schema'] == null ? undefined : json['$schema'],
        'activeTokens': json['activeTokens'],
        'clientBreakdown': json['clientBreakdown'],
        'dailyBreakdown': (json['dailyBreakdown'] == null ? null : (json['dailyBreakdown'] as Array<any>).map(OAuthDailyUsageFromJSON)),
        'expiredTokens': json['expiredTokens'],
        'revokedTokens': json['revokedTokens'],
        'scopeBreakdown': json['scopeBreakdown'],
        'totalTokens': json['totalTokens'],
    };
}

export function TokenUsageStatsToJSON(json: any): TokenUsageStats {
    return TokenUsageStatsToJSONTyped(json, false);
}

export function TokenUsageStatsToJSONTyped(value?: Omit<TokenUsageStats, '$schema'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'activeTokens': value['activeTokens'],
        'clientBreakdown': value['clientBreakdown'],
        'dailyBreakdown': (value['dailyBreakdown'] == null ? null : (value['dailyBreakdown'] as Array<any>).map(OAuthDailyUsageToJSON)),
        'expiredTokens': value['expiredTokens'],
        'revokedTokens': value['revokedTokens'],
        'scopeBreakdown': value['scopeBreakdown'],
        'totalTokens': value['totalTokens'],
    };
}

