/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { HIPAAPhysical } from './HIPAAPhysical';
import {
    HIPAAPhysicalFromJSON,
    HIPAAPhysicalFromJSONTyped,
    HIPAAPhysicalToJSON,
    HIPAAPhysicalToJSONTyped,
} from './HIPAAPhysical';
import type { HIPAAAdministrative } from './HIPAAAdministrative';
import {
    HIPAAAdministrativeFromJSON,
    HIPAAAdministrativeFromJSONTyped,
    HIPAAAdministrativeToJSON,
    HIPAAAdministrativeToJSONTyped,
} from './HIPAAAdministrative';
import type { HIPAATechnical } from './HIPAATechnical';
import {
    HIPAATechnicalFromJSON,
    HIPAATechnicalFromJSONTyped,
    HIPAATechnicalToJSON,
    HIPAATechnicalToJSONTyped,
} from './HIPAATechnical';

/**
 * 
 * @export
 * @interface HIPAASafeguards
 */
export interface HIPAASafeguards {
    /**
     * 
     * @type {HIPAAAdministrative}
     * @memberof HIPAASafeguards
     */
    administrative: HIPAAAdministrative;
    /**
     * 
     * @type {HIPAAPhysical}
     * @memberof HIPAASafeguards
     */
    physical: HIPAAPhysical;
    /**
     * 
     * @type {HIPAATechnical}
     * @memberof HIPAASafeguards
     */
    technical: HIPAATechnical;
}

/**
 * Check if a given object implements the HIPAASafeguards interface.
 */
export function instanceOfHIPAASafeguards(value: object): value is HIPAASafeguards {
    if (!('administrative' in value) || value['administrative'] === undefined) return false;
    if (!('physical' in value) || value['physical'] === undefined) return false;
    if (!('technical' in value) || value['technical'] === undefined) return false;
    return true;
}

export function HIPAASafeguardsFromJSON(json: any): HIPAASafeguards {
    return HIPAASafeguardsFromJSONTyped(json, false);
}

export function HIPAASafeguardsFromJSONTyped(json: any, ignoreDiscriminator: boolean): HIPAASafeguards {
    if (json == null) {
        return json;
    }
    return {
        
        'administrative': HIPAAAdministrativeFromJSON(json['administrative']),
        'physical': HIPAAPhysicalFromJSON(json['physical']),
        'technical': HIPAATechnicalFromJSON(json['technical']),
    };
}

export function HIPAASafeguardsToJSON(json: any): HIPAASafeguards {
    return HIPAASafeguardsToJSONTyped(json, false);
}

export function HIPAASafeguardsToJSONTyped(value?: HIPAASafeguards | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'administrative': HIPAAAdministrativeToJSON(value['administrative']),
        'physical': HIPAAPhysicalToJSON(value['physical']),
        'technical': HIPAATechnicalToJSON(value['technical']),
    };
}

