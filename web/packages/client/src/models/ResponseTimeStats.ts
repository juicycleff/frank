/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ResponseTimeStats
 */
export interface ResponseTimeStats {
    /**
     * 
     * @type {number}
     * @memberof ResponseTimeStats
     */
    average: number;
    /**
     * 
     * @type {number}
     * @memberof ResponseTimeStats
     */
    max: number;
    /**
     * 
     * @type {number}
     * @memberof ResponseTimeStats
     */
    median: number;
    /**
     * 
     * @type {number}
     * @memberof ResponseTimeStats
     */
    min: number;
    /**
     * 
     * @type {number}
     * @memberof ResponseTimeStats
     */
    p95: number;
    /**
     * 
     * @type {number}
     * @memberof ResponseTimeStats
     */
    p99: number;
    /**
     * 
     * @type {string}
     * @memberof ResponseTimeStats
     */
    trend: string;
}

/**
 * Check if a given object implements the ResponseTimeStats interface.
 */
export function instanceOfResponseTimeStats(value: object): value is ResponseTimeStats {
    if (!('average' in value) || value['average'] === undefined) return false;
    if (!('max' in value) || value['max'] === undefined) return false;
    if (!('median' in value) || value['median'] === undefined) return false;
    if (!('min' in value) || value['min'] === undefined) return false;
    if (!('p95' in value) || value['p95'] === undefined) return false;
    if (!('p99' in value) || value['p99'] === undefined) return false;
    if (!('trend' in value) || value['trend'] === undefined) return false;
    return true;
}

export function ResponseTimeStatsFromJSON(json: any): ResponseTimeStats {
    return ResponseTimeStatsFromJSONTyped(json, false);
}

export function ResponseTimeStatsFromJSONTyped(json: any, ignoreDiscriminator: boolean): ResponseTimeStats {
    if (json == null) {
        return json;
    }
    return {
        
        'average': json['average'],
        'max': json['max'],
        'median': json['median'],
        'min': json['min'],
        'p95': json['p95'],
        'p99': json['p99'],
        'trend': json['trend'],
    };
}

export function ResponseTimeStatsToJSON(json: any): ResponseTimeStats {
    return ResponseTimeStatsToJSONTyped(json, false);
}

export function ResponseTimeStatsToJSONTyped(value?: ResponseTimeStats | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'average': value['average'],
        'max': value['max'],
        'median': value['median'],
        'min': value['min'],
        'p95': value['p95'],
        'p99': value['p99'],
        'trend': value['trend'],
    };
}

