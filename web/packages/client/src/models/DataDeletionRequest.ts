/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DataDeletionRequest
 */
export interface DataDeletionRequest {
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof DataDeletionRequest
     */
    readonly $schema?: string;
    /**
     * 
     * @type {string}
     * @memberof DataDeletionRequest
     */
    legalBasis: string;
    /**
     * 
     * @type {string}
     * @memberof DataDeletionRequest
     */
    organizationId: string;
    /**
     * 
     * @type {string}
     * @memberof DataDeletionRequest
     */
    reason: string;
    /**
     * 
     * @type {string}
     * @memberof DataDeletionRequest
     */
    requestType: string;
    /**
     * 
     * @type {Date}
     * @memberof DataDeletionRequest
     */
    requestedAt: Date;
    /**
     * 
     * @type {string}
     * @memberof DataDeletionRequest
     */
    requestedBy: string;
    /**
     * 
     * @type {string}
     * @memberof DataDeletionRequest
     */
    userId: string;
    /**
     * 
     * @type {boolean}
     * @memberof DataDeletionRequest
     */
    verificationRequired: boolean;
}

/**
 * Check if a given object implements the DataDeletionRequest interface.
 */
export function instanceOfDataDeletionRequest(value: object): value is DataDeletionRequest {
    if (!('legalBasis' in value) || value['legalBasis'] === undefined) return false;
    if (!('organizationId' in value) || value['organizationId'] === undefined) return false;
    if (!('reason' in value) || value['reason'] === undefined) return false;
    if (!('requestType' in value) || value['requestType'] === undefined) return false;
    if (!('requestedAt' in value) || value['requestedAt'] === undefined) return false;
    if (!('requestedBy' in value) || value['requestedBy'] === undefined) return false;
    if (!('userId' in value) || value['userId'] === undefined) return false;
    if (!('verificationRequired' in value) || value['verificationRequired'] === undefined) return false;
    return true;
}

export function DataDeletionRequestFromJSON(json: any): DataDeletionRequest {
    return DataDeletionRequestFromJSONTyped(json, false);
}

export function DataDeletionRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): DataDeletionRequest {
    if (json == null) {
        return json;
    }
    return {
        
        '$schema': json['$schema'] == null ? undefined : json['$schema'],
        'legalBasis': json['legal_basis'],
        'organizationId': json['organization_id'],
        'reason': json['reason'],
        'requestType': json['request_type'],
        'requestedAt': (new Date(json['requested_at'])),
        'requestedBy': json['requested_by'],
        'userId': json['user_id'],
        'verificationRequired': json['verification_required'],
    };
}

export function DataDeletionRequestToJSON(json: any): DataDeletionRequest {
    return DataDeletionRequestToJSONTyped(json, false);
}

export function DataDeletionRequestToJSONTyped(value?: Omit<DataDeletionRequest, '$schema'> | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'legal_basis': value['legalBasis'],
        'organization_id': value['organizationId'],
        'reason': value['reason'],
        'request_type': value['requestType'],
        'requested_at': ((value['requestedAt']).toISOString()),
        'requested_by': value['requestedBy'],
        'user_id': value['userId'],
        'verification_required': value['verificationRequired'],
    };
}

