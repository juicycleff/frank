/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SSOProvisionError } from './SSOProvisionError';
import {
    SSOProvisionErrorFromJSON,
    SSOProvisionErrorFromJSONTyped,
    SSOProvisionErrorToJSON,
    SSOProvisionErrorToJSONTyped,
} from './SSOProvisionError';
import type { SSOProvisionedUser } from './SSOProvisionedUser';
import {
    SSOProvisionedUserFromJSON,
    SSOProvisionedUserFromJSONTyped,
    SSOProvisionedUserToJSON,
    SSOProvisionedUserToJSONTyped,
} from './SSOProvisionedUser';

/**
 * 
 * @export
 * @interface SSOBulkProvisionResponse
 */
export interface SSOBulkProvisionResponse {
    [key: string]: any | any;
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof SSOBulkProvisionResponse
     */
    readonly $schema?: string;
    /**
     * Whether this was a dry run
     * @type {boolean}
     * @memberof SSOBulkProvisionResponse
     */
    dryRun: boolean;
    /**
     * Failed provisionings
     * @type {Array<SSOProvisionError>}
     * @memberof SSOBulkProvisionResponse
     */
    failed?: Array<SSOProvisionError>;
    /**
     * Failure count
     * @type {number}
     * @memberof SSOBulkProvisionResponse
     */
    failureCount: number;
    /**
     * Successfully provisioned users
     * @type {Array<SSOProvisionedUser>}
     * @memberof SSOBulkProvisionResponse
     */
    success: Array<SSOProvisionedUser>;
    /**
     * Success count
     * @type {number}
     * @memberof SSOBulkProvisionResponse
     */
    successCount: number;
}

/**
 * Check if a given object implements the SSOBulkProvisionResponse interface.
 */
export function instanceOfSSOBulkProvisionResponse(value: object): value is SSOBulkProvisionResponse {
    if (!('dryRun' in value) || value['dryRun'] === undefined) return false;
    if (!('failureCount' in value) || value['failureCount'] === undefined) return false;
    if (!('success' in value) || value['success'] === undefined) return false;
    if (!('successCount' in value) || value['successCount'] === undefined) return false;
    return true;
}

export function SSOBulkProvisionResponseFromJSON(json: any): SSOBulkProvisionResponse {
    return SSOBulkProvisionResponseFromJSONTyped(json, false);
}

export function SSOBulkProvisionResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): SSOBulkProvisionResponse {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        '$schema': json['$schema'] == null ? undefined : json['$schema'],
        'dryRun': json['dryRun'],
        'failed': json['failed'] == null ? undefined : ((json['failed'] as Array<any>).map(SSOProvisionErrorFromJSON)),
        'failureCount': json['failureCount'],
        'success': ((json['success'] as Array<any>).map(SSOProvisionedUserFromJSON)),
        'successCount': json['successCount'],
    };
}

export function SSOBulkProvisionResponseToJSON(json: any): SSOBulkProvisionResponse {
    return SSOBulkProvisionResponseToJSONTyped(json, false);
}

export function SSOBulkProvisionResponseToJSONTyped(value?: Omit<SSOBulkProvisionResponse, '$schema'> | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
            ...value,
        'dryRun': value['dryRun'],
        'failed': value['failed'] == null ? undefined : ((value['failed'] as Array<any>).map(SSOProvisionErrorToJSON)),
        'failureCount': value['failureCount'],
        'success': ((value['success'] as Array<any>).map(SSOProvisionedUserToJSON)),
        'successCount': value['successCount'],
    };
}

