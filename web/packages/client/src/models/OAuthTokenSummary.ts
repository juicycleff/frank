/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface OAuthTokenSummary
 */
export interface OAuthTokenSummary {
    [key: string]: any | any;
    /**
     * Client name
     * @type {string}
     * @memberof OAuthTokenSummary
     */
    clientName: string;
    /**
     * Creation timestamp
     * @type {Date}
     * @memberof OAuthTokenSummary
     */
    createdAt: Date;
    /**
     * Expiration timestamp
     * @type {Date}
     * @memberof OAuthTokenSummary
     */
    expiresAt: Date;
    /**
     * Token ID
     * @type {string}
     * @memberof OAuthTokenSummary
     */
    id: string;
    /**
     * Last usage timestamp
     * @type {Date}
     * @memberof OAuthTokenSummary
     */
    lastUsed?: Date;
    /**
     * Whether token is revoked
     * @type {boolean}
     * @memberof OAuthTokenSummary
     */
    revoked: boolean;
    /**
     * Granted scopes
     * @type {Array<string>}
     * @memberof OAuthTokenSummary
     */
    scopeNames: Array<string>;
    /**
     * User email
     * @type {string}
     * @memberof OAuthTokenSummary
     */
    userEmail: string;
}

/**
 * Check if a given object implements the OAuthTokenSummary interface.
 */
export function instanceOfOAuthTokenSummary(value: object): value is OAuthTokenSummary {
    if (!('clientName' in value) || value['clientName'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('expiresAt' in value) || value['expiresAt'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('revoked' in value) || value['revoked'] === undefined) return false;
    if (!('scopeNames' in value) || value['scopeNames'] === undefined) return false;
    if (!('userEmail' in value) || value['userEmail'] === undefined) return false;
    return true;
}

export function OAuthTokenSummaryFromJSON(json: any): OAuthTokenSummary {
    return OAuthTokenSummaryFromJSONTyped(json, false);
}

export function OAuthTokenSummaryFromJSONTyped(json: any, ignoreDiscriminator: boolean): OAuthTokenSummary {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        'clientName': json['clientName'],
        'createdAt': (new Date(json['createdAt'])),
        'expiresAt': (new Date(json['expiresAt'])),
        'id': json['id'],
        'lastUsed': json['lastUsed'] == null ? undefined : (new Date(json['lastUsed'])),
        'revoked': json['revoked'],
        'scopeNames': json['scopeNames'],
        'userEmail': json['userEmail'],
    };
}

export function OAuthTokenSummaryToJSON(json: any): OAuthTokenSummary {
    return OAuthTokenSummaryToJSONTyped(json, false);
}

export function OAuthTokenSummaryToJSONTyped(value?: OAuthTokenSummary | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
            ...value,
        'clientName': value['clientName'],
        'createdAt': ((value['createdAt']).toISOString()),
        'expiresAt': ((value['expiresAt']).toISOString()),
        'id': value['id'],
        'lastUsed': value['lastUsed'] == null ? undefined : ((value['lastUsed']).toISOString()),
        'revoked': value['revoked'],
        'scopeNames': value['scopeNames'],
        'userEmail': value['userEmail'],
    };
}

