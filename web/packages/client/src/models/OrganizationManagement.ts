/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Pagination } from './Pagination';
import {
    PaginationFromJSON,
    PaginationFromJSONTyped,
    PaginationToJSON,
    PaginationToJSONTyped,
} from './Pagination';
import type { OrganizationFilterSummary } from './OrganizationFilterSummary';
import {
    OrganizationFilterSummaryFromJSON,
    OrganizationFilterSummaryFromJSONTyped,
    OrganizationFilterSummaryToJSON,
    OrganizationFilterSummaryToJSONTyped,
} from './OrganizationFilterSummary';
import type { ManagedOrganization } from './ManagedOrganization';
import {
    ManagedOrganizationFromJSON,
    ManagedOrganizationFromJSONTyped,
    ManagedOrganizationToJSON,
    ManagedOrganizationToJSONTyped,
} from './ManagedOrganization';

/**
 * 
 * @export
 * @interface OrganizationManagement
 */
export interface OrganizationManagement {
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof OrganizationManagement
     */
    readonly $schema?: string;
    /**
     * Applied filter summary
     * @type {OrganizationFilterSummary}
     * @memberof OrganizationManagement
     */
    filterSummary: OrganizationFilterSummary;
    /**
     * List of managed organizations
     * @type {Array<ManagedOrganization>}
     * @memberof OrganizationManagement
     */
    organizations: Array<ManagedOrganization> | null;
    /**
     * Pagination information
     * @type {Pagination}
     * @memberof OrganizationManagement
     */
    pagination: Pagination;
    /**
     * Total organization count
     * @type {number}
     * @memberof OrganizationManagement
     */
    totalCount: number;
}

/**
 * Check if a given object implements the OrganizationManagement interface.
 */
export function instanceOfOrganizationManagement(value: object): value is OrganizationManagement {
    if (!('filterSummary' in value) || value['filterSummary'] === undefined) return false;
    if (!('organizations' in value) || value['organizations'] === undefined) return false;
    if (!('pagination' in value) || value['pagination'] === undefined) return false;
    if (!('totalCount' in value) || value['totalCount'] === undefined) return false;
    return true;
}

export function OrganizationManagementFromJSON(json: any): OrganizationManagement {
    return OrganizationManagementFromJSONTyped(json, false);
}

export function OrganizationManagementFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrganizationManagement {
    if (json == null) {
        return json;
    }
    return {
        
        '$schema': json['$schema'] == null ? undefined : json['$schema'],
        'filterSummary': OrganizationFilterSummaryFromJSON(json['filterSummary']),
        'organizations': (json['organizations'] == null ? null : (json['organizations'] as Array<any>).map(ManagedOrganizationFromJSON)),
        'pagination': PaginationFromJSON(json['pagination']),
        'totalCount': json['totalCount'],
    };
}

export function OrganizationManagementToJSON(json: any): OrganizationManagement {
    return OrganizationManagementToJSONTyped(json, false);
}

export function OrganizationManagementToJSONTyped(value?: Omit<OrganizationManagement, '$schema'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'filterSummary': OrganizationFilterSummaryToJSON(value['filterSummary']),
        'organizations': (value['organizations'] == null ? null : (value['organizations'] as Array<any>).map(ManagedOrganizationToJSON)),
        'pagination': PaginationToJSON(value['pagination']),
        'totalCount': value['totalCount'],
    };
}

