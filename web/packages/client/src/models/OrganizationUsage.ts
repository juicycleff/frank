/* tslint:disable */
/* eslint-disable */
/**
 * My Project
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface OrganizationUsage
 */
export interface OrganizationUsage {
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof OrganizationUsage
     */
    readonly $schema?: string;
    /**
     * API request count
     * @type {number}
     * @memberof OrganizationUsage
     */
    apiRequests: number;
    /**
     * Bandwidth used in bytes
     * @type {number}
     * @memberof OrganizationUsage
     */
    bandwidth: number;
    /**
     * Emails sent count
     * @type {number}
     * @memberof OrganizationUsage
     */
    emailsSent: number;
    /**
     * End user count
     * @type {number}
     * @memberof OrganizationUsage
     */
    endUsers: number;
    /**
     * External user count
     * @type {number}
     * @memberof OrganizationUsage
     */
    externalUsers: number;
    /**
     * Last update time
     * @type {Date}
     * @memberof OrganizationUsage
     */
    lastUpdated: Date;
    /**
     * Login event count
     * @type {number}
     * @memberof OrganizationUsage
     */
    loginEvents: number;
    /**
     * Usage period
     * @type {string}
     * @memberof OrganizationUsage
     */
    period: string;
    /**
     * SMS sent count
     * @type {number}
     * @memberof OrganizationUsage
     */
    smsSent: number;
    /**
     * Storage used in bytes
     * @type {number}
     * @memberof OrganizationUsage
     */
    storage: number;
    /**
     * Webhook delivery count
     * @type {number}
     * @memberof OrganizationUsage
     */
    webhookDeliveries: number;
}

export function OrganizationUsageFromJSON(json: any): OrganizationUsage {
    return OrganizationUsageFromJSONTyped(json, false);
}

export function OrganizationUsageFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrganizationUsage {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        '$schema': !exists(json, '$schema') ? undefined : json['$schema'],
        'apiRequests': json['apiRequests'],
        'bandwidth': json['bandwidth'],
        'emailsSent': json['emailsSent'],
        'endUsers': json['endUsers'],
        'externalUsers': json['externalUsers'],
        'lastUpdated': (new Date(json['lastUpdated'])),
        'loginEvents': json['loginEvents'],
        'period': json['period'],
        'smsSent': json['smsSent'],
        'storage': json['storage'],
        'webhookDeliveries': json['webhookDeliveries'],
    };
}

export function OrganizationUsageToJSON(value?: OrganizationUsage | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'apiRequests': value.apiRequests,
        'bandwidth': value.bandwidth,
        'emailsSent': value.emailsSent,
        'endUsers': value.endUsers,
        'externalUsers': value.externalUsers,
        'lastUpdated': (value.lastUpdated.toISOString()),
        'loginEvents': value.loginEvents,
        'period': value.period,
        'smsSent': value.smsSent,
        'storage': value.storage,
        'webhookDeliveries': value.webhookDeliveries,
    };
}


