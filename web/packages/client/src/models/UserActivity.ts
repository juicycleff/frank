/* tslint:disable */
/* eslint-disable */
/**
 * My Project
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UserActivity
 */
export interface UserActivity {
    /**
     * Additional activity details
     * @type {{ [key: string]: string; }}
     * @memberof UserActivity
     */
    details?: { [key: string]: string; };
    /**
     * Error message if failed
     * @type {string}
     * @memberof UserActivity
     */
    error?: string;
    /**
     * Activity event type
     * @type {string}
     * @memberof UserActivity
     */
    event: string;
    /**
     * IP address
     * @type {string}
     * @memberof UserActivity
     */
    ipAddress?: string;
    /**
     * Location
     * @type {string}
     * @memberof UserActivity
     */
    location?: string;
    /**
     * Whether activity was successful
     * @type {boolean}
     * @memberof UserActivity
     */
    success: boolean;
    /**
     * Activity timestamp
     * @type {Date}
     * @memberof UserActivity
     */
    timestamp: Date;
    /**
     * User agent
     * @type {string}
     * @memberof UserActivity
     */
    userAgent?: string;
}

export function UserActivityFromJSON(json: any): UserActivity {
    return UserActivityFromJSONTyped(json, false);
}

export function UserActivityFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserActivity {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'details': !exists(json, 'details') ? undefined : json['details'],
        'error': !exists(json, 'error') ? undefined : json['error'],
        'event': json['event'],
        'ipAddress': !exists(json, 'ipAddress') ? undefined : json['ipAddress'],
        'location': !exists(json, 'location') ? undefined : json['location'],
        'success': json['success'],
        'timestamp': (new Date(json['timestamp'])),
        'userAgent': !exists(json, 'userAgent') ? undefined : json['userAgent'],
    };
}

export function UserActivityToJSON(value?: UserActivity | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'details': value.details,
        'error': value.error,
        'event': value.event,
        'ipAddress': value.ipAddress,
        'location': value.location,
        'success': value.success,
        'timestamp': (value.timestamp.toISOString()),
        'userAgent': value.userAgent,
    };
}


