/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { StatusCodeErrors } from './StatusCodeErrors';
import {
    StatusCodeErrorsFromJSON,
    StatusCodeErrorsFromJSONTyped,
    StatusCodeErrorsToJSON,
    StatusCodeErrorsToJSONTyped,
} from './StatusCodeErrors';
import type { ErrorRateTrend } from './ErrorRateTrend';
import {
    ErrorRateTrendFromJSON,
    ErrorRateTrendFromJSONTyped,
    ErrorRateTrendToJSON,
    ErrorRateTrendToJSONTyped,
} from './ErrorRateTrend';
import type { ErrorRateOverview } from './ErrorRateOverview';
import {
    ErrorRateOverviewFromJSON,
    ErrorRateOverviewFromJSONTyped,
    ErrorRateOverviewToJSON,
    ErrorRateOverviewToJSONTyped,
} from './ErrorRateOverview';
import type { EndpointErrors } from './EndpointErrors';
import {
    EndpointErrorsFromJSON,
    EndpointErrorsFromJSONTyped,
    EndpointErrorsToJSON,
    EndpointErrorsToJSONTyped,
} from './EndpointErrors';

/**
 * 
 * @export
 * @interface ErrorRateMetrics
 */
export interface ErrorRateMetrics {
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof ErrorRateMetrics
     */
    readonly $schema?: string;
    /**
     * 
     * @type {Array<EndpointErrors>}
     * @memberof ErrorRateMetrics
     */
    byEndpoint: Array<EndpointErrors> | null;
    /**
     * 
     * @type {Array<StatusCodeErrors>}
     * @memberof ErrorRateMetrics
     */
    byStatusCode: Array<StatusCodeErrors> | null;
    /**
     * 
     * @type {Date}
     * @memberof ErrorRateMetrics
     */
    generatedAt: Date;
    /**
     * 
     * @type {ErrorRateOverview}
     * @memberof ErrorRateMetrics
     */
    overall: ErrorRateOverview;
    /**
     * 
     * @type {string}
     * @memberof ErrorRateMetrics
     */
    period: string;
    /**
     * 
     * @type {Array<ErrorRateTrend>}
     * @memberof ErrorRateMetrics
     */
    trends: Array<ErrorRateTrend> | null;
}

/**
 * Check if a given object implements the ErrorRateMetrics interface.
 */
export function instanceOfErrorRateMetrics(value: object): value is ErrorRateMetrics {
    if (!('byEndpoint' in value) || value['byEndpoint'] === undefined) return false;
    if (!('byStatusCode' in value) || value['byStatusCode'] === undefined) return false;
    if (!('generatedAt' in value) || value['generatedAt'] === undefined) return false;
    if (!('overall' in value) || value['overall'] === undefined) return false;
    if (!('period' in value) || value['period'] === undefined) return false;
    if (!('trends' in value) || value['trends'] === undefined) return false;
    return true;
}

export function ErrorRateMetricsFromJSON(json: any): ErrorRateMetrics {
    return ErrorRateMetricsFromJSONTyped(json, false);
}

export function ErrorRateMetricsFromJSONTyped(json: any, ignoreDiscriminator: boolean): ErrorRateMetrics {
    if (json == null) {
        return json;
    }
    return {
        
        '$schema': json['$schema'] == null ? undefined : json['$schema'],
        'byEndpoint': (json['by_endpoint'] == null ? null : (json['by_endpoint'] as Array<any>).map(EndpointErrorsFromJSON)),
        'byStatusCode': (json['by_status_code'] == null ? null : (json['by_status_code'] as Array<any>).map(StatusCodeErrorsFromJSON)),
        'generatedAt': (new Date(json['generated_at'])),
        'overall': ErrorRateOverviewFromJSON(json['overall']),
        'period': json['period'],
        'trends': (json['trends'] == null ? null : (json['trends'] as Array<any>).map(ErrorRateTrendFromJSON)),
    };
}

export function ErrorRateMetricsToJSON(json: any): ErrorRateMetrics {
    return ErrorRateMetricsToJSONTyped(json, false);
}

export function ErrorRateMetricsToJSONTyped(value?: Omit<ErrorRateMetrics, '$schema'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'by_endpoint': (value['byEndpoint'] == null ? null : (value['byEndpoint'] as Array<any>).map(EndpointErrorsToJSON)),
        'by_status_code': (value['byStatusCode'] == null ? null : (value['byStatusCode'] as Array<any>).map(StatusCodeErrorsToJSON)),
        'generated_at': ((value['generatedAt']).toISOString()),
        'overall': ErrorRateOverviewToJSON(value['overall']),
        'period': value['period'],
        'trends': (value['trends'] == null ? null : (value['trends'] as Array<any>).map(ErrorRateTrendToJSON)),
    };
}

