/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SSOProviderMetrics
 */
export interface SSOProviderMetrics {
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof SSOProviderMetrics
     */
    readonly $schema?: string;
    /**
     * Logins by device type
     * @type {{ [key: string]: number; }}
     * @memberof SSOProviderMetrics
     */
    deviceTypes: { [key: string]: number; };
    /**
     * Errors by type
     * @type {{ [key: string]: number; }}
     * @memberof SSOProviderMetrics
     */
    errorsByType: { [key: string]: number; };
    /**
     * Metrics generation timestamp
     * @type {Date}
     * @memberof SSOProviderMetrics
     */
    generatedAt: Date;
    /**
     * Logins by location
     * @type {{ [key: string]: number; }}
     * @memberof SSOProviderMetrics
     */
    locations: { [key: string]: number; };
    /**
     * Logins by day
     * @type {{ [key: string]: number; }}
     * @memberof SSOProviderMetrics
     */
    loginsByDay: { [key: string]: number; };
    /**
     * Logins by hour
     * @type {{ [key: string]: number; }}
     * @memberof SSOProviderMetrics
     */
    loginsByHour: { [key: string]: number; };
    /**
     * Metrics period
     * @type {string}
     * @memberof SSOProviderMetrics
     */
    period: string;
    /**
     * Provider ID
     * @type {string}
     * @memberof SSOProviderMetrics
     */
    providerId: string;
    /**
     * Response times in milliseconds
     * @type {Array<number>}
     * @memberof SSOProviderMetrics
     */
    responseTimes: Array<number> | null;
    /**
     * Users by email domain
     * @type {{ [key: string]: number; }}
     * @memberof SSOProviderMetrics
     */
    usersByDomain: { [key: string]: number; };
}

/**
 * Check if a given object implements the SSOProviderMetrics interface.
 */
export function instanceOfSSOProviderMetrics(value: object): value is SSOProviderMetrics {
    if (!('deviceTypes' in value) || value['deviceTypes'] === undefined) return false;
    if (!('errorsByType' in value) || value['errorsByType'] === undefined) return false;
    if (!('generatedAt' in value) || value['generatedAt'] === undefined) return false;
    if (!('locations' in value) || value['locations'] === undefined) return false;
    if (!('loginsByDay' in value) || value['loginsByDay'] === undefined) return false;
    if (!('loginsByHour' in value) || value['loginsByHour'] === undefined) return false;
    if (!('period' in value) || value['period'] === undefined) return false;
    if (!('providerId' in value) || value['providerId'] === undefined) return false;
    if (!('responseTimes' in value) || value['responseTimes'] === undefined) return false;
    if (!('usersByDomain' in value) || value['usersByDomain'] === undefined) return false;
    return true;
}

export function SSOProviderMetricsFromJSON(json: any): SSOProviderMetrics {
    return SSOProviderMetricsFromJSONTyped(json, false);
}

export function SSOProviderMetricsFromJSONTyped(json: any, ignoreDiscriminator: boolean): SSOProviderMetrics {
    if (json == null) {
        return json;
    }
    return {
        
        '$schema': json['$schema'] == null ? undefined : json['$schema'],
        'deviceTypes': json['deviceTypes'],
        'errorsByType': json['errorsByType'],
        'generatedAt': (new Date(json['generatedAt'])),
        'locations': json['locations'],
        'loginsByDay': json['loginsByDay'],
        'loginsByHour': json['loginsByHour'],
        'period': json['period'],
        'providerId': json['providerId'],
        'responseTimes': json['responseTimes'] == null ? null : json['responseTimes'],
        'usersByDomain': json['usersByDomain'],
    };
}

export function SSOProviderMetricsToJSON(json: any): SSOProviderMetrics {
    return SSOProviderMetricsToJSONTyped(json, false);
}

export function SSOProviderMetricsToJSONTyped(value?: Omit<SSOProviderMetrics, '$schema'> | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'deviceTypes': value['deviceTypes'],
        'errorsByType': value['errorsByType'],
        'generatedAt': ((value['generatedAt']).toISOString()),
        'locations': value['locations'],
        'loginsByDay': value['loginsByDay'],
        'loginsByHour': value['loginsByHour'],
        'period': value['period'],
        'providerId': value['providerId'],
        'responseTimes': value['responseTimes'],
        'usersByDomain': value['usersByDomain'],
    };
}

