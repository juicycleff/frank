/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RiskMitigation } from './RiskMitigation';
import {
    RiskMitigationFromJSON,
    RiskMitigationFromJSONTyped,
    RiskMitigationToJSON,
    RiskMitigationToJSONTyped,
} from './RiskMitigation';

/**
 * 
 * @export
 * @interface RiskItem
 */
export interface RiskItem {
    /**
     * 
     * @type {string}
     * @memberof RiskItem
     */
    category: string;
    /**
     * 
     * @type {string}
     * @memberof RiskItem
     */
    description: string;
    /**
     * 
     * @type {string}
     * @memberof RiskItem
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof RiskItem
     */
    impact: string;
    /**
     * 
     * @type {string}
     * @memberof RiskItem
     */
    likelihood: string;
    /**
     * 
     * @type {Array<RiskMitigation>}
     * @memberof RiskItem
     */
    mitigations: Array<RiskMitigation> | null;
    /**
     * 
     * @type {string}
     * @memberof RiskItem
     */
    owner: string;
    /**
     * 
     * @type {Date}
     * @memberof RiskItem
     */
    reviewDate: Date;
    /**
     * 
     * @type {string}
     * @memberof RiskItem
     */
    riskLevel: string;
    /**
     * 
     * @type {string}
     * @memberof RiskItem
     */
    status: string;
}

/**
 * Check if a given object implements the RiskItem interface.
 */
export function instanceOfRiskItem(value: object): value is RiskItem {
    if (!('category' in value) || value['category'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('impact' in value) || value['impact'] === undefined) return false;
    if (!('likelihood' in value) || value['likelihood'] === undefined) return false;
    if (!('mitigations' in value) || value['mitigations'] === undefined) return false;
    if (!('owner' in value) || value['owner'] === undefined) return false;
    if (!('reviewDate' in value) || value['reviewDate'] === undefined) return false;
    if (!('riskLevel' in value) || value['riskLevel'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    return true;
}

export function RiskItemFromJSON(json: any): RiskItem {
    return RiskItemFromJSONTyped(json, false);
}

export function RiskItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): RiskItem {
    if (json == null) {
        return json;
    }
    return {
        
        'category': json['category'],
        'description': json['description'],
        'id': json['id'],
        'impact': json['impact'],
        'likelihood': json['likelihood'],
        'mitigations': (json['mitigations'] == null ? null : (json['mitigations'] as Array<any>).map(RiskMitigationFromJSON)),
        'owner': json['owner'],
        'reviewDate': (new Date(json['review_date'])),
        'riskLevel': json['risk_level'],
        'status': json['status'],
    };
}

export function RiskItemToJSON(json: any): RiskItem {
    return RiskItemToJSONTyped(json, false);
}

export function RiskItemToJSONTyped(value?: RiskItem | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'category': value['category'],
        'description': value['description'],
        'id': value['id'],
        'impact': value['impact'],
        'likelihood': value['likelihood'],
        'mitigations': (value['mitigations'] == null ? null : (value['mitigations'] as Array<any>).map(RiskMitigationToJSON)),
        'owner': value['owner'],
        'review_date': ((value['reviewDate']).toISOString()),
        'risk_level': value['riskLevel'],
        'status': value['status'],
    };
}

