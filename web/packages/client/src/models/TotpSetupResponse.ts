/* tslint:disable */
/* eslint-disable */
/**
 * My Project
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TotpSetupResponse
 */
export interface TotpSetupResponse {
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof TotpSetupResponse
     */
    readonly $schema?: string;
    /**
     * Backup code URLs
     * @type {Array<string>}
     * @memberof TotpSetupResponse
     */
    backupCodes: Array<string> | null;
    /**
     * Manual entry URL
     * @type {string}
     * @memberof TotpSetupResponse
     */
    backupUrl: string;
    /**
     * MFA method ID
     * @type {string}
     * @memberof TotpSetupResponse
     */
    methodId: string;
    /**
     * QR code data URL
     * @type {string}
     * @memberof TotpSetupResponse
     */
    qrCode: string;
    /**
     * TOTP secret
     * @type {string}
     * @memberof TotpSetupResponse
     */
    secret: string;
}

export function TotpSetupResponseFromJSON(json: any): TotpSetupResponse {
    return TotpSetupResponseFromJSONTyped(json, false);
}

export function TotpSetupResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): TotpSetupResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        '$schema': !exists(json, '$schema') ? undefined : json['$schema'],
        'backupCodes': json['backupCodes'],
        'backupUrl': json['backupUrl'],
        'methodId': json['methodId'],
        'qrCode': json['qrCode'],
        'secret': json['secret'],
    };
}

export function TotpSetupResponseToJSON(value?: TotpSetupResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'backupCodes': value.backupCodes,
        'backupUrl': value.backupUrl,
        'methodId': value.methodId,
        'qrCode': value.qrCode,
        'secret': value.secret,
    };
}


