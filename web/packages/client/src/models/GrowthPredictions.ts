/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface GrowthPredictions
 */
export interface GrowthPredictions {
    /**
     * Prediction confidence percentage
     * @type {number}
     * @memberof GrowthPredictions
     */
    confidence: number;
    /**
     * Predicted organizations next month
     * @type {number}
     * @memberof GrowthPredictions
     */
    nextMonthOrgs: number;
    /**
     * Predicted revenue next month
     * @type {number}
     * @memberof GrowthPredictions
     */
    nextMonthRevenue: number;
    /**
     * Predicted users next month
     * @type {number}
     * @memberof GrowthPredictions
     */
    nextMonthUsers: number;
}

/**
 * Check if a given object implements the GrowthPredictions interface.
 */
export function instanceOfGrowthPredictions(value: object): value is GrowthPredictions {
    if (!('confidence' in value) || value['confidence'] === undefined) return false;
    if (!('nextMonthOrgs' in value) || value['nextMonthOrgs'] === undefined) return false;
    if (!('nextMonthRevenue' in value) || value['nextMonthRevenue'] === undefined) return false;
    if (!('nextMonthUsers' in value) || value['nextMonthUsers'] === undefined) return false;
    return true;
}

export function GrowthPredictionsFromJSON(json: any): GrowthPredictions {
    return GrowthPredictionsFromJSONTyped(json, false);
}

export function GrowthPredictionsFromJSONTyped(json: any, ignoreDiscriminator: boolean): GrowthPredictions {
    if (json == null) {
        return json;
    }
    return {
        
        'confidence': json['confidence'],
        'nextMonthOrgs': json['nextMonthOrgs'],
        'nextMonthRevenue': json['nextMonthRevenue'],
        'nextMonthUsers': json['nextMonthUsers'],
    };
}

export function GrowthPredictionsToJSON(json: any): GrowthPredictions {
    return GrowthPredictionsToJSONTyped(json, false);
}

export function GrowthPredictionsToJSONTyped(value?: GrowthPredictions | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'confidence': value['confidence'],
        'nextMonthOrgs': value['nextMonthOrgs'],
        'nextMonthRevenue': value['nextMonthRevenue'],
        'nextMonthUsers': value['nextMonthUsers'],
    };
}

