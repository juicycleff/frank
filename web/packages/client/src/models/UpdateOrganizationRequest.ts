/* tslint:disable */
/* eslint-disable */
/**
 * My Project
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UpdateOrganizationRequest
 */
export interface UpdateOrganizationRequest {
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof UpdateOrganizationRequest
     */
    readonly $schema?: string;
    /**
     * Updated active status
     * @type {boolean}
     * @memberof UpdateOrganizationRequest
     */
    active?: boolean;
    /**
     * Updated API request limit
     * @type {number}
     * @memberof UpdateOrganizationRequest
     */
    apiRequestLimit?: number;
    /**
     * Updated auth config
     * @type {{ [key: string]: string; }}
     * @memberof UpdateOrganizationRequest
     */
    authConfig?: { [key: string]: string; };
    /**
     * Updated auth domain
     * @type {string}
     * @memberof UpdateOrganizationRequest
     */
    authDomain?: string;
    /**
     * Enable/disable auth service
     * @type {boolean}
     * @memberof UpdateOrganizationRequest
     */
    authServiceEnabled?: boolean;
    /**
     * Updated domain
     * @type {string}
     * @memberof UpdateOrganizationRequest
     */
    domain?: string;
    /**
     * Updated end user limit
     * @type {number}
     * @memberof UpdateOrganizationRequest
     */
    endUserLimit?: number;
    /**
     * Updated external user limit
     * @type {number}
     * @memberof UpdateOrganizationRequest
     */
    externalUserLimit?: number;
    /**
     * Updated logo URL
     * @type {string}
     * @memberof UpdateOrganizationRequest
     */
    logoUrl?: string;
    /**
     * Updated metadata
     * @type {{ [key: string]: string; }}
     * @memberof UpdateOrganizationRequest
     */
    metadata?: { [key: string]: string; };
    /**
     * Updated name
     * @type {string}
     * @memberof UpdateOrganizationRequest
     */
    name?: string;
    /**
     * Updated plan
     * @type {string}
     * @memberof UpdateOrganizationRequest
     */
    plan?: string;
    /**
     * Updated slug
     * @type {string}
     * @memberof UpdateOrganizationRequest
     */
    slug?: string;
    /**
     * Updated SSO domain
     * @type {string}
     * @memberof UpdateOrganizationRequest
     */
    ssoDomain?: string;
    /**
     * Enable/disable SSO
     * @type {boolean}
     * @memberof UpdateOrganizationRequest
     */
    ssoEnabled?: boolean;
}

export function UpdateOrganizationRequestFromJSON(json: any): UpdateOrganizationRequest {
    return UpdateOrganizationRequestFromJSONTyped(json, false);
}

export function UpdateOrganizationRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateOrganizationRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        '$schema': !exists(json, '$schema') ? undefined : json['$schema'],
        'active': !exists(json, 'active') ? undefined : json['active'],
        'apiRequestLimit': !exists(json, 'apiRequestLimit') ? undefined : json['apiRequestLimit'],
        'authConfig': !exists(json, 'authConfig') ? undefined : json['authConfig'],
        'authDomain': !exists(json, 'authDomain') ? undefined : json['authDomain'],
        'authServiceEnabled': !exists(json, 'authServiceEnabled') ? undefined : json['authServiceEnabled'],
        'domain': !exists(json, 'domain') ? undefined : json['domain'],
        'endUserLimit': !exists(json, 'endUserLimit') ? undefined : json['endUserLimit'],
        'externalUserLimit': !exists(json, 'externalUserLimit') ? undefined : json['externalUserLimit'],
        'logoUrl': !exists(json, 'logoUrl') ? undefined : json['logoUrl'],
        'metadata': !exists(json, 'metadata') ? undefined : json['metadata'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'plan': !exists(json, 'plan') ? undefined : json['plan'],
        'slug': !exists(json, 'slug') ? undefined : json['slug'],
        'ssoDomain': !exists(json, 'ssoDomain') ? undefined : json['ssoDomain'],
        'ssoEnabled': !exists(json, 'ssoEnabled') ? undefined : json['ssoEnabled'],
    };
}

export function UpdateOrganizationRequestToJSON(value?: UpdateOrganizationRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'active': value.active,
        'apiRequestLimit': value.apiRequestLimit,
        'authConfig': value.authConfig,
        'authDomain': value.authDomain,
        'authServiceEnabled': value.authServiceEnabled,
        'domain': value.domain,
        'endUserLimit': value.endUserLimit,
        'externalUserLimit': value.externalUserLimit,
        'logoUrl': value.logoUrl,
        'metadata': value.metadata,
        'name': value.name,
        'plan': value.plan,
        'slug': value.slug,
        'ssoDomain': value.ssoDomain,
        'ssoEnabled': value.ssoEnabled,
    };
}


