/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PasskeyExportRequest
 */
export interface PasskeyExportRequest {
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof PasskeyExportRequest
     */
    readonly $schema?: string;
    /**
     * End date
     * @type {Date}
     * @memberof PasskeyExportRequest
     */
    endDate?: Date;
    /**
     * Export format (json, csv)
     * @type {string}
     * @memberof PasskeyExportRequest
     */
    format: string;
    /**
     * Include activity data
     * @type {boolean}
     * @memberof PasskeyExportRequest
     */
    includeActivity: boolean;
    /**
     * Start date
     * @type {Date}
     * @memberof PasskeyExportRequest
     */
    startDate?: Date;
    /**
     * Filter by user
     * @type {string}
     * @memberof PasskeyExportRequest
     */
    userId?: string;
}

/**
 * Check if a given object implements the PasskeyExportRequest interface.
 */
export function instanceOfPasskeyExportRequest(value: object): value is PasskeyExportRequest {
    if (!('format' in value) || value['format'] === undefined) return false;
    if (!('includeActivity' in value) || value['includeActivity'] === undefined) return false;
    return true;
}

export function PasskeyExportRequestFromJSON(json: any): PasskeyExportRequest {
    return PasskeyExportRequestFromJSONTyped(json, false);
}

export function PasskeyExportRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PasskeyExportRequest {
    if (json == null) {
        return json;
    }
    return {
        
        '$schema': json['$schema'] == null ? undefined : json['$schema'],
        'endDate': json['endDate'] == null ? undefined : (new Date(json['endDate'])),
        'format': json['format'],
        'includeActivity': json['includeActivity'],
        'startDate': json['startDate'] == null ? undefined : (new Date(json['startDate'])),
        'userId': json['userId'] == null ? undefined : json['userId'],
    };
}

export function PasskeyExportRequestToJSON(json: any): PasskeyExportRequest {
    return PasskeyExportRequestToJSONTyped(json, false);
}

export function PasskeyExportRequestToJSONTyped(value?: Omit<PasskeyExportRequest, '$schema'> | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'endDate': value['endDate'] == null ? undefined : ((value['endDate']).toISOString()),
        'format': value['format'],
        'includeActivity': value['includeActivity'],
        'startDate': value['startDate'] == null ? undefined : ((value['startDate']).toISOString()),
        'userId': value['userId'],
    };
}

