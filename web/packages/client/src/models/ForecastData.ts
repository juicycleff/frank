/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ForecastData
 */
export interface ForecastData {
    /**
     * Predicted growth rate percentage
     * @type {number}
     * @memberof ForecastData
     */
    growthRate: number;
    /**
     * Optimistic estimate (cents)
     * @type {number}
     * @memberof ForecastData
     */
    highEstimate: number;
    /**
     * Conservative estimate (cents)
     * @type {number}
     * @memberof ForecastData
     */
    lowEstimate: number;
    /**
     * Forecast period
     * @type {string}
     * @memberof ForecastData
     */
    period: string;
    /**
     * Predicted revenue (cents)
     * @type {number}
     * @memberof ForecastData
     */
    predictedRevenue: number;
}

/**
 * Check if a given object implements the ForecastData interface.
 */
export function instanceOfForecastData(value: object): value is ForecastData {
    if (!('growthRate' in value) || value['growthRate'] === undefined) return false;
    if (!('highEstimate' in value) || value['highEstimate'] === undefined) return false;
    if (!('lowEstimate' in value) || value['lowEstimate'] === undefined) return false;
    if (!('period' in value) || value['period'] === undefined) return false;
    if (!('predictedRevenue' in value) || value['predictedRevenue'] === undefined) return false;
    return true;
}

export function ForecastDataFromJSON(json: any): ForecastData {
    return ForecastDataFromJSONTyped(json, false);
}

export function ForecastDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): ForecastData {
    if (json == null) {
        return json;
    }
    return {
        
        'growthRate': json['growthRate'],
        'highEstimate': json['highEstimate'],
        'lowEstimate': json['lowEstimate'],
        'period': json['period'],
        'predictedRevenue': json['predictedRevenue'],
    };
}

export function ForecastDataToJSON(json: any): ForecastData {
    return ForecastDataToJSONTyped(json, false);
}

export function ForecastDataToJSONTyped(value?: ForecastData | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'growthRate': value['growthRate'],
        'highEstimate': value['highEstimate'],
        'lowEstimate': value['lowEstimate'],
        'period': value['period'],
        'predictedRevenue': value['predictedRevenue'],
    };
}

