/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PlatformComplianceStatus
 */
export interface PlatformComplianceStatus {
    /**
     * 
     * @type {number}
     * @memberof PlatformComplianceStatus
     */
    issues: number;
    /**
     * 
     * @type {Date}
     * @memberof PlatformComplianceStatus
     */
    lastAudit?: Date;
    /**
     * 
     * @type {Date}
     * @memberof PlatformComplianceStatus
     */
    nextAudit?: Date;
    /**
     * 
     * @type {number}
     * @memberof PlatformComplianceStatus
     */
    remediated: number;
    /**
     * 
     * @type {number}
     * @memberof PlatformComplianceStatus
     */
    score: number;
    /**
     * 
     * @type {string}
     * @memberof PlatformComplianceStatus
     */
    status: string;
}

/**
 * Check if a given object implements the PlatformComplianceStatus interface.
 */
export function instanceOfPlatformComplianceStatus(value: object): value is PlatformComplianceStatus {
    if (!('issues' in value) || value['issues'] === undefined) return false;
    if (!('remediated' in value) || value['remediated'] === undefined) return false;
    if (!('score' in value) || value['score'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    return true;
}

export function PlatformComplianceStatusFromJSON(json: any): PlatformComplianceStatus {
    return PlatformComplianceStatusFromJSONTyped(json, false);
}

export function PlatformComplianceStatusFromJSONTyped(json: any, ignoreDiscriminator: boolean): PlatformComplianceStatus {
    if (json == null) {
        return json;
    }
    return {
        
        'issues': json['issues'],
        'lastAudit': json['last_audit'] == null ? undefined : (new Date(json['last_audit'])),
        'nextAudit': json['next_audit'] == null ? undefined : (new Date(json['next_audit'])),
        'remediated': json['remediated'],
        'score': json['score'],
        'status': json['status'],
    };
}

export function PlatformComplianceStatusToJSON(json: any): PlatformComplianceStatus {
    return PlatformComplianceStatusToJSONTyped(json, false);
}

export function PlatformComplianceStatusToJSONTyped(value?: PlatformComplianceStatus | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'issues': value['issues'],
        'last_audit': value['lastAudit'] == null ? undefined : ((value['lastAudit']).toISOString()),
        'next_audit': value['nextAudit'] == null ? undefined : ((value['nextAudit']).toISOString()),
        'remediated': value['remediated'],
        'score': value['score'],
        'status': value['status'],
    };
}

