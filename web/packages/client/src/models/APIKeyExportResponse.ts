/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface APIKeyExportResponse
 */
export interface APIKeyExportResponse {
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof APIKeyExportResponse
     */
    readonly $schema?: string;
    /**
     * Download URL
     * @type {string}
     * @memberof APIKeyExportResponse
     */
    downloadUrl: string;
    /**
     * Download URL expiration
     * @type {Date}
     * @memberof APIKeyExportResponse
     */
    expiresAt: Date;
    /**
     * Export ID
     * @type {string}
     * @memberof APIKeyExportResponse
     */
    exportId: string;
    /**
     * File size in bytes
     * @type {number}
     * @memberof APIKeyExportResponse
     */
    fileSize: number;
    /**
     * Export format
     * @type {string}
     * @memberof APIKeyExportResponse
     */
    format: string;
    /**
     * Number of keys exported
     * @type {number}
     * @memberof APIKeyExportResponse
     */
    keyCount: number;
    /**
     * Export status
     * @type {string}
     * @memberof APIKeyExportResponse
     */
    status: string;
}

/**
 * Check if a given object implements the APIKeyExportResponse interface.
 */
export function instanceOfAPIKeyExportResponse(value: object): value is APIKeyExportResponse {
    if (!('downloadUrl' in value) || value['downloadUrl'] === undefined) return false;
    if (!('expiresAt' in value) || value['expiresAt'] === undefined) return false;
    if (!('exportId' in value) || value['exportId'] === undefined) return false;
    if (!('fileSize' in value) || value['fileSize'] === undefined) return false;
    if (!('format' in value) || value['format'] === undefined) return false;
    if (!('keyCount' in value) || value['keyCount'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    return true;
}

export function APIKeyExportResponseFromJSON(json: any): APIKeyExportResponse {
    return APIKeyExportResponseFromJSONTyped(json, false);
}

export function APIKeyExportResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): APIKeyExportResponse {
    if (json == null) {
        return json;
    }
    return {
        
        '$schema': json['$schema'] == null ? undefined : json['$schema'],
        'downloadUrl': json['downloadUrl'],
        'expiresAt': (new Date(json['expiresAt'])),
        'exportId': json['exportId'],
        'fileSize': json['fileSize'],
        'format': json['format'],
        'keyCount': json['keyCount'],
        'status': json['status'],
    };
}

export function APIKeyExportResponseToJSON(json: any): APIKeyExportResponse {
    return APIKeyExportResponseToJSONTyped(json, false);
}

export function APIKeyExportResponseToJSONTyped(value?: Omit<APIKeyExportResponse, '$schema'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'downloadUrl': value['downloadUrl'],
        'expiresAt': ((value['expiresAt']).toISOString()),
        'exportId': value['exportId'],
        'fileSize': value['fileSize'],
        'format': value['format'],
        'keyCount': value['keyCount'],
        'status': value['status'],
    };
}

