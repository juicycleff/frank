/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SSOProvisioningUser } from './SSOProvisioningUser';
import {
    SSOProvisioningUserFromJSON,
    SSOProvisioningUserFromJSONTyped,
    SSOProvisioningUserToJSON,
    SSOProvisioningUserToJSONTyped,
} from './SSOProvisioningUser';

/**
 * 
 * @export
 * @interface SSOBulkProvisionRequest
 */
export interface SSOBulkProvisionRequest {
    [key: string]: any | any;
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof SSOBulkProvisionRequest
     */
    readonly $schema?: string;
    /**
     * Whether to perform a dry run
     * @type {boolean}
     * @memberof SSOBulkProvisionRequest
     */
    dryRun: boolean;
    /**
     * Provider ID
     * @type {string}
     * @memberof SSOBulkProvisionRequest
     */
    providerId: string;
    /**
     * Users to provision
     * @type {Array<SSOProvisioningUser>}
     * @memberof SSOBulkProvisionRequest
     */
    users: Array<SSOProvisioningUser>;
}

/**
 * Check if a given object implements the SSOBulkProvisionRequest interface.
 */
export function instanceOfSSOBulkProvisionRequest(value: object): value is SSOBulkProvisionRequest {
    if (!('dryRun' in value) || value['dryRun'] === undefined) return false;
    if (!('providerId' in value) || value['providerId'] === undefined) return false;
    if (!('users' in value) || value['users'] === undefined) return false;
    return true;
}

export function SSOBulkProvisionRequestFromJSON(json: any): SSOBulkProvisionRequest {
    return SSOBulkProvisionRequestFromJSONTyped(json, false);
}

export function SSOBulkProvisionRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): SSOBulkProvisionRequest {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        '$schema': json['$schema'] == null ? undefined : json['$schema'],
        'dryRun': json['dryRun'],
        'providerId': json['providerId'],
        'users': ((json['users'] as Array<any>).map(SSOProvisioningUserFromJSON)),
    };
}

export function SSOBulkProvisionRequestToJSON(json: any): SSOBulkProvisionRequest {
    return SSOBulkProvisionRequestToJSONTyped(json, false);
}

export function SSOBulkProvisionRequestToJSONTyped(value?: Omit<SSOBulkProvisionRequest, '$schema'> | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
            ...value,
        'dryRun': value['dryRun'],
        'providerId': value['providerId'],
        'users': ((value['users'] as Array<any>).map(SSOProvisioningUserToJSON)),
    };
}

