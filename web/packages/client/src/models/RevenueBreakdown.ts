/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ChannelRevenue } from './ChannelRevenue';
import {
    ChannelRevenueFromJSON,
    ChannelRevenueFromJSONTyped,
    ChannelRevenueToJSON,
    ChannelRevenueToJSONTyped,
} from './ChannelRevenue';
import type { FeatureRevenue } from './FeatureRevenue';
import {
    FeatureRevenueFromJSON,
    FeatureRevenueFromJSONTyped,
    FeatureRevenueToJSON,
    FeatureRevenueToJSONTyped,
} from './FeatureRevenue';
import type { PlanRevenue } from './PlanRevenue';
import {
    PlanRevenueFromJSON,
    PlanRevenueFromJSONTyped,
    PlanRevenueToJSON,
    PlanRevenueToJSONTyped,
} from './PlanRevenue';
import type { RegionRevenue } from './RegionRevenue';
import {
    RegionRevenueFromJSON,
    RegionRevenueFromJSONTyped,
    RegionRevenueToJSON,
    RegionRevenueToJSONTyped,
} from './RegionRevenue';

/**
 * 
 * @export
 * @interface RevenueBreakdown
 */
export interface RevenueBreakdown {
    /**
     * 
     * @type {Array<ChannelRevenue>}
     * @memberof RevenueBreakdown
     */
    byChannel: Array<ChannelRevenue> | null;
    /**
     * 
     * @type {Array<FeatureRevenue>}
     * @memberof RevenueBreakdown
     */
    byFeature: Array<FeatureRevenue> | null;
    /**
     * 
     * @type {Array<PlanRevenue>}
     * @memberof RevenueBreakdown
     */
    byPlan: Array<PlanRevenue> | null;
    /**
     * 
     * @type {Array<RegionRevenue>}
     * @memberof RevenueBreakdown
     */
    byRegion: Array<RegionRevenue> | null;
}

/**
 * Check if a given object implements the RevenueBreakdown interface.
 */
export function instanceOfRevenueBreakdown(value: object): value is RevenueBreakdown {
    if (!('byChannel' in value) || value['byChannel'] === undefined) return false;
    if (!('byFeature' in value) || value['byFeature'] === undefined) return false;
    if (!('byPlan' in value) || value['byPlan'] === undefined) return false;
    if (!('byRegion' in value) || value['byRegion'] === undefined) return false;
    return true;
}

export function RevenueBreakdownFromJSON(json: any): RevenueBreakdown {
    return RevenueBreakdownFromJSONTyped(json, false);
}

export function RevenueBreakdownFromJSONTyped(json: any, ignoreDiscriminator: boolean): RevenueBreakdown {
    if (json == null) {
        return json;
    }
    return {
        
        'byChannel': (json['by_channel'] == null ? null : (json['by_channel'] as Array<any>).map(ChannelRevenueFromJSON)),
        'byFeature': (json['by_feature'] == null ? null : (json['by_feature'] as Array<any>).map(FeatureRevenueFromJSON)),
        'byPlan': (json['by_plan'] == null ? null : (json['by_plan'] as Array<any>).map(PlanRevenueFromJSON)),
        'byRegion': (json['by_region'] == null ? null : (json['by_region'] as Array<any>).map(RegionRevenueFromJSON)),
    };
}

export function RevenueBreakdownToJSON(json: any): RevenueBreakdown {
    return RevenueBreakdownToJSONTyped(json, false);
}

export function RevenueBreakdownToJSONTyped(value?: RevenueBreakdown | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'by_channel': (value['byChannel'] == null ? null : (value['byChannel'] as Array<any>).map(ChannelRevenueToJSON)),
        'by_feature': (value['byFeature'] == null ? null : (value['byFeature'] as Array<any>).map(FeatureRevenueToJSON)),
        'by_plan': (value['byPlan'] == null ? null : (value['byPlan'] as Array<any>).map(PlanRevenueToJSON)),
        'by_region': (value['byRegion'] == null ? null : (value['byRegion'] as Array<any>).map(RegionRevenueToJSON)),
    };
}

