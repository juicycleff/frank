/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface GrowthOrgMetrics
 */
export interface GrowthOrgMetrics {
    /**
     * 
     * @type {number}
     * @memberof GrowthOrgMetrics
     */
    churnedOrganizations: number;
    /**
     * 
     * @type {number}
     * @memberof GrowthOrgMetrics
     */
    conversionRatePercent: number;
    /**
     * 
     * @type {number}
     * @memberof GrowthOrgMetrics
     */
    growthRatePercent: number;
    /**
     * 
     * @type {number}
     * @memberof GrowthOrgMetrics
     */
    netGrowth: number;
    /**
     * 
     * @type {number}
     * @memberof GrowthOrgMetrics
     */
    newOrganizations: number;
}

/**
 * Check if a given object implements the GrowthOrgMetrics interface.
 */
export function instanceOfGrowthOrgMetrics(value: object): value is GrowthOrgMetrics {
    if (!('churnedOrganizations' in value) || value['churnedOrganizations'] === undefined) return false;
    if (!('conversionRatePercent' in value) || value['conversionRatePercent'] === undefined) return false;
    if (!('growthRatePercent' in value) || value['growthRatePercent'] === undefined) return false;
    if (!('netGrowth' in value) || value['netGrowth'] === undefined) return false;
    if (!('newOrganizations' in value) || value['newOrganizations'] === undefined) return false;
    return true;
}

export function GrowthOrgMetricsFromJSON(json: any): GrowthOrgMetrics {
    return GrowthOrgMetricsFromJSONTyped(json, false);
}

export function GrowthOrgMetricsFromJSONTyped(json: any, ignoreDiscriminator: boolean): GrowthOrgMetrics {
    if (json == null) {
        return json;
    }
    return {
        
        'churnedOrganizations': json['churned_organizations'],
        'conversionRatePercent': json['conversion_rate_percent'],
        'growthRatePercent': json['growth_rate_percent'],
        'netGrowth': json['net_growth'],
        'newOrganizations': json['new_organizations'],
    };
}

export function GrowthOrgMetricsToJSON(json: any): GrowthOrgMetrics {
    return GrowthOrgMetricsToJSONTyped(json, false);
}

export function GrowthOrgMetricsToJSONTyped(value?: GrowthOrgMetrics | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'churned_organizations': value['churnedOrganizations'],
        'conversion_rate_percent': value['conversionRatePercent'],
        'growth_rate_percent': value['growthRatePercent'],
        'net_growth': value['netGrowth'],
        'new_organizations': value['newOrganizations'],
    };
}

