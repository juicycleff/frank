/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { HourlyThroughput } from './HourlyThroughput';
import {
    HourlyThroughputFromJSON,
    HourlyThroughputFromJSONTyped,
    HourlyThroughputToJSON,
    HourlyThroughputToJSONTyped,
} from './HourlyThroughput';

/**
 * 
 * @export
 * @interface ThroughputMetrics
 */
export interface ThroughputMetrics {
    /**
     * 
     * @type {number}
     * @memberof ThroughputMetrics
     */
    averageRps: number;
    /**
     * 
     * @type {Array<HourlyThroughput>}
     * @memberof ThroughputMetrics
     */
    byHour: Array<HourlyThroughput> | null;
    /**
     * 
     * @type {number}
     * @memberof ThroughputMetrics
     */
    peakRps: number;
    /**
     * 
     * @type {number}
     * @memberof ThroughputMetrics
     */
    requestsPerSecond: number;
}

/**
 * Check if a given object implements the ThroughputMetrics interface.
 */
export function instanceOfThroughputMetrics(value: object): value is ThroughputMetrics {
    if (!('averageRps' in value) || value['averageRps'] === undefined) return false;
    if (!('byHour' in value) || value['byHour'] === undefined) return false;
    if (!('peakRps' in value) || value['peakRps'] === undefined) return false;
    if (!('requestsPerSecond' in value) || value['requestsPerSecond'] === undefined) return false;
    return true;
}

export function ThroughputMetricsFromJSON(json: any): ThroughputMetrics {
    return ThroughputMetricsFromJSONTyped(json, false);
}

export function ThroughputMetricsFromJSONTyped(json: any, ignoreDiscriminator: boolean): ThroughputMetrics {
    if (json == null) {
        return json;
    }
    return {
        
        'averageRps': json['average_rps'],
        'byHour': (json['by_hour'] == null ? null : (json['by_hour'] as Array<any>).map(HourlyThroughputFromJSON)),
        'peakRps': json['peak_rps'],
        'requestsPerSecond': json['requests_per_second'],
    };
}

export function ThroughputMetricsToJSON(json: any): ThroughputMetrics {
    return ThroughputMetricsToJSONTyped(json, false);
}

export function ThroughputMetricsToJSONTyped(value?: ThroughputMetrics | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'average_rps': value['averageRps'],
        'by_hour': (value['byHour'] == null ? null : (value['byHour'] as Array<any>).map(HourlyThroughputToJSON)),
        'peak_rps': value['peakRps'],
        'requests_per_second': value['requestsPerSecond'],
    };
}

