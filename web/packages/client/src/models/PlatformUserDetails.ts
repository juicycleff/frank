/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UserSecuritySummary } from './UserSecuritySummary';
import {
    UserSecuritySummaryFromJSON,
    UserSecuritySummaryFromJSONTyped,
    UserSecuritySummaryToJSON,
    UserSecuritySummaryToJSONTyped,
} from './UserSecuritySummary';
import type { APIKey } from './APIKey';
import {
    APIKeyFromJSON,
    APIKeyFromJSONTyped,
    APIKeyToJSON,
    APIKeyToJSONTyped,
} from './APIKey';
import type { User } from './User';
import {
    UserFromJSON,
    UserFromJSONTyped,
    UserToJSON,
    UserToJSONTyped,
} from './User';
import type { OrganizationSummary } from './OrganizationSummary';
import {
    OrganizationSummaryFromJSON,
    OrganizationSummaryFromJSONTyped,
    OrganizationSummaryToJSON,
    OrganizationSummaryToJSONTyped,
} from './OrganizationSummary';
import type { ActivityRecord } from './ActivityRecord';
import {
    ActivityRecordFromJSON,
    ActivityRecordFromJSONTyped,
    ActivityRecordToJSON,
    ActivityRecordToJSONTyped,
} from './ActivityRecord';
import type { UserPermissionAssignment } from './UserPermissionAssignment';
import {
    UserPermissionAssignmentFromJSON,
    UserPermissionAssignmentFromJSONTyped,
    UserPermissionAssignmentToJSON,
    UserPermissionAssignmentToJSONTyped,
} from './UserPermissionAssignment';
import type { UserRoleAssignment } from './UserRoleAssignment';
import {
    UserRoleAssignmentFromJSON,
    UserRoleAssignmentFromJSONTyped,
    UserRoleAssignmentToJSON,
    UserRoleAssignmentToJSONTyped,
} from './UserRoleAssignment';
import type { MFAMethod } from './MFAMethod';
import {
    MFAMethodFromJSON,
    MFAMethodFromJSONTyped,
    MFAMethodToJSON,
    MFAMethodToJSONTyped,
} from './MFAMethod';
import type { UserBillingSummary } from './UserBillingSummary';
import {
    UserBillingSummaryFromJSON,
    UserBillingSummaryFromJSONTyped,
    UserBillingSummaryToJSON,
    UserBillingSummaryToJSONTyped,
} from './UserBillingSummary';
import type { Session } from './Session';
import {
    SessionFromJSON,
    SessionFromJSONTyped,
    SessionToJSON,
    SessionToJSONTyped,
} from './Session';

/**
 * 
 * @export
 * @interface PlatformUserDetails
 */
export interface PlatformUserDetails {
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof PlatformUserDetails
     */
    readonly $schema?: string;
    /**
     * 
     * @type {Array<APIKey>}
     * @memberof PlatformUserDetails
     */
    apiKeys?: Array<APIKey> | null;
    /**
     * 
     * @type {UserBillingSummary}
     * @memberof PlatformUserDetails
     */
    billing?: UserBillingSummary;
    /**
     * 
     * @type {Array<MFAMethod>}
     * @memberof PlatformUserDetails
     */
    mfaMethods?: Array<MFAMethod> | null;
    /**
     * 
     * @type {Array<OrganizationSummary>}
     * @memberof PlatformUserDetails
     */
    organizations?: Array<OrganizationSummary> | null;
    /**
     * 
     * @type {Array<UserPermissionAssignment>}
     * @memberof PlatformUserDetails
     */
    permissions?: Array<UserPermissionAssignment> | null;
    /**
     * 
     * @type {Array<ActivityRecord>}
     * @memberof PlatformUserDetails
     */
    recentActivity?: Array<ActivityRecord> | null;
    /**
     * 
     * @type {Array<UserRoleAssignment>}
     * @memberof PlatformUserDetails
     */
    roles?: Array<UserRoleAssignment> | null;
    /**
     * 
     * @type {UserSecuritySummary}
     * @memberof PlatformUserDetails
     */
    security?: UserSecuritySummary;
    /**
     * 
     * @type {Array<Session>}
     * @memberof PlatformUserDetails
     */
    sessions?: Array<Session> | null;
    /**
     * 
     * @type {User}
     * @memberof PlatformUserDetails
     */
    user: User;
}

/**
 * Check if a given object implements the PlatformUserDetails interface.
 */
export function instanceOfPlatformUserDetails(value: object): value is PlatformUserDetails {
    if (!('user' in value) || value['user'] === undefined) return false;
    return true;
}

export function PlatformUserDetailsFromJSON(json: any): PlatformUserDetails {
    return PlatformUserDetailsFromJSONTyped(json, false);
}

export function PlatformUserDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): PlatformUserDetails {
    if (json == null) {
        return json;
    }
    return {
        
        '$schema': json['$schema'] == null ? undefined : json['$schema'],
        'apiKeys': json['api_keys'] == null ? undefined : ((json['api_keys'] as Array<any>).map(APIKeyFromJSON)),
        'billing': json['billing'] == null ? undefined : UserBillingSummaryFromJSON(json['billing']),
        'mfaMethods': json['mfa_methods'] == null ? undefined : ((json['mfa_methods'] as Array<any>).map(MFAMethodFromJSON)),
        'organizations': json['organizations'] == null ? undefined : ((json['organizations'] as Array<any>).map(OrganizationSummaryFromJSON)),
        'permissions': json['permissions'] == null ? undefined : ((json['permissions'] as Array<any>).map(UserPermissionAssignmentFromJSON)),
        'recentActivity': json['recent_activity'] == null ? undefined : ((json['recent_activity'] as Array<any>).map(ActivityRecordFromJSON)),
        'roles': json['roles'] == null ? undefined : ((json['roles'] as Array<any>).map(UserRoleAssignmentFromJSON)),
        'security': json['security'] == null ? undefined : UserSecuritySummaryFromJSON(json['security']),
        'sessions': json['sessions'] == null ? undefined : ((json['sessions'] as Array<any>).map(SessionFromJSON)),
        'user': UserFromJSON(json['user']),
    };
}

export function PlatformUserDetailsToJSON(json: any): PlatformUserDetails {
    return PlatformUserDetailsToJSONTyped(json, false);
}

export function PlatformUserDetailsToJSONTyped(value?: Omit<PlatformUserDetails, '$schema'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'api_keys': value['apiKeys'] == null ? undefined : ((value['apiKeys'] as Array<any>).map(APIKeyToJSON)),
        'billing': UserBillingSummaryToJSON(value['billing']),
        'mfa_methods': value['mfaMethods'] == null ? undefined : ((value['mfaMethods'] as Array<any>).map(MFAMethodToJSON)),
        'organizations': value['organizations'] == null ? undefined : ((value['organizations'] as Array<any>).map(OrganizationSummaryToJSON)),
        'permissions': value['permissions'] == null ? undefined : ((value['permissions'] as Array<any>).map(UserPermissionAssignmentToJSON)),
        'recent_activity': value['recentActivity'] == null ? undefined : ((value['recentActivity'] as Array<any>).map(ActivityRecordToJSON)),
        'roles': value['roles'] == null ? undefined : ((value['roles'] as Array<any>).map(UserRoleAssignmentToJSON)),
        'security': UserSecuritySummaryToJSON(value['security']),
        'sessions': value['sessions'] == null ? undefined : ((value['sessions'] as Array<any>).map(SessionToJSON)),
        'user': UserToJSON(value['user']),
    };
}

