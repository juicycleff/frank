/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface MemberActivitySummary
 */
export interface MemberActivitySummary {
    /**
     * Total actions performed
     * @type {number}
     * @memberof MemberActivitySummary
     */
    actionsPerformed: number;
    /**
     * Activity score (0-100)
     * @type {number}
     * @memberof MemberActivitySummary
     */
    activityScore: number;
    /**
     * Average session length in minutes
     * @type {number}
     * @memberof MemberActivitySummary
     */
    avgSessionLength: number;
    /**
     * User email
     * @type {string}
     * @memberof MemberActivitySummary
     */
    email: string;
    /**
     * User full name
     * @type {string}
     * @memberof MemberActivitySummary
     */
    fullName: string;
    /**
     * Last activity timestamp
     * @type {Date}
     * @memberof MemberActivitySummary
     */
    lastActiveAt: Date;
    /**
     * Total sessions in period
     * @type {number}
     * @memberof MemberActivitySummary
     */
    totalSessions: number;
    /**
     * User ID
     * @type {string}
     * @memberof MemberActivitySummary
     */
    userId: string;
}

/**
 * Check if a given object implements the MemberActivitySummary interface.
 */
export function instanceOfMemberActivitySummary(value: object): value is MemberActivitySummary {
    if (!('actionsPerformed' in value) || value['actionsPerformed'] === undefined) return false;
    if (!('activityScore' in value) || value['activityScore'] === undefined) return false;
    if (!('avgSessionLength' in value) || value['avgSessionLength'] === undefined) return false;
    if (!('email' in value) || value['email'] === undefined) return false;
    if (!('fullName' in value) || value['fullName'] === undefined) return false;
    if (!('lastActiveAt' in value) || value['lastActiveAt'] === undefined) return false;
    if (!('totalSessions' in value) || value['totalSessions'] === undefined) return false;
    if (!('userId' in value) || value['userId'] === undefined) return false;
    return true;
}

export function MemberActivitySummaryFromJSON(json: any): MemberActivitySummary {
    return MemberActivitySummaryFromJSONTyped(json, false);
}

export function MemberActivitySummaryFromJSONTyped(json: any, ignoreDiscriminator: boolean): MemberActivitySummary {
    if (json == null) {
        return json;
    }
    return {
        
        'actionsPerformed': json['actionsPerformed'],
        'activityScore': json['activityScore'],
        'avgSessionLength': json['avgSessionLength'],
        'email': json['email'],
        'fullName': json['fullName'],
        'lastActiveAt': (new Date(json['lastActiveAt'])),
        'totalSessions': json['totalSessions'],
        'userId': json['userId'],
    };
}

export function MemberActivitySummaryToJSON(json: any): MemberActivitySummary {
    return MemberActivitySummaryToJSONTyped(json, false);
}

export function MemberActivitySummaryToJSONTyped(value?: MemberActivitySummary | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'actionsPerformed': value['actionsPerformed'],
        'activityScore': value['activityScore'],
        'avgSessionLength': value['avgSessionLength'],
        'email': value['email'],
        'fullName': value['fullName'],
        'lastActiveAt': ((value['lastActiveAt']).toISOString()),
        'totalSessions': value['totalSessions'],
        'userId': value['userId'],
    };
}

