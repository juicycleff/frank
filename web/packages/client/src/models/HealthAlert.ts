/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface HealthAlert
 */
export interface HealthAlert {
    /**
     * 
     * @type {boolean}
     * @memberof HealthAlert
     */
    acknowledged: boolean;
    /**
     * 
     * @type {Date}
     * @memberof HealthAlert
     */
    createdAt: Date;
    /**
     * 
     * @type {string}
     * @memberof HealthAlert
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof HealthAlert
     */
    message: string;
    /**
     * 
     * @type {Date}
     * @memberof HealthAlert
     */
    resolvedAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof HealthAlert
     */
    service: string;
    /**
     * 
     * @type {string}
     * @memberof HealthAlert
     */
    severity: string;
}

/**
 * Check if a given object implements the HealthAlert interface.
 */
export function instanceOfHealthAlert(value: object): value is HealthAlert {
    if (!('acknowledged' in value) || value['acknowledged'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('message' in value) || value['message'] === undefined) return false;
    if (!('service' in value) || value['service'] === undefined) return false;
    if (!('severity' in value) || value['severity'] === undefined) return false;
    return true;
}

export function HealthAlertFromJSON(json: any): HealthAlert {
    return HealthAlertFromJSONTyped(json, false);
}

export function HealthAlertFromJSONTyped(json: any, ignoreDiscriminator: boolean): HealthAlert {
    if (json == null) {
        return json;
    }
    return {
        
        'acknowledged': json['acknowledged'],
        'createdAt': (new Date(json['created_at'])),
        'id': json['id'],
        'message': json['message'],
        'resolvedAt': json['resolved_at'] == null ? undefined : (new Date(json['resolved_at'])),
        'service': json['service'],
        'severity': json['severity'],
    };
}

export function HealthAlertToJSON(json: any): HealthAlert {
    return HealthAlertToJSONTyped(json, false);
}

export function HealthAlertToJSONTyped(value?: HealthAlert | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'acknowledged': value['acknowledged'],
        'created_at': ((value['createdAt']).toISOString()),
        'id': value['id'],
        'message': value['message'],
        'resolved_at': value['resolvedAt'] == null ? undefined : ((value['resolvedAt']).toISOString()),
        'service': value['service'],
        'severity': value['severity'],
    };
}

