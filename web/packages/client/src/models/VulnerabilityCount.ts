/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface VulnerabilityCount
 */
export interface VulnerabilityCount {
    /**
     * 
     * @type {number}
     * @memberof VulnerabilityCount
     */
    critical: number;
    /**
     * 
     * @type {number}
     * @memberof VulnerabilityCount
     */
    high: number;
    /**
     * 
     * @type {number}
     * @memberof VulnerabilityCount
     */
    low: number;
    /**
     * 
     * @type {number}
     * @memberof VulnerabilityCount
     */
    medium: number;
    /**
     * 
     * @type {number}
     * @memberof VulnerabilityCount
     */
    total: number;
}

/**
 * Check if a given object implements the VulnerabilityCount interface.
 */
export function instanceOfVulnerabilityCount(value: object): value is VulnerabilityCount {
    if (!('critical' in value) || value['critical'] === undefined) return false;
    if (!('high' in value) || value['high'] === undefined) return false;
    if (!('low' in value) || value['low'] === undefined) return false;
    if (!('medium' in value) || value['medium'] === undefined) return false;
    if (!('total' in value) || value['total'] === undefined) return false;
    return true;
}

export function VulnerabilityCountFromJSON(json: any): VulnerabilityCount {
    return VulnerabilityCountFromJSONTyped(json, false);
}

export function VulnerabilityCountFromJSONTyped(json: any, ignoreDiscriminator: boolean): VulnerabilityCount {
    if (json == null) {
        return json;
    }
    return {
        
        'critical': json['critical'],
        'high': json['high'],
        'low': json['low'],
        'medium': json['medium'],
        'total': json['total'],
    };
}

export function VulnerabilityCountToJSON(json: any): VulnerabilityCount {
    return VulnerabilityCountToJSONTyped(json, false);
}

export function VulnerabilityCountToJSONTyped(value?: VulnerabilityCount | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'critical': value['critical'],
        'high': value['high'],
        'low': value['low'],
        'medium': value['medium'],
        'total': value['total'],
    };
}

