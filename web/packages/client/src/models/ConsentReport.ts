/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ConsentReport
 */
export interface ConsentReport {
    /**
     * 
     * @type {number}
     * @memberof ConsentReport
     */
    activeConsents: number;
    /**
     * 
     * @type {number}
     * @memberof ConsentReport
     */
    complianceRate: number;
    /**
     * 
     * @type {{ [key: string]: number; }}
     * @memberof ConsentReport
     */
    consentByPurpose: { [key: string]: number; };
    /**
     * 
     * @type {{ [key: string]: number; }}
     * @memberof ConsentReport
     */
    consentMechanism: { [key: string]: number; };
    /**
     * 
     * @type {number}
     * @memberof ConsentReport
     */
    totalConsents: number;
    /**
     * 
     * @type {number}
     * @memberof ConsentReport
     */
    withdrawnConsents: number;
}

/**
 * Check if a given object implements the ConsentReport interface.
 */
export function instanceOfConsentReport(value: object): value is ConsentReport {
    if (!('activeConsents' in value) || value['activeConsents'] === undefined) return false;
    if (!('complianceRate' in value) || value['complianceRate'] === undefined) return false;
    if (!('consentByPurpose' in value) || value['consentByPurpose'] === undefined) return false;
    if (!('consentMechanism' in value) || value['consentMechanism'] === undefined) return false;
    if (!('totalConsents' in value) || value['totalConsents'] === undefined) return false;
    if (!('withdrawnConsents' in value) || value['withdrawnConsents'] === undefined) return false;
    return true;
}

export function ConsentReportFromJSON(json: any): ConsentReport {
    return ConsentReportFromJSONTyped(json, false);
}

export function ConsentReportFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConsentReport {
    if (json == null) {
        return json;
    }
    return {
        
        'activeConsents': json['active_consents'],
        'complianceRate': json['compliance_rate'],
        'consentByPurpose': json['consent_by_purpose'],
        'consentMechanism': json['consent_mechanism'],
        'totalConsents': json['total_consents'],
        'withdrawnConsents': json['withdrawn_consents'],
    };
}

export function ConsentReportToJSON(json: any): ConsentReport {
    return ConsentReportToJSONTyped(json, false);
}

export function ConsentReportToJSONTyped(value?: ConsentReport | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'active_consents': value['activeConsents'],
        'compliance_rate': value['complianceRate'],
        'consent_by_purpose': value['consentByPurpose'],
        'consent_mechanism': value['consentMechanism'],
        'total_consents': value['totalConsents'],
        'withdrawn_consents': value['withdrawnConsents'],
    };
}

