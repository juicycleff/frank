/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SecurityAlert } from './SecurityAlert';
import {
    SecurityAlertFromJSON,
    SecurityAlertFromJSONTyped,
    SecurityAlertToJSON,
    SecurityAlertToJSONTyped,
} from './SecurityAlert';

/**
 * 
 * @export
 * @interface SecurityStatistics
 */
export interface SecurityStatistics {
    /**
     * Blocked malicious requests
     * @type {number}
     * @memberof SecurityStatistics
     */
    blockedRequests: number;
    /**
     * Overall compliance score
     * @type {number}
     * @memberof SecurityStatistics
     */
    complianceScore: number;
    /**
     * Detected compromised accounts
     * @type {number}
     * @memberof SecurityStatistics
     */
    compromisedAccounts: number;
    /**
     * Failed MFA attempts
     * @type {number}
     * @memberof SecurityStatistics
     */
    failedMFAAttempts: number;
    /**
     * Recent security alerts
     * @type {Array<SecurityAlert>}
     * @memberof SecurityStatistics
     */
    securityAlerts: Array<SecurityAlert> | null;
    /**
     * Total security events
     * @type {number}
     * @memberof SecurityStatistics
     */
    securityEvents: number;
    /**
     * Suspicious activity events
     * @type {number}
     * @memberof SecurityStatistics
     */
    suspiciousActivity: number;
    /**
     * Threats by country
     * @type {{ [key: string]: number; }}
     * @memberof SecurityStatistics
     */
    threatsByCountry: { [key: string]: number; };
    /**
     * Threats by type
     * @type {{ [key: string]: number; }}
     * @memberof SecurityStatistics
     */
    threatsByType: { [key: string]: number; };
}

/**
 * Check if a given object implements the SecurityStatistics interface.
 */
export function instanceOfSecurityStatistics(value: object): value is SecurityStatistics {
    if (!('blockedRequests' in value) || value['blockedRequests'] === undefined) return false;
    if (!('complianceScore' in value) || value['complianceScore'] === undefined) return false;
    if (!('compromisedAccounts' in value) || value['compromisedAccounts'] === undefined) return false;
    if (!('failedMFAAttempts' in value) || value['failedMFAAttempts'] === undefined) return false;
    if (!('securityAlerts' in value) || value['securityAlerts'] === undefined) return false;
    if (!('securityEvents' in value) || value['securityEvents'] === undefined) return false;
    if (!('suspiciousActivity' in value) || value['suspiciousActivity'] === undefined) return false;
    if (!('threatsByCountry' in value) || value['threatsByCountry'] === undefined) return false;
    if (!('threatsByType' in value) || value['threatsByType'] === undefined) return false;
    return true;
}

export function SecurityStatisticsFromJSON(json: any): SecurityStatistics {
    return SecurityStatisticsFromJSONTyped(json, false);
}

export function SecurityStatisticsFromJSONTyped(json: any, ignoreDiscriminator: boolean): SecurityStatistics {
    if (json == null) {
        return json;
    }
    return {
        
        'blockedRequests': json['blockedRequests'],
        'complianceScore': json['complianceScore'],
        'compromisedAccounts': json['compromisedAccounts'],
        'failedMFAAttempts': json['failedMFAAttempts'],
        'securityAlerts': (json['securityAlerts'] == null ? null : (json['securityAlerts'] as Array<any>).map(SecurityAlertFromJSON)),
        'securityEvents': json['securityEvents'],
        'suspiciousActivity': json['suspiciousActivity'],
        'threatsByCountry': json['threatsByCountry'],
        'threatsByType': json['threatsByType'],
    };
}

export function SecurityStatisticsToJSON(json: any): SecurityStatistics {
    return SecurityStatisticsToJSONTyped(json, false);
}

export function SecurityStatisticsToJSONTyped(value?: SecurityStatistics | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'blockedRequests': value['blockedRequests'],
        'complianceScore': value['complianceScore'],
        'compromisedAccounts': value['compromisedAccounts'],
        'failedMFAAttempts': value['failedMFAAttempts'],
        'securityAlerts': (value['securityAlerts'] == null ? null : (value['securityAlerts'] as Array<any>).map(SecurityAlertToJSON)),
        'securityEvents': value['securityEvents'],
        'suspiciousActivity': value['suspiciousActivity'],
        'threatsByCountry': value['threatsByCountry'],
        'threatsByType': value['threatsByType'],
    };
}

