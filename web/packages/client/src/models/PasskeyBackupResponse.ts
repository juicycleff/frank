/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PasskeyBackupResponse
 */
export interface PasskeyBackupResponse {
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof PasskeyBackupResponse
     */
    readonly $schema?: string;
    /**
     * Error messages
     * @type {Array<string>}
     * @memberof PasskeyBackupResponse
     */
    errors?: Array<string> | null;
    /**
     * Failed passkey IDs
     * @type {Array<string>}
     * @memberof PasskeyBackupResponse
     */
    failed?: Array<string> | null;
    /**
     * Number of passkeys updated
     * @type {number}
     * @memberof PasskeyBackupResponse
     */
    updatedCount: number;
}

/**
 * Check if a given object implements the PasskeyBackupResponse interface.
 */
export function instanceOfPasskeyBackupResponse(value: object): value is PasskeyBackupResponse {
    if (!('updatedCount' in value) || value['updatedCount'] === undefined) return false;
    return true;
}

export function PasskeyBackupResponseFromJSON(json: any): PasskeyBackupResponse {
    return PasskeyBackupResponseFromJSONTyped(json, false);
}

export function PasskeyBackupResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): PasskeyBackupResponse {
    if (json == null) {
        return json;
    }
    return {
        
        '$schema': json['$schema'] == null ? undefined : json['$schema'],
        'errors': json['errors'] == null ? undefined : json['errors'],
        'failed': json['failed'] == null ? undefined : json['failed'],
        'updatedCount': json['updatedCount'],
    };
}

export function PasskeyBackupResponseToJSON(json: any): PasskeyBackupResponse {
    return PasskeyBackupResponseToJSONTyped(json, false);
}

export function PasskeyBackupResponseToJSONTyped(value?: Omit<PasskeyBackupResponse, '$schema'> | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'errors': value['errors'],
        'failed': value['failed'],
        'updatedCount': value['updatedCount'],
    };
}

