/* tslint:disable */
/* eslint-disable */
/**
 * My Project
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Invitation,
    InvitationFromJSON,
    InvitationFromJSONTyped,
    InvitationToJSON,
} from './';

/**
 * 
 * @export
 * @interface InvitationValidationResponse
 */
export interface InvitationValidationResponse {
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof InvitationValidationResponse
     */
    readonly $schema?: string;
    /**
     * Whether the invitation was already used
     * @type {boolean}
     * @memberof InvitationValidationResponse
     */
    alreadyUsed: boolean;
    /**
     * Error message if invalid
     * @type {string}
     * @memberof InvitationValidationResponse
     */
    error?: string;
    /**
     * Whether the invitation has expired
     * @type {boolean}
     * @memberof InvitationValidationResponse
     */
    expired: boolean;
    /**
     * Expiration time
     * @type {Date}
     * @memberof InvitationValidationResponse
     */
    expiresAt?: Date;
    /**
     * 
     * @type {Invitation}
     * @memberof InvitationValidationResponse
     */
    invitation?: Invitation;
    /**
     * Time remaining until expiration
     * @type {string}
     * @memberof InvitationValidationResponse
     */
    timeRemaining?: string;
    /**
     * Whether the invitation is valid
     * @type {boolean}
     * @memberof InvitationValidationResponse
     */
    valid: boolean;
}

export function InvitationValidationResponseFromJSON(json: any): InvitationValidationResponse {
    return InvitationValidationResponseFromJSONTyped(json, false);
}

export function InvitationValidationResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): InvitationValidationResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        '$schema': !exists(json, '$schema') ? undefined : json['$schema'],
        'alreadyUsed': json['alreadyUsed'],
        'error': !exists(json, 'error') ? undefined : json['error'],
        'expired': json['expired'],
        'expiresAt': !exists(json, 'expiresAt') ? undefined : (new Date(json['expiresAt'])),
        'invitation': !exists(json, 'invitation') ? undefined : InvitationFromJSON(json['invitation']),
        'timeRemaining': !exists(json, 'timeRemaining') ? undefined : json['timeRemaining'],
        'valid': json['valid'],
    };
}

export function InvitationValidationResponseToJSON(value?: InvitationValidationResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'alreadyUsed': value.alreadyUsed,
        'error': value.error,
        'expired': value.expired,
        'expiresAt': value.expiresAt === undefined ? undefined : (value.expiresAt.toISOString()),
        'invitation': InvitationToJSON(value.invitation),
        'timeRemaining': value.timeRemaining,
        'valid': value.valid,
    };
}


