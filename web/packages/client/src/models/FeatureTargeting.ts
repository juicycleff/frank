/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { FeatureVariation } from './FeatureVariation';
import {
    FeatureVariationFromJSON,
    FeatureVariationFromJSONTyped,
    FeatureVariationToJSON,
    FeatureVariationToJSONTyped,
} from './FeatureVariation';
import type { FeatureTargetingRule } from './FeatureTargetingRule';
import {
    FeatureTargetingRuleFromJSON,
    FeatureTargetingRuleFromJSONTyped,
    FeatureTargetingRuleToJSON,
    FeatureTargetingRuleToJSONTyped,
} from './FeatureTargetingRule';

/**
 * 
 * @export
 * @interface FeatureTargeting
 */
export interface FeatureTargeting {
    /**
     * 
     * @type {boolean}
     * @memberof FeatureTargeting
     */
    enabled: boolean;
    /**
     * 
     * @type {FeatureVariation}
     * @memberof FeatureTargeting
     */
    fallthrough: FeatureVariation;
    /**
     * 
     * @type {Array<FeatureTargetingRule>}
     * @memberof FeatureTargeting
     */
    rules: Array<FeatureTargetingRule> | null;
}

/**
 * Check if a given object implements the FeatureTargeting interface.
 */
export function instanceOfFeatureTargeting(value: object): value is FeatureTargeting {
    if (!('enabled' in value) || value['enabled'] === undefined) return false;
    if (!('fallthrough' in value) || value['fallthrough'] === undefined) return false;
    if (!('rules' in value) || value['rules'] === undefined) return false;
    return true;
}

export function FeatureTargetingFromJSON(json: any): FeatureTargeting {
    return FeatureTargetingFromJSONTyped(json, false);
}

export function FeatureTargetingFromJSONTyped(json: any, ignoreDiscriminator: boolean): FeatureTargeting {
    if (json == null) {
        return json;
    }
    return {
        
        'enabled': json['enabled'],
        'fallthrough': FeatureVariationFromJSON(json['fallthrough']),
        'rules': (json['rules'] == null ? null : (json['rules'] as Array<any>).map(FeatureTargetingRuleFromJSON)),
    };
}

export function FeatureTargetingToJSON(json: any): FeatureTargeting {
    return FeatureTargetingToJSONTyped(json, false);
}

export function FeatureTargetingToJSONTyped(value?: FeatureTargeting | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'enabled': value['enabled'],
        'fallthrough': FeatureVariationToJSON(value['fallthrough']),
        'rules': (value['rules'] == null ? null : (value['rules'] as Array<any>).map(FeatureTargetingRuleToJSON)),
    };
}

