/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TokenResponse
 */
export interface TokenResponse {
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof TokenResponse
     */
    readonly $schema?: string;
    /**
     * Access token
     * @type {string}
     * @memberof TokenResponse
     */
    accessToken: string;
    /**
     * Token expiry in seconds
     * @type {number}
     * @memberof TokenResponse
     */
    expiresIn: number;
    /**
     * OpenID Connect ID token
     * @type {string}
     * @memberof TokenResponse
     */
    idToken?: string;
    /**
     * Refresh token
     * @type {string}
     * @memberof TokenResponse
     */
    refreshToken?: string;
    /**
     * Granted scopes
     * @type {string}
     * @memberof TokenResponse
     */
    scope?: string;
    /**
     * Token type
     * @type {string}
     * @memberof TokenResponse
     */
    tokenType: string;
}

/**
 * Check if a given object implements the TokenResponse interface.
 */
export function instanceOfTokenResponse(value: object): value is TokenResponse {
    if (!('accessToken' in value) || value['accessToken'] === undefined) return false;
    if (!('expiresIn' in value) || value['expiresIn'] === undefined) return false;
    if (!('tokenType' in value) || value['tokenType'] === undefined) return false;
    return true;
}

export function TokenResponseFromJSON(json: any): TokenResponse {
    return TokenResponseFromJSONTyped(json, false);
}

export function TokenResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): TokenResponse {
    if (json == null) {
        return json;
    }
    return {
        
        '$schema': json['$schema'] == null ? undefined : json['$schema'],
        'accessToken': json['accessToken'],
        'expiresIn': json['expiresIn'],
        'idToken': json['idToken'] == null ? undefined : json['idToken'],
        'refreshToken': json['refreshToken'] == null ? undefined : json['refreshToken'],
        'scope': json['scope'] == null ? undefined : json['scope'],
        'tokenType': json['tokenType'],
    };
}

export function TokenResponseToJSON(json: any): TokenResponse {
    return TokenResponseToJSONTyped(json, false);
}

export function TokenResponseToJSONTyped(value?: Omit<TokenResponse, '$schema'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'accessToken': value['accessToken'],
        'expiresIn': value['expiresIn'],
        'idToken': value['idToken'],
        'refreshToken': value['refreshToken'],
        'scope': value['scope'],
        'tokenType': value['tokenType'],
    };
}

