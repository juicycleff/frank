/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AuditTrend
 */
export interface AuditTrend {
    /**
     * 
     * @type {Date}
     * @memberof AuditTrend
     */
    date: Date;
    /**
     * 
     * @type {number}
     * @memberof AuditTrend
     */
    events: number;
    /**
     * 
     * @type {number}
     * @memberof AuditTrend
     */
    failures: number;
    /**
     * 
     * @type {number}
     * @memberof AuditTrend
     */
    highRisk: number;
    /**
     * 
     * @type {number}
     * @memberof AuditTrend
     */
    securityEvents: number;
}

/**
 * Check if a given object implements the AuditTrend interface.
 */
export function instanceOfAuditTrend(value: object): value is AuditTrend {
    if (!('date' in value) || value['date'] === undefined) return false;
    if (!('events' in value) || value['events'] === undefined) return false;
    if (!('failures' in value) || value['failures'] === undefined) return false;
    if (!('highRisk' in value) || value['highRisk'] === undefined) return false;
    if (!('securityEvents' in value) || value['securityEvents'] === undefined) return false;
    return true;
}

export function AuditTrendFromJSON(json: any): AuditTrend {
    return AuditTrendFromJSONTyped(json, false);
}

export function AuditTrendFromJSONTyped(json: any, ignoreDiscriminator: boolean): AuditTrend {
    if (json == null) {
        return json;
    }
    return {
        
        'date': (new Date(json['date'])),
        'events': json['events'],
        'failures': json['failures'],
        'highRisk': json['high_risk'],
        'securityEvents': json['security_events'],
    };
}

export function AuditTrendToJSON(json: any): AuditTrend {
    return AuditTrendToJSONTyped(json, false);
}

export function AuditTrendToJSONTyped(value?: AuditTrend | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'date': ((value['date']).toISOString()),
        'events': value['events'],
        'failures': value['failures'],
        'high_risk': value['highRisk'],
        'security_events': value['securityEvents'],
    };
}

