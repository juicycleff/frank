/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface NotificationRecipients
 */
export interface NotificationRecipients {
    /**
     * 
     * @type {boolean}
     * @memberof NotificationRecipients
     */
    all?: boolean;
    /**
     * 
     * @type {Array<string>}
     * @memberof NotificationRecipients
     */
    organizations?: Array<string> | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof NotificationRecipients
     */
    plans?: Array<string> | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof NotificationRecipients
     */
    userTypes?: Array<string> | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof NotificationRecipients
     */
    users?: Array<string> | null;
}

/**
 * Check if a given object implements the NotificationRecipients interface.
 */
export function instanceOfNotificationRecipients(value: object): value is NotificationRecipients {
    return true;
}

export function NotificationRecipientsFromJSON(json: any): NotificationRecipients {
    return NotificationRecipientsFromJSONTyped(json, false);
}

export function NotificationRecipientsFromJSONTyped(json: any, ignoreDiscriminator: boolean): NotificationRecipients {
    if (json == null) {
        return json;
    }
    return {
        
        'all': json['all'] == null ? undefined : json['all'],
        'organizations': json['organizations'] == null ? undefined : json['organizations'],
        'plans': json['plans'] == null ? undefined : json['plans'],
        'userTypes': json['user_types'] == null ? undefined : json['user_types'],
        'users': json['users'] == null ? undefined : json['users'],
    };
}

export function NotificationRecipientsToJSON(json: any): NotificationRecipients {
    return NotificationRecipientsToJSONTyped(json, false);
}

export function NotificationRecipientsToJSONTyped(value?: NotificationRecipients | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'all': value['all'],
        'organizations': value['organizations'],
        'plans': value['plans'],
        'user_types': value['userTypes'],
        'users': value['users'],
    };
}

