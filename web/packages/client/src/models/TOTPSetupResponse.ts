/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TOTPSetupResponse
 */
export interface TOTPSetupResponse {
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof TOTPSetupResponse
     */
    readonly $schema?: string;
    /**
     * Backup code URLs
     * @type {Array<string>}
     * @memberof TOTPSetupResponse
     */
    backupCodes: Array<string> | null;
    /**
     * Manual entry URL
     * @type {string}
     * @memberof TOTPSetupResponse
     */
    backupUrl: string;
    /**
     * MFA method ID
     * @type {string}
     * @memberof TOTPSetupResponse
     */
    methodId: string;
    /**
     * QR code data URL
     * @type {string}
     * @memberof TOTPSetupResponse
     */
    qrCode: string;
    /**
     * TOTP secret
     * @type {string}
     * @memberof TOTPSetupResponse
     */
    secret: string;
}

/**
 * Check if a given object implements the TOTPSetupResponse interface.
 */
export function instanceOfTOTPSetupResponse(value: object): value is TOTPSetupResponse {
    if (!('backupCodes' in value) || value['backupCodes'] === undefined) return false;
    if (!('backupUrl' in value) || value['backupUrl'] === undefined) return false;
    if (!('methodId' in value) || value['methodId'] === undefined) return false;
    if (!('qrCode' in value) || value['qrCode'] === undefined) return false;
    if (!('secret' in value) || value['secret'] === undefined) return false;
    return true;
}

export function TOTPSetupResponseFromJSON(json: any): TOTPSetupResponse {
    return TOTPSetupResponseFromJSONTyped(json, false);
}

export function TOTPSetupResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): TOTPSetupResponse {
    if (json == null) {
        return json;
    }
    return {
        
        '$schema': json['$schema'] == null ? undefined : json['$schema'],
        'backupCodes': json['backupCodes'] == null ? null : json['backupCodes'],
        'backupUrl': json['backupUrl'],
        'methodId': json['methodId'],
        'qrCode': json['qrCode'],
        'secret': json['secret'],
    };
}

export function TOTPSetupResponseToJSON(json: any): TOTPSetupResponse {
    return TOTPSetupResponseToJSONTyped(json, false);
}

export function TOTPSetupResponseToJSONTyped(value?: Omit<TOTPSetupResponse, '$schema'> | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'backupCodes': value['backupCodes'],
        'backupUrl': value['backupUrl'],
        'methodId': value['methodId'],
        'qrCode': value['qrCode'],
        'secret': value['secret'],
    };
}

