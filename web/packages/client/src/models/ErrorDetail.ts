/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ErrorDetail
 */
export interface ErrorDetail {
    /**
     * 
     * @type {number}
     * @memberof ErrorDetail
     */
    count: number;
    /**
     * 
     * @type {string}
     * @memberof ErrorDetail
     */
    errorCode: string;
    /**
     * 
     * @type {Date}
     * @memberof ErrorDetail
     */
    firstSeen: Date;
    /**
     * 
     * @type {Date}
     * @memberof ErrorDetail
     */
    lastSeen: Date;
    /**
     * 
     * @type {number}
     * @memberof ErrorDetail
     */
    percentage: number;
}

/**
 * Check if a given object implements the ErrorDetail interface.
 */
export function instanceOfErrorDetail(value: object): value is ErrorDetail {
    if (!('count' in value) || value['count'] === undefined) return false;
    if (!('errorCode' in value) || value['errorCode'] === undefined) return false;
    if (!('firstSeen' in value) || value['firstSeen'] === undefined) return false;
    if (!('lastSeen' in value) || value['lastSeen'] === undefined) return false;
    if (!('percentage' in value) || value['percentage'] === undefined) return false;
    return true;
}

export function ErrorDetailFromJSON(json: any): ErrorDetail {
    return ErrorDetailFromJSONTyped(json, false);
}

export function ErrorDetailFromJSONTyped(json: any, ignoreDiscriminator: boolean): ErrorDetail {
    if (json == null) {
        return json;
    }
    return {
        
        'count': json['count'],
        'errorCode': json['errorCode'],
        'firstSeen': (new Date(json['firstSeen'])),
        'lastSeen': (new Date(json['lastSeen'])),
        'percentage': json['percentage'],
    };
}

export function ErrorDetailToJSON(json: any): ErrorDetail {
    return ErrorDetailToJSONTyped(json, false);
}

export function ErrorDetailToJSONTyped(value?: ErrorDetail | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'count': value['count'],
        'errorCode': value['errorCode'],
        'firstSeen': ((value['firstSeen']).toISOString()),
        'lastSeen': ((value['lastSeen']).toISOString()),
        'percentage': value['percentage'],
    };
}

