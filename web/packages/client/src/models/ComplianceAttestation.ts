/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ComplianceAttestation
 */
export interface ComplianceAttestation {
    /**
     * 
     * @type {Date}
     * @memberof ComplianceAttestation
     */
    attestedAt: Date;
    /**
     * 
     * @type {string}
     * @memberof ComplianceAttestation
     */
    attestedBy: string;
    /**
     * 
     * @type {string}
     * @memberof ComplianceAttestation
     */
    comments?: string;
    /**
     * 
     * @type {string}
     * @memberof ComplianceAttestation
     */
    signature: string;
    /**
     * 
     * @type {Date}
     * @memberof ComplianceAttestation
     */
    validUntil: Date;
}

/**
 * Check if a given object implements the ComplianceAttestation interface.
 */
export function instanceOfComplianceAttestation(value: object): value is ComplianceAttestation {
    if (!('attestedAt' in value) || value['attestedAt'] === undefined) return false;
    if (!('attestedBy' in value) || value['attestedBy'] === undefined) return false;
    if (!('signature' in value) || value['signature'] === undefined) return false;
    if (!('validUntil' in value) || value['validUntil'] === undefined) return false;
    return true;
}

export function ComplianceAttestationFromJSON(json: any): ComplianceAttestation {
    return ComplianceAttestationFromJSONTyped(json, false);
}

export function ComplianceAttestationFromJSONTyped(json: any, ignoreDiscriminator: boolean): ComplianceAttestation {
    if (json == null) {
        return json;
    }
    return {
        
        'attestedAt': (new Date(json['attested_at'])),
        'attestedBy': json['attested_by'],
        'comments': json['comments'] == null ? undefined : json['comments'],
        'signature': json['signature'],
        'validUntil': (new Date(json['valid_until'])),
    };
}

export function ComplianceAttestationToJSON(json: any): ComplianceAttestation {
    return ComplianceAttestationToJSONTyped(json, false);
}

export function ComplianceAttestationToJSONTyped(value?: ComplianceAttestation | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'attested_at': ((value['attestedAt']).toISOString()),
        'attested_by': value['attestedBy'],
        'comments': value['comments'],
        'signature': value['signature'],
        'valid_until': ((value['validUntil']).toISOString()),
    };
}

