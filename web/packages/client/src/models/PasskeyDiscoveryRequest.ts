/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PasskeyDiscoveryRequest
 */
export interface PasskeyDiscoveryRequest {
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof PasskeyDiscoveryRequest
     */
    readonly $schema?: string;
    /**
     * Origin of the request
     * @type {string}
     * @memberof PasskeyDiscoveryRequest
     */
    origin: string;
    /**
     * Username to discover passkeys for
     * @type {string}
     * @memberof PasskeyDiscoveryRequest
     */
    username?: string;
}

/**
 * Check if a given object implements the PasskeyDiscoveryRequest interface.
 */
export function instanceOfPasskeyDiscoveryRequest(value: object): value is PasskeyDiscoveryRequest {
    if (!('origin' in value) || value['origin'] === undefined) return false;
    return true;
}

export function PasskeyDiscoveryRequestFromJSON(json: any): PasskeyDiscoveryRequest {
    return PasskeyDiscoveryRequestFromJSONTyped(json, false);
}

export function PasskeyDiscoveryRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PasskeyDiscoveryRequest {
    if (json == null) {
        return json;
    }
    return {
        
        '$schema': json['$schema'] == null ? undefined : json['$schema'],
        'origin': json['origin'],
        'username': json['username'] == null ? undefined : json['username'],
    };
}

export function PasskeyDiscoveryRequestToJSON(json: any): PasskeyDiscoveryRequest {
    return PasskeyDiscoveryRequestToJSONTyped(json, false);
}

export function PasskeyDiscoveryRequestToJSONTyped(value?: Omit<PasskeyDiscoveryRequest, '$schema'> | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'origin': value['origin'],
        'username': value['username'],
    };
}

