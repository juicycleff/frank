/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { APIUsageStatistics } from './APIUsageStatistics';
import {
    APIUsageStatisticsFromJSON,
    APIUsageStatisticsFromJSONTyped,
    APIUsageStatisticsToJSON,
    APIUsageStatisticsToJSONTyped,
} from './APIUsageStatistics';
import type { OrganizationStatistics } from './OrganizationStatistics';
import {
    OrganizationStatisticsFromJSON,
    OrganizationStatisticsFromJSONTyped,
    OrganizationStatisticsToJSON,
    OrganizationStatisticsToJSONTyped,
} from './OrganizationStatistics';
import type { UserStatistics } from './UserStatistics';
import {
    UserStatisticsFromJSON,
    UserStatisticsFromJSONTyped,
    UserStatisticsToJSON,
    UserStatisticsToJSONTyped,
} from './UserStatistics';
import type { PerformanceStatistics } from './PerformanceStatistics';
import {
    PerformanceStatisticsFromJSON,
    PerformanceStatisticsFromJSONTyped,
    PerformanceStatisticsToJSON,
    PerformanceStatisticsToJSONTyped,
} from './PerformanceStatistics';
import type { GrowthStatistics } from './GrowthStatistics';
import {
    GrowthStatisticsFromJSON,
    GrowthStatisticsFromJSONTyped,
    GrowthStatisticsToJSON,
    GrowthStatisticsToJSONTyped,
} from './GrowthStatistics';
import type { SecurityStatistics } from './SecurityStatistics';
import {
    SecurityStatisticsFromJSON,
    SecurityStatisticsFromJSONTyped,
    SecurityStatisticsToJSON,
    SecurityStatisticsToJSONTyped,
} from './SecurityStatistics';
import type { AuthenticationStatistics } from './AuthenticationStatistics';
import {
    AuthenticationStatisticsFromJSON,
    AuthenticationStatisticsFromJSONTyped,
    AuthenticationStatisticsToJSON,
    AuthenticationStatisticsToJSONTyped,
} from './AuthenticationStatistics';
import type { RegionalStats } from './RegionalStats';
import {
    RegionalStatsFromJSON,
    RegionalStatsFromJSONTyped,
    RegionalStatsToJSON,
    RegionalStatsToJSONTyped,
} from './RegionalStats';

/**
 * 
 * @export
 * @interface PlatformStatistics
 */
export interface PlatformStatistics {
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof PlatformStatistics
     */
    readonly $schema?: string;
    /**
     * API usage statistics
     * @type {APIUsageStatistics}
     * @memberof PlatformStatistics
     */
    apiUsage: APIUsageStatistics;
    /**
     * Authentication statistics
     * @type {AuthenticationStatistics}
     * @memberof PlatformStatistics
     */
    authentication: AuthenticationStatistics;
    /**
     * Growth statistics
     * @type {GrowthStatistics}
     * @memberof PlatformStatistics
     */
    growth: GrowthStatistics;
    /**
     * Organization statistics
     * @type {OrganizationStatistics}
     * @memberof PlatformStatistics
     */
    organizations: OrganizationStatistics;
    /**
     * Performance statistics
     * @type {PerformanceStatistics}
     * @memberof PlatformStatistics
     */
    performance: PerformanceStatistics;
    /**
     * Statistics period
     * @type {string}
     * @memberof PlatformStatistics
     */
    period: string;
    /**
     * Regional statistics
     * @type {{ [key: string]: RegionalStats; }}
     * @memberof PlatformStatistics
     */
    regional: { [key: string]: RegionalStats; };
    /**
     * Security statistics
     * @type {SecurityStatistics}
     * @memberof PlatformStatistics
     */
    security: SecurityStatistics;
    /**
     * Statistics generation timestamp
     * @type {Date}
     * @memberof PlatformStatistics
     */
    timestamp: Date;
    /**
     * User statistics
     * @type {UserStatistics}
     * @memberof PlatformStatistics
     */
    users: UserStatistics;
}

/**
 * Check if a given object implements the PlatformStatistics interface.
 */
export function instanceOfPlatformStatistics(value: object): value is PlatformStatistics {
    if (!('apiUsage' in value) || value['apiUsage'] === undefined) return false;
    if (!('authentication' in value) || value['authentication'] === undefined) return false;
    if (!('growth' in value) || value['growth'] === undefined) return false;
    if (!('organizations' in value) || value['organizations'] === undefined) return false;
    if (!('performance' in value) || value['performance'] === undefined) return false;
    if (!('period' in value) || value['period'] === undefined) return false;
    if (!('regional' in value) || value['regional'] === undefined) return false;
    if (!('security' in value) || value['security'] === undefined) return false;
    if (!('timestamp' in value) || value['timestamp'] === undefined) return false;
    if (!('users' in value) || value['users'] === undefined) return false;
    return true;
}

export function PlatformStatisticsFromJSON(json: any): PlatformStatistics {
    return PlatformStatisticsFromJSONTyped(json, false);
}

export function PlatformStatisticsFromJSONTyped(json: any, ignoreDiscriminator: boolean): PlatformStatistics {
    if (json == null) {
        return json;
    }
    return {
        
        '$schema': json['$schema'] == null ? undefined : json['$schema'],
        'apiUsage': APIUsageStatisticsFromJSON(json['apiUsage']),
        'authentication': AuthenticationStatisticsFromJSON(json['authentication']),
        'growth': GrowthStatisticsFromJSON(json['growth']),
        'organizations': OrganizationStatisticsFromJSON(json['organizations']),
        'performance': PerformanceStatisticsFromJSON(json['performance']),
        'period': json['period'],
        'regional': (mapValues(json['regional'], RegionalStatsFromJSON)),
        'security': SecurityStatisticsFromJSON(json['security']),
        'timestamp': (new Date(json['timestamp'])),
        'users': UserStatisticsFromJSON(json['users']),
    };
}

export function PlatformStatisticsToJSON(json: any): PlatformStatistics {
    return PlatformStatisticsToJSONTyped(json, false);
}

export function PlatformStatisticsToJSONTyped(value?: Omit<PlatformStatistics, '$schema'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'apiUsage': APIUsageStatisticsToJSON(value['apiUsage']),
        'authentication': AuthenticationStatisticsToJSON(value['authentication']),
        'growth': GrowthStatisticsToJSON(value['growth']),
        'organizations': OrganizationStatisticsToJSON(value['organizations']),
        'performance': PerformanceStatisticsToJSON(value['performance']),
        'period': value['period'],
        'regional': (mapValues(value['regional'], RegionalStatsToJSON)),
        'security': SecurityStatisticsToJSON(value['security']),
        'timestamp': ((value['timestamp']).toISOString()),
        'users': UserStatisticsToJSON(value['users']),
    };
}

