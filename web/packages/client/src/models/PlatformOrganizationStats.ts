/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { OrgStats } from './OrgStats';
import {
    OrgStatsFromJSON,
    OrgStatsFromJSONTyped,
    OrgStatsToJSON,
    OrgStatsToJSONTyped,
} from './OrgStats';
import type { OrgComparisons } from './OrgComparisons';
import {
    OrgComparisonsFromJSON,
    OrgComparisonsFromJSONTyped,
    OrgComparisonsToJSON,
    OrgComparisonsToJSONTyped,
} from './OrgComparisons';
import type { OrgTrends } from './OrgTrends';
import {
    OrgTrendsFromJSON,
    OrgTrendsFromJSONTyped,
    OrgTrendsToJSON,
    OrgTrendsToJSONTyped,
} from './OrgTrends';

/**
 * 
 * @export
 * @interface PlatformOrganizationStats
 */
export interface PlatformOrganizationStats {
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof PlatformOrganizationStats
     */
    readonly $schema?: string;
    /**
     * 
     * @type {OrgComparisons}
     * @memberof PlatformOrganizationStats
     */
    comparisons?: OrgComparisons;
    /**
     * 
     * @type {string}
     * @memberof PlatformOrganizationStats
     */
    organizationId: string;
    /**
     * 
     * @type {string}
     * @memberof PlatformOrganizationStats
     */
    period: string;
    /**
     * 
     * @type {OrgStats}
     * @memberof PlatformOrganizationStats
     */
    stats: OrgStats;
    /**
     * 
     * @type {OrgTrends}
     * @memberof PlatformOrganizationStats
     */
    trends?: OrgTrends;
}

/**
 * Check if a given object implements the PlatformOrganizationStats interface.
 */
export function instanceOfPlatformOrganizationStats(value: object): value is PlatformOrganizationStats {
    if (!('organizationId' in value) || value['organizationId'] === undefined) return false;
    if (!('period' in value) || value['period'] === undefined) return false;
    if (!('stats' in value) || value['stats'] === undefined) return false;
    return true;
}

export function PlatformOrganizationStatsFromJSON(json: any): PlatformOrganizationStats {
    return PlatformOrganizationStatsFromJSONTyped(json, false);
}

export function PlatformOrganizationStatsFromJSONTyped(json: any, ignoreDiscriminator: boolean): PlatformOrganizationStats {
    if (json == null) {
        return json;
    }
    return {
        
        '$schema': json['$schema'] == null ? undefined : json['$schema'],
        'comparisons': json['comparisons'] == null ? undefined : OrgComparisonsFromJSON(json['comparisons']),
        'organizationId': json['organizationId'],
        'period': json['period'],
        'stats': OrgStatsFromJSON(json['stats']),
        'trends': json['trends'] == null ? undefined : OrgTrendsFromJSON(json['trends']),
    };
}

export function PlatformOrganizationStatsToJSON(json: any): PlatformOrganizationStats {
    return PlatformOrganizationStatsToJSONTyped(json, false);
}

export function PlatformOrganizationStatsToJSONTyped(value?: Omit<PlatformOrganizationStats, '$schema'> | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'comparisons': OrgComparisonsToJSON(value['comparisons']),
        'organizationId': value['organizationId'],
        'period': value['period'],
        'stats': OrgStatsToJSON(value['stats']),
        'trends': OrgTrendsToJSON(value['trends']),
    };
}

