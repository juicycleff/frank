/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Pagination
 */
export interface Pagination {
    /**
     * 
     * @type {number}
     * @memberof Pagination
     */
    currentPage: number;
    /**
     * 
     * @type {string}
     * @memberof Pagination
     */
    endCursor: string | null;
    /**
     * Whether there are more results
     * @type {boolean}
     * @memberof Pagination
     */
    hasNextPage: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Pagination
     */
    hasPreviousPage: boolean;
    /**
     * 
     * @type {number}
     * @memberof Pagination
     */
    pageSize: number;
    /**
     * 
     * @type {string}
     * @memberof Pagination
     */
    startCursor: string | null;
    /**
     * Total number of documents
     * @type {number}
     * @memberof Pagination
     */
    totalCount: number;
    /**
     * 
     * @type {number}
     * @memberof Pagination
     */
    totalPages: number;
}

/**
 * Check if a given object implements the Pagination interface.
 */
export function instanceOfPagination(value: object): value is Pagination {
    if (!('currentPage' in value) || value['currentPage'] === undefined) return false;
    if (!('endCursor' in value) || value['endCursor'] === undefined) return false;
    if (!('hasNextPage' in value) || value['hasNextPage'] === undefined) return false;
    if (!('hasPreviousPage' in value) || value['hasPreviousPage'] === undefined) return false;
    if (!('pageSize' in value) || value['pageSize'] === undefined) return false;
    if (!('startCursor' in value) || value['startCursor'] === undefined) return false;
    if (!('totalCount' in value) || value['totalCount'] === undefined) return false;
    if (!('totalPages' in value) || value['totalPages'] === undefined) return false;
    return true;
}

export function PaginationFromJSON(json: any): Pagination {
    return PaginationFromJSONTyped(json, false);
}

export function PaginationFromJSONTyped(json: any, ignoreDiscriminator: boolean): Pagination {
    if (json == null) {
        return json;
    }
    return {
        
        'currentPage': json['currentPage'],
        'endCursor': json['endCursor'],
        'hasNextPage': json['hasNextPage'],
        'hasPreviousPage': json['hasPreviousPage'],
        'pageSize': json['pageSize'],
        'startCursor': json['startCursor'],
        'totalCount': json['totalCount'],
        'totalPages': json['totalPages'],
    };
}

export function PaginationToJSON(json: any): Pagination {
    return PaginationToJSONTyped(json, false);
}

export function PaginationToJSONTyped(value?: Pagination | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'currentPage': value['currentPage'],
        'endCursor': value['endCursor'],
        'hasNextPage': value['hasNextPage'],
        'hasPreviousPage': value['hasPreviousPage'],
        'pageSize': value['pageSize'],
        'startCursor': value['startCursor'],
        'totalCount': value['totalCount'],
        'totalPages': value['totalPages'],
    };
}

