/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TrainingEvent } from './TrainingEvent';
import {
    TrainingEventFromJSON,
    TrainingEventFromJSONTyped,
    TrainingEventToJSON,
    TrainingEventToJSONTyped,
} from './TrainingEvent';

/**
 * 
 * @export
 * @interface HIPAATrainingSummary
 */
export interface HIPAATrainingSummary {
    /**
     * 
     * @type {number}
     * @memberof HIPAATrainingSummary
     */
    complianceRate: number;
    /**
     * 
     * @type {Date}
     * @memberof HIPAATrainingSummary
     */
    lastTrainingUpdate: Date;
    /**
     * 
     * @type {number}
     * @memberof HIPAATrainingSummary
     */
    totalEmployees: number;
    /**
     * 
     * @type {number}
     * @memberof HIPAATrainingSummary
     */
    trainedEmployees: number;
    /**
     * 
     * @type {Array<TrainingEvent>}
     * @memberof HIPAATrainingSummary
     */
    upcomingTraining: Array<TrainingEvent> | null;
}

/**
 * Check if a given object implements the HIPAATrainingSummary interface.
 */
export function instanceOfHIPAATrainingSummary(value: object): value is HIPAATrainingSummary {
    if (!('complianceRate' in value) || value['complianceRate'] === undefined) return false;
    if (!('lastTrainingUpdate' in value) || value['lastTrainingUpdate'] === undefined) return false;
    if (!('totalEmployees' in value) || value['totalEmployees'] === undefined) return false;
    if (!('trainedEmployees' in value) || value['trainedEmployees'] === undefined) return false;
    if (!('upcomingTraining' in value) || value['upcomingTraining'] === undefined) return false;
    return true;
}

export function HIPAATrainingSummaryFromJSON(json: any): HIPAATrainingSummary {
    return HIPAATrainingSummaryFromJSONTyped(json, false);
}

export function HIPAATrainingSummaryFromJSONTyped(json: any, ignoreDiscriminator: boolean): HIPAATrainingSummary {
    if (json == null) {
        return json;
    }
    return {
        
        'complianceRate': json['compliance_rate'],
        'lastTrainingUpdate': (new Date(json['last_training_update'])),
        'totalEmployees': json['total_employees'],
        'trainedEmployees': json['trained_employees'],
        'upcomingTraining': (json['upcoming_training'] == null ? null : (json['upcoming_training'] as Array<any>).map(TrainingEventFromJSON)),
    };
}

export function HIPAATrainingSummaryToJSON(json: any): HIPAATrainingSummary {
    return HIPAATrainingSummaryToJSONTyped(json, false);
}

export function HIPAATrainingSummaryToJSONTyped(value?: HIPAATrainingSummary | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'compliance_rate': value['complianceRate'],
        'last_training_update': ((value['lastTrainingUpdate']).toISOString()),
        'total_employees': value['totalEmployees'],
        'trained_employees': value['trainedEmployees'],
        'upcoming_training': (value['upcomingTraining'] == null ? null : (value['upcomingTraining'] as Array<any>).map(TrainingEventToJSON)),
    };
}

