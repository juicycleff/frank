/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { FeatureVariation } from './FeatureVariation';
import {
    FeatureVariationFromJSON,
    FeatureVariationFromJSONTyped,
    FeatureVariationToJSON,
    FeatureVariationToJSONTyped,
} from './FeatureVariation';
import type { FeatureRule } from './FeatureRule';
import {
    FeatureRuleFromJSON,
    FeatureRuleFromJSONTyped,
    FeatureRuleToJSON,
    FeatureRuleToJSONTyped,
} from './FeatureRule';
import type { FeatureRollout } from './FeatureRollout';
import {
    FeatureRolloutFromJSON,
    FeatureRolloutFromJSONTyped,
    FeatureRolloutToJSON,
    FeatureRolloutToJSONTyped,
} from './FeatureRollout';

/**
 * 
 * @export
 * @interface UpdateFeatureFlagRequest
 */
export interface UpdateFeatureFlagRequest {
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof UpdateFeatureFlagRequest
     */
    readonly $schema?: string;
    /**
     * 
     * @type {any}
     * @memberof UpdateFeatureFlagRequest
     */
    defaultValue?: any | null;
    /**
     * 
     * @type {string}
     * @memberof UpdateFeatureFlagRequest
     */
    description?: string;
    /**
     * 
     * @type {boolean}
     * @memberof UpdateFeatureFlagRequest
     */
    enabled?: boolean;
    /**
     * 
     * @type {string}
     * @memberof UpdateFeatureFlagRequest
     */
    name?: string;
    /**
     * 
     * @type {FeatureRollout}
     * @memberof UpdateFeatureFlagRequest
     */
    rollout?: FeatureRollout;
    /**
     * 
     * @type {Array<FeatureRule>}
     * @memberof UpdateFeatureFlagRequest
     */
    rules?: Array<FeatureRule> | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof UpdateFeatureFlagRequest
     */
    tags?: Array<string> | null;
    /**
     * 
     * @type {Array<FeatureVariation>}
     * @memberof UpdateFeatureFlagRequest
     */
    variations?: Array<FeatureVariation> | null;
}

/**
 * Check if a given object implements the UpdateFeatureFlagRequest interface.
 */
export function instanceOfUpdateFeatureFlagRequest(value: object): value is UpdateFeatureFlagRequest {
    return true;
}

export function UpdateFeatureFlagRequestFromJSON(json: any): UpdateFeatureFlagRequest {
    return UpdateFeatureFlagRequestFromJSONTyped(json, false);
}

export function UpdateFeatureFlagRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateFeatureFlagRequest {
    if (json == null) {
        return json;
    }
    return {
        
        '$schema': json['$schema'] == null ? undefined : json['$schema'],
        'defaultValue': json['default_value'] == null ? undefined : json['default_value'],
        'description': json['description'] == null ? undefined : json['description'],
        'enabled': json['enabled'] == null ? undefined : json['enabled'],
        'name': json['name'] == null ? undefined : json['name'],
        'rollout': json['rollout'] == null ? undefined : FeatureRolloutFromJSON(json['rollout']),
        'rules': json['rules'] == null ? undefined : ((json['rules'] as Array<any>).map(FeatureRuleFromJSON)),
        'tags': json['tags'] == null ? undefined : json['tags'],
        'variations': json['variations'] == null ? undefined : ((json['variations'] as Array<any>).map(FeatureVariationFromJSON)),
    };
}

export function UpdateFeatureFlagRequestToJSON(json: any): UpdateFeatureFlagRequest {
    return UpdateFeatureFlagRequestToJSONTyped(json, false);
}

export function UpdateFeatureFlagRequestToJSONTyped(value?: Omit<UpdateFeatureFlagRequest, '$schema'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'default_value': value['defaultValue'],
        'description': value['description'],
        'enabled': value['enabled'],
        'name': value['name'],
        'rollout': FeatureRolloutToJSON(value['rollout']),
        'rules': value['rules'] == null ? undefined : ((value['rules'] as Array<any>).map(FeatureRuleToJSON)),
        'tags': value['tags'],
        'variations': value['variations'] == null ? undefined : ((value['variations'] as Array<any>).map(FeatureVariationToJSON)),
    };
}

