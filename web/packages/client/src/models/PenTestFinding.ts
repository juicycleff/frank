/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PenTestFinding
 */
export interface PenTestFinding {
    /**
     * 
     * @type {string}
     * @memberof PenTestFinding
     */
    description: string;
    /**
     * 
     * @type {string}
     * @memberof PenTestFinding
     */
    impact: string;
    /**
     * 
     * @type {string}
     * @memberof PenTestFinding
     */
    remediation: string;
    /**
     * 
     * @type {string}
     * @memberof PenTestFinding
     */
    severity: string;
    /**
     * 
     * @type {string}
     * @memberof PenTestFinding
     */
    status: string;
    /**
     * 
     * @type {string}
     * @memberof PenTestFinding
     */
    title: string;
}

/**
 * Check if a given object implements the PenTestFinding interface.
 */
export function instanceOfPenTestFinding(value: object): value is PenTestFinding {
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('impact' in value) || value['impact'] === undefined) return false;
    if (!('remediation' in value) || value['remediation'] === undefined) return false;
    if (!('severity' in value) || value['severity'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('title' in value) || value['title'] === undefined) return false;
    return true;
}

export function PenTestFindingFromJSON(json: any): PenTestFinding {
    return PenTestFindingFromJSONTyped(json, false);
}

export function PenTestFindingFromJSONTyped(json: any, ignoreDiscriminator: boolean): PenTestFinding {
    if (json == null) {
        return json;
    }
    return {
        
        'description': json['description'],
        'impact': json['impact'],
        'remediation': json['remediation'],
        'severity': json['severity'],
        'status': json['status'],
        'title': json['title'],
    };
}

export function PenTestFindingToJSON(json: any): PenTestFinding {
    return PenTestFindingToJSONTyped(json, false);
}

export function PenTestFindingToJSONTyped(value?: PenTestFinding | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'description': value['description'],
        'impact': value['impact'],
        'remediation': value['remediation'],
        'severity': value['severity'],
        'status': value['status'],
        'title': value['title'],
    };
}

