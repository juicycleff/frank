/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface OrgOwner
 */
export interface OrgOwner {
    /**
     * Owner email
     * @type {string}
     * @memberof OrgOwner
     */
    email: string;
    /**
     * Owner user ID
     * @type {string}
     * @memberof OrgOwner
     */
    id: string;
    /**
     * Owner's last login
     * @type {Date}
     * @memberof OrgOwner
     */
    lastLogin: Date;
    /**
     * Owner name
     * @type {string}
     * @memberof OrgOwner
     */
    name: string;
}

/**
 * Check if a given object implements the OrgOwner interface.
 */
export function instanceOfOrgOwner(value: object): value is OrgOwner {
    if (!('email' in value) || value['email'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('lastLogin' in value) || value['lastLogin'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    return true;
}

export function OrgOwnerFromJSON(json: any): OrgOwner {
    return OrgOwnerFromJSONTyped(json, false);
}

export function OrgOwnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrgOwner {
    if (json == null) {
        return json;
    }
    return {
        
        'email': json['email'],
        'id': json['id'],
        'lastLogin': (new Date(json['lastLogin'])),
        'name': json['name'],
    };
}

export function OrgOwnerToJSON(json: any): OrgOwner {
    return OrgOwnerToJSONTyped(json, false);
}

export function OrgOwnerToJSONTyped(value?: OrgOwner | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'email': value['email'],
        'id': value['id'],
        'lastLogin': ((value['lastLogin']).toISOString()),
        'name': value['name'],
    };
}

