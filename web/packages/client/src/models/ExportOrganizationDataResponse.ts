/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ExportOrganizationDataResponse
 */
export interface ExportOrganizationDataResponse {
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof ExportOrganizationDataResponse
     */
    readonly $schema?: string;
    /**
     * 
     * @type {string}
     * @memberof ExportOrganizationDataResponse
     */
    exportId: string;
    /**
     * 
     * @type {string}
     * @memberof ExportOrganizationDataResponse
     */
    message: string;
    /**
     * 
     * @type {string}
     * @memberof ExportOrganizationDataResponse
     */
    status: string;
}

/**
 * Check if a given object implements the ExportOrganizationDataResponse interface.
 */
export function instanceOfExportOrganizationDataResponse(value: object): value is ExportOrganizationDataResponse {
    if (!('exportId' in value) || value['exportId'] === undefined) return false;
    if (!('message' in value) || value['message'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    return true;
}

export function ExportOrganizationDataResponseFromJSON(json: any): ExportOrganizationDataResponse {
    return ExportOrganizationDataResponseFromJSONTyped(json, false);
}

export function ExportOrganizationDataResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ExportOrganizationDataResponse {
    if (json == null) {
        return json;
    }
    return {
        
        '$schema': json['$schema'] == null ? undefined : json['$schema'],
        'exportId': json['export_id'],
        'message': json['message'],
        'status': json['status'],
    };
}

export function ExportOrganizationDataResponseToJSON(json: any): ExportOrganizationDataResponse {
    return ExportOrganizationDataResponseToJSONTyped(json, false);
}

export function ExportOrganizationDataResponseToJSONTyped(value?: Omit<ExportOrganizationDataResponse, '$schema'> | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'export_id': value['exportId'],
        'message': value['message'],
        'status': value['status'],
    };
}

