/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SSOLoginResponse
 */
export interface SSOLoginResponse {
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof SSOLoginResponse
     */
    readonly $schema?: string;
    /**
     * Authentication URL
     * @type {string}
     * @memberof SSOLoginResponse
     */
    authUrl: string;
    /**
     * Auth URL expiration
     * @type {Date}
     * @memberof SSOLoginResponse
     */
    expiresAt: Date;
    /**
     * OAuth state parameter
     * @type {string}
     * @memberof SSOLoginResponse
     */
    state: string;
}

/**
 * Check if a given object implements the SSOLoginResponse interface.
 */
export function instanceOfSSOLoginResponse(value: object): value is SSOLoginResponse {
    if (!('authUrl' in value) || value['authUrl'] === undefined) return false;
    if (!('expiresAt' in value) || value['expiresAt'] === undefined) return false;
    if (!('state' in value) || value['state'] === undefined) return false;
    return true;
}

export function SSOLoginResponseFromJSON(json: any): SSOLoginResponse {
    return SSOLoginResponseFromJSONTyped(json, false);
}

export function SSOLoginResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): SSOLoginResponse {
    if (json == null) {
        return json;
    }
    return {
        
        '$schema': json['$schema'] == null ? undefined : json['$schema'],
        'authUrl': json['authUrl'],
        'expiresAt': (new Date(json['expiresAt'])),
        'state': json['state'],
    };
}

export function SSOLoginResponseToJSON(json: any): SSOLoginResponse {
    return SSOLoginResponseToJSONTyped(json, false);
}

export function SSOLoginResponseToJSONTyped(value?: Omit<SSOLoginResponse, '$schema'> | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'authUrl': value['authUrl'],
        'expiresAt': ((value['expiresAt']).toISOString()),
        'state': value['state'],
    };
}

