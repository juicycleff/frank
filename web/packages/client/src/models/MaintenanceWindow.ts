/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface MaintenanceWindow
 */
export interface MaintenanceWindow {
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof MaintenanceWindow
     */
    readonly $schema?: string;
    /**
     * 
     * @type {Date}
     * @memberof MaintenanceWindow
     */
    actualEndTime?: Date;
    /**
     * 
     * @type {Date}
     * @memberof MaintenanceWindow
     */
    actualStartTime?: Date;
    /**
     * 
     * @type {Array<string>}
     * @memberof MaintenanceWindow
     */
    affectedServices: Array<string> | null;
    /**
     * 
     * @type {Date}
     * @memberof MaintenanceWindow
     */
    createdAt: Date;
    /**
     * 
     * @type {string}
     * @memberof MaintenanceWindow
     */
    createdBy: string;
    /**
     * 
     * @type {string}
     * @memberof MaintenanceWindow
     */
    description: string;
    /**
     * 
     * @type {Date}
     * @memberof MaintenanceWindow
     */
    endTime: Date;
    /**
     * 
     * @type {string}
     * @memberof MaintenanceWindow
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof MaintenanceWindow
     */
    impact: string;
    /**
     * 
     * @type {boolean}
     * @memberof MaintenanceWindow
     */
    notificationSent: boolean;
    /**
     * 
     * @type {number}
     * @memberof MaintenanceWindow
     */
    notifiedUsers: number;
    /**
     * 
     * @type {Date}
     * @memberof MaintenanceWindow
     */
    startTime: Date;
    /**
     * 
     * @type {string}
     * @memberof MaintenanceWindow
     */
    status: string;
    /**
     * 
     * @type {string}
     * @memberof MaintenanceWindow
     */
    title: string;
    /**
     * 
     * @type {Date}
     * @memberof MaintenanceWindow
     */
    updatedAt: Date;
    /**
     * 
     * @type {string}
     * @memberof MaintenanceWindow
     */
    updatedBy?: string;
}

/**
 * Check if a given object implements the MaintenanceWindow interface.
 */
export function instanceOfMaintenanceWindow(value: object): value is MaintenanceWindow {
    if (!('affectedServices' in value) || value['affectedServices'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('createdBy' in value) || value['createdBy'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('endTime' in value) || value['endTime'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('impact' in value) || value['impact'] === undefined) return false;
    if (!('notificationSent' in value) || value['notificationSent'] === undefined) return false;
    if (!('notifiedUsers' in value) || value['notifiedUsers'] === undefined) return false;
    if (!('startTime' in value) || value['startTime'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    return true;
}

export function MaintenanceWindowFromJSON(json: any): MaintenanceWindow {
    return MaintenanceWindowFromJSONTyped(json, false);
}

export function MaintenanceWindowFromJSONTyped(json: any, ignoreDiscriminator: boolean): MaintenanceWindow {
    if (json == null) {
        return json;
    }
    return {
        
        '$schema': json['$schema'] == null ? undefined : json['$schema'],
        'actualEndTime': json['actual_end_time'] == null ? undefined : (new Date(json['actual_end_time'])),
        'actualStartTime': json['actual_start_time'] == null ? undefined : (new Date(json['actual_start_time'])),
        'affectedServices': json['affected_services'] == null ? null : json['affected_services'],
        'createdAt': (new Date(json['createdAt'])),
        'createdBy': json['created_by'],
        'description': json['description'],
        'endTime': (new Date(json['end_time'])),
        'id': json['id'],
        'impact': json['impact'],
        'notificationSent': json['notification_sent'],
        'notifiedUsers': json['notified_users'],
        'startTime': (new Date(json['start_time'])),
        'status': json['status'],
        'title': json['title'],
        'updatedAt': (new Date(json['updatedAt'])),
        'updatedBy': json['updated_by'] == null ? undefined : json['updated_by'],
    };
}

export function MaintenanceWindowToJSON(json: any): MaintenanceWindow {
    return MaintenanceWindowToJSONTyped(json, false);
}

export function MaintenanceWindowToJSONTyped(value?: Omit<MaintenanceWindow, '$schema'> | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'actual_end_time': value['actualEndTime'] == null ? undefined : ((value['actualEndTime']).toISOString()),
        'actual_start_time': value['actualStartTime'] == null ? undefined : ((value['actualStartTime']).toISOString()),
        'affected_services': value['affectedServices'],
        'createdAt': ((value['createdAt']).toISOString()),
        'created_by': value['createdBy'],
        'description': value['description'],
        'end_time': ((value['endTime']).toISOString()),
        'id': value['id'],
        'impact': value['impact'],
        'notification_sent': value['notificationSent'],
        'notified_users': value['notifiedUsers'],
        'start_time': ((value['startTime']).toISOString()),
        'status': value['status'],
        'title': value['title'],
        'updatedAt': ((value['updatedAt']).toISOString()),
        'updated_by': value['updatedBy'],
    };
}

