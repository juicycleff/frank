/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DatabaseMetrics
 */
export interface DatabaseMetrics {
    /**
     * 
     * @type {number}
     * @memberof DatabaseMetrics
     */
    activeQueries: number;
    /**
     * 
     * @type {number}
     * @memberof DatabaseMetrics
     */
    avgQueryTimeMs: number;
    /**
     * 
     * @type {number}
     * @memberof DatabaseMetrics
     */
    connectionCount: number;
    /**
     * 
     * @type {number}
     * @memberof DatabaseMetrics
     */
    deadlockCount: number;
    /**
     * 
     * @type {number}
     * @memberof DatabaseMetrics
     */
    replicationLagMs: number;
    /**
     * 
     * @type {number}
     * @memberof DatabaseMetrics
     */
    slowQueries: number;
}

/**
 * Check if a given object implements the DatabaseMetrics interface.
 */
export function instanceOfDatabaseMetrics(value: object): value is DatabaseMetrics {
    if (!('activeQueries' in value) || value['activeQueries'] === undefined) return false;
    if (!('avgQueryTimeMs' in value) || value['avgQueryTimeMs'] === undefined) return false;
    if (!('connectionCount' in value) || value['connectionCount'] === undefined) return false;
    if (!('deadlockCount' in value) || value['deadlockCount'] === undefined) return false;
    if (!('replicationLagMs' in value) || value['replicationLagMs'] === undefined) return false;
    if (!('slowQueries' in value) || value['slowQueries'] === undefined) return false;
    return true;
}

export function DatabaseMetricsFromJSON(json: any): DatabaseMetrics {
    return DatabaseMetricsFromJSONTyped(json, false);
}

export function DatabaseMetricsFromJSONTyped(json: any, ignoreDiscriminator: boolean): DatabaseMetrics {
    if (json == null) {
        return json;
    }
    return {
        
        'activeQueries': json['active_queries'],
        'avgQueryTimeMs': json['avg_query_time_ms'],
        'connectionCount': json['connection_count'],
        'deadlockCount': json['deadlock_count'],
        'replicationLagMs': json['replication_lag_ms'],
        'slowQueries': json['slow_queries'],
    };
}

export function DatabaseMetricsToJSON(json: any): DatabaseMetrics {
    return DatabaseMetricsToJSONTyped(json, false);
}

export function DatabaseMetricsToJSONTyped(value?: DatabaseMetrics | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'active_queries': value['activeQueries'],
        'avg_query_time_ms': value['avgQueryTimeMs'],
        'connection_count': value['connectionCount'],
        'deadlock_count': value['deadlockCount'],
        'replication_lag_ms': value['replicationLagMs'],
        'slow_queries': value['slowQueries'],
    };
}

