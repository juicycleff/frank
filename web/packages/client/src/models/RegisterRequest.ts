/* tslint:disable */
/* eslint-disable */
/**
 * My Project
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface RegisterRequest
 */
export interface RegisterRequest {
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof RegisterRequest
     */
    readonly $schema?: string;
    /**
     * Whether user accepts terms and conditions
     * @type {boolean}
     * @memberof RegisterRequest
     */
    acceptTerms: boolean;
    /**
     * Custom user attributes
     * @type {{ [key: string]: string; }}
     * @memberof RegisterRequest
     */
    customAttributes?: { [key: string]: string; };
    /**
     * User email address
     * @type {string}
     * @memberof RegisterRequest
     */
    email: string;
    /**
     * First name
     * @type {string}
     * @memberof RegisterRequest
     */
    firstName?: string;
    /**
     * Client IP address
     * @type {string}
     * @memberof RegisterRequest
     */
    ipAddress?: string;
    /**
     * Last name
     * @type {string}
     * @memberof RegisterRequest
     */
    lastName?: string;
    /**
     * User locale
     * @type {string}
     * @memberof RegisterRequest
     */
    locale: string;
    /**
     * Whether user consents to marketing communications
     * @type {boolean}
     * @memberof RegisterRequest
     */
    marketingConsent: boolean;
    /**
     * Organization ID (for end users)
     * @type {string}
     * @memberof RegisterRequest
     */
    organizationId?: string;
    /**
     * User password (optional for passwordless)
     * @type {string}
     * @memberof RegisterRequest
     */
    password?: string;
    /**
     * Phone number
     * @type {string}
     * @memberof RegisterRequest
     */
    phoneNumber?: string;
    /**
     * User timezone
     * @type {string}
     * @memberof RegisterRequest
     */
    timezone?: string;
    /**
     * Client user agent
     * @type {string}
     * @memberof RegisterRequest
     */
    userAgent?: string;
    /**
     * User type (internal, external, end_user)
     * @type {string}
     * @memberof RegisterRequest
     */
    userType: string;
    /**
     * Desired username
     * @type {string}
     * @memberof RegisterRequest
     */
    username?: string;
}

export function RegisterRequestFromJSON(json: any): RegisterRequest {
    return RegisterRequestFromJSONTyped(json, false);
}

export function RegisterRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): RegisterRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        '$schema': !exists(json, '$schema') ? undefined : json['$schema'],
        'acceptTerms': json['acceptTerms'],
        'customAttributes': !exists(json, 'customAttributes') ? undefined : json['customAttributes'],
        'email': json['email'],
        'firstName': !exists(json, 'firstName') ? undefined : json['firstName'],
        'ipAddress': !exists(json, 'ipAddress') ? undefined : json['ipAddress'],
        'lastName': !exists(json, 'lastName') ? undefined : json['lastName'],
        'locale': json['locale'],
        'marketingConsent': json['marketingConsent'],
        'organizationId': !exists(json, 'organizationId') ? undefined : json['organizationId'],
        'password': !exists(json, 'password') ? undefined : json['password'],
        'phoneNumber': !exists(json, 'phoneNumber') ? undefined : json['phoneNumber'],
        'timezone': !exists(json, 'timezone') ? undefined : json['timezone'],
        'userAgent': !exists(json, 'userAgent') ? undefined : json['userAgent'],
        'userType': json['userType'],
        'username': !exists(json, 'username') ? undefined : json['username'],
    };
}

export function RegisterRequestToJSON(value?: RegisterRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'acceptTerms': value.acceptTerms,
        'customAttributes': value.customAttributes,
        'email': value.email,
        'firstName': value.firstName,
        'ipAddress': value.ipAddress,
        'lastName': value.lastName,
        'locale': value.locale,
        'marketingConsent': value.marketingConsent,
        'organizationId': value.organizationId,
        'password': value.password,
        'phoneNumber': value.phoneNumber,
        'timezone': value.timezone,
        'userAgent': value.userAgent,
        'userType': value.userType,
        'username': value.username,
    };
}


