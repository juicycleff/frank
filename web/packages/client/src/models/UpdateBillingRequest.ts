/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Address } from './Address';
import {
    AddressFromJSON,
    AddressFromJSONTyped,
    AddressToJSON,
    AddressToJSONTyped,
} from './Address';

/**
 * 
 * @export
 * @interface UpdateBillingRequest
 */
export interface UpdateBillingRequest {
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof UpdateBillingRequest
     */
    readonly $schema?: string;
    /**
     * Billing address
     * @type {Address}
     * @memberof UpdateBillingRequest
     */
    billingAddress?: Address;
    /**
     * Billing email
     * @type {string}
     * @memberof UpdateBillingRequest
     */
    billingEmail?: string;
    /**
     * New payment method ID
     * @type {string}
     * @memberof UpdateBillingRequest
     */
    paymentMethodId?: string;
    /**
     * New plan
     * @type {string}
     * @memberof UpdateBillingRequest
     */
    plan?: string;
    /**
     * Tax ID
     * @type {string}
     * @memberof UpdateBillingRequest
     */
    taxId?: string;
}

/**
 * Check if a given object implements the UpdateBillingRequest interface.
 */
export function instanceOfUpdateBillingRequest(value: object): value is UpdateBillingRequest {
    return true;
}

export function UpdateBillingRequestFromJSON(json: any): UpdateBillingRequest {
    return UpdateBillingRequestFromJSONTyped(json, false);
}

export function UpdateBillingRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateBillingRequest {
    if (json == null) {
        return json;
    }
    return {
        
        '$schema': json['$schema'] == null ? undefined : json['$schema'],
        'billingAddress': json['billingAddress'] == null ? undefined : AddressFromJSON(json['billingAddress']),
        'billingEmail': json['billingEmail'] == null ? undefined : json['billingEmail'],
        'paymentMethodId': json['paymentMethodId'] == null ? undefined : json['paymentMethodId'],
        'plan': json['plan'] == null ? undefined : json['plan'],
        'taxId': json['taxId'] == null ? undefined : json['taxId'],
    };
}

export function UpdateBillingRequestToJSON(json: any): UpdateBillingRequest {
    return UpdateBillingRequestToJSONTyped(json, false);
}

export function UpdateBillingRequestToJSONTyped(value?: Omit<UpdateBillingRequest, '$schema'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'billingAddress': AddressToJSON(value['billingAddress']),
        'billingEmail': value['billingEmail'],
        'paymentMethodId': value['paymentMethodId'],
        'plan': value['plan'],
        'taxId': value['taxId'],
    };
}

