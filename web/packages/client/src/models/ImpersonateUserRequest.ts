/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ImpersonateUserRequest
 */
export interface ImpersonateUserRequest {
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof ImpersonateUserRequest
     */
    readonly $schema?: string;
    /**
     * 
     * @type {string}
     * @memberof ImpersonateUserRequest
     */
    adminUserId: string;
    /**
     * 
     * @type {number}
     * @memberof ImpersonateUserRequest
     */
    durationMinutes?: number;
    /**
     * 
     * @type {string}
     * @memberof ImpersonateUserRequest
     */
    reason: string;
}

/**
 * Check if a given object implements the ImpersonateUserRequest interface.
 */
export function instanceOfImpersonateUserRequest(value: object): value is ImpersonateUserRequest {
    if (!('adminUserId' in value) || value['adminUserId'] === undefined) return false;
    if (!('reason' in value) || value['reason'] === undefined) return false;
    return true;
}

export function ImpersonateUserRequestFromJSON(json: any): ImpersonateUserRequest {
    return ImpersonateUserRequestFromJSONTyped(json, false);
}

export function ImpersonateUserRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ImpersonateUserRequest {
    if (json == null) {
        return json;
    }
    return {
        
        '$schema': json['$schema'] == null ? undefined : json['$schema'],
        'adminUserId': json['adminUserId'],
        'durationMinutes': json['duration_minutes'] == null ? undefined : json['duration_minutes'],
        'reason': json['reason'],
    };
}

export function ImpersonateUserRequestToJSON(json: any): ImpersonateUserRequest {
    return ImpersonateUserRequestToJSONTyped(json, false);
}

export function ImpersonateUserRequestToJSONTyped(value?: Omit<ImpersonateUserRequest, '$schema'> | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'adminUserId': value['adminUserId'],
        'duration_minutes': value['durationMinutes'],
        'reason': value['reason'],
    };
}

