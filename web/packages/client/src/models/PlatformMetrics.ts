/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CacheMetrics } from './CacheMetrics';
import {
    CacheMetricsFromJSON,
    CacheMetricsFromJSONTyped,
    CacheMetricsToJSON,
    CacheMetricsToJSONTyped,
} from './CacheMetrics';
import type { QueueMetrics } from './QueueMetrics';
import {
    QueueMetricsFromJSON,
    QueueMetricsFromJSONTyped,
    QueueMetricsToJSON,
    QueueMetricsToJSONTyped,
} from './QueueMetrics';
import type { StorageMetrics } from './StorageMetrics';
import {
    StorageMetricsFromJSON,
    StorageMetricsFromJSONTyped,
    StorageMetricsToJSON,
    StorageMetricsToJSONTyped,
} from './StorageMetrics';
import type { NetworkMetrics } from './NetworkMetrics';
import {
    NetworkMetricsFromJSON,
    NetworkMetricsFromJSONTyped,
    NetworkMetricsToJSON,
    NetworkMetricsToJSONTyped,
} from './NetworkMetrics';
import type { SystemResourceMetrics } from './SystemResourceMetrics';
import {
    SystemResourceMetricsFromJSON,
    SystemResourceMetricsFromJSONTyped,
    SystemResourceMetricsToJSON,
    SystemResourceMetricsToJSONTyped,
} from './SystemResourceMetrics';
import type { ApplicationMetrics } from './ApplicationMetrics';
import {
    ApplicationMetricsFromJSON,
    ApplicationMetricsFromJSONTyped,
    ApplicationMetricsToJSON,
    ApplicationMetricsToJSONTyped,
} from './ApplicationMetrics';
import type { DatabaseMetrics } from './DatabaseMetrics';
import {
    DatabaseMetricsFromJSON,
    DatabaseMetricsFromJSONTyped,
    DatabaseMetricsToJSON,
    DatabaseMetricsToJSONTyped,
} from './DatabaseMetrics';

/**
 * 
 * @export
 * @interface PlatformMetrics
 */
export interface PlatformMetrics {
    [key: string]: any | any;
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof PlatformMetrics
     */
    readonly $schema?: string;
    /**
     * 
     * @type {ApplicationMetrics}
     * @memberof PlatformMetrics
     */
    application: ApplicationMetrics;
    /**
     * 
     * @type {CacheMetrics}
     * @memberof PlatformMetrics
     */
    cache: CacheMetrics;
    /**
     * 
     * @type {DatabaseMetrics}
     * @memberof PlatformMetrics
     */
    database: DatabaseMetrics;
    /**
     * 
     * @type {Date}
     * @memberof PlatformMetrics
     */
    generatedAt: Date;
    /**
     * 
     * @type {NetworkMetrics}
     * @memberof PlatformMetrics
     */
    network: NetworkMetrics;
    /**
     * 
     * @type {string}
     * @memberof PlatformMetrics
     */
    period: string;
    /**
     * 
     * @type {QueueMetrics}
     * @memberof PlatformMetrics
     */
    queue: QueueMetrics;
    /**
     * 
     * @type {StorageMetrics}
     * @memberof PlatformMetrics
     */
    storage: StorageMetrics;
    /**
     * 
     * @type {SystemResourceMetrics}
     * @memberof PlatformMetrics
     */
    system: SystemResourceMetrics;
}

/**
 * Check if a given object implements the PlatformMetrics interface.
 */
export function instanceOfPlatformMetrics(value: object): value is PlatformMetrics {
    if (!('application' in value) || value['application'] === undefined) return false;
    if (!('cache' in value) || value['cache'] === undefined) return false;
    if (!('database' in value) || value['database'] === undefined) return false;
    if (!('generatedAt' in value) || value['generatedAt'] === undefined) return false;
    if (!('network' in value) || value['network'] === undefined) return false;
    if (!('period' in value) || value['period'] === undefined) return false;
    if (!('queue' in value) || value['queue'] === undefined) return false;
    if (!('storage' in value) || value['storage'] === undefined) return false;
    if (!('system' in value) || value['system'] === undefined) return false;
    return true;
}

export function PlatformMetricsFromJSON(json: any): PlatformMetrics {
    return PlatformMetricsFromJSONTyped(json, false);
}

export function PlatformMetricsFromJSONTyped(json: any, ignoreDiscriminator: boolean): PlatformMetrics {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        '$schema': json['$schema'] == null ? undefined : json['$schema'],
        'application': ApplicationMetricsFromJSON(json['application']),
        'cache': CacheMetricsFromJSON(json['cache']),
        'database': DatabaseMetricsFromJSON(json['database']),
        'generatedAt': (new Date(json['generated_at'])),
        'network': NetworkMetricsFromJSON(json['network']),
        'period': json['period'],
        'queue': QueueMetricsFromJSON(json['queue']),
        'storage': StorageMetricsFromJSON(json['storage']),
        'system': SystemResourceMetricsFromJSON(json['system']),
    };
}

export function PlatformMetricsToJSON(json: any): PlatformMetrics {
    return PlatformMetricsToJSONTyped(json, false);
}

export function PlatformMetricsToJSONTyped(value?: Omit<PlatformMetrics, '$schema'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
            ...value,
        'application': ApplicationMetricsToJSON(value['application']),
        'cache': CacheMetricsToJSON(value['cache']),
        'database': DatabaseMetricsToJSON(value['database']),
        'generated_at': ((value['generatedAt']).toISOString()),
        'network': NetworkMetricsToJSON(value['network']),
        'period': value['period'],
        'queue': QueueMetricsToJSON(value['queue']),
        'storage': StorageMetricsToJSON(value['storage']),
        'system': SystemResourceMetricsToJSON(value['system']),
    };
}

