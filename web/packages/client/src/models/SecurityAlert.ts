/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SecurityAlert
 */
export interface SecurityAlert {
    /**
     * Number of events
     * @type {number}
     * @memberof SecurityAlert
     */
    count: number;
    /**
     * Alert ID
     * @type {string}
     * @memberof SecurityAlert
     */
    id: string;
    /**
     * Alert level
     * @type {string}
     * @memberof SecurityAlert
     */
    level: string;
    /**
     * Alert status
     * @type {string}
     * @memberof SecurityAlert
     */
    status: string;
    /**
     * Target of attack
     * @type {string}
     * @memberof SecurityAlert
     */
    target: string;
    /**
     * Alert timestamp
     * @type {Date}
     * @memberof SecurityAlert
     */
    timestamp: Date;
    /**
     * Alert type
     * @type {string}
     * @memberof SecurityAlert
     */
    type: string;
}

/**
 * Check if a given object implements the SecurityAlert interface.
 */
export function instanceOfSecurityAlert(value: object): value is SecurityAlert {
    if (!('count' in value) || value['count'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('level' in value) || value['level'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('target' in value) || value['target'] === undefined) return false;
    if (!('timestamp' in value) || value['timestamp'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    return true;
}

export function SecurityAlertFromJSON(json: any): SecurityAlert {
    return SecurityAlertFromJSONTyped(json, false);
}

export function SecurityAlertFromJSONTyped(json: any, ignoreDiscriminator: boolean): SecurityAlert {
    if (json == null) {
        return json;
    }
    return {
        
        'count': json['count'],
        'id': json['id'],
        'level': json['level'],
        'status': json['status'],
        'target': json['target'],
        'timestamp': (new Date(json['timestamp'])),
        'type': json['type'],
    };
}

export function SecurityAlertToJSON(json: any): SecurityAlert {
    return SecurityAlertToJSONTyped(json, false);
}

export function SecurityAlertToJSONTyped(value?: SecurityAlert | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'count': value['count'],
        'id': value['id'],
        'level': value['level'],
        'status': value['status'],
        'target': value['target'],
        'timestamp': ((value['timestamp']).toISOString()),
        'type': value['type'],
    };
}

