/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UserSecuritySummary
 */
export interface UserSecuritySummary {
    /**
     * 
     * @type {number}
     * @memberof UserSecuritySummary
     */
    failedAttempts: number;
    /**
     * 
     * @type {Date}
     * @memberof UserSecuritySummary
     */
    lastCompromisedCheck?: Date;
    /**
     * 
     * @type {Date}
     * @memberof UserSecuritySummary
     */
    lastLogin?: Date;
    /**
     * 
     * @type {number}
     * @memberof UserSecuritySummary
     */
    loginCount: number;
    /**
     * 
     * @type {boolean}
     * @memberof UserSecuritySummary
     */
    mfaEnabled: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof UserSecuritySummary
     */
    passkeysEnabled: boolean;
    /**
     * 
     * @type {number}
     * @memberof UserSecuritySummary
     */
    riskScore: number;
    /**
     * 
     * @type {number}
     * @memberof UserSecuritySummary
     */
    securityAlerts: number;
}

/**
 * Check if a given object implements the UserSecuritySummary interface.
 */
export function instanceOfUserSecuritySummary(value: object): value is UserSecuritySummary {
    if (!('failedAttempts' in value) || value['failedAttempts'] === undefined) return false;
    if (!('loginCount' in value) || value['loginCount'] === undefined) return false;
    if (!('mfaEnabled' in value) || value['mfaEnabled'] === undefined) return false;
    if (!('passkeysEnabled' in value) || value['passkeysEnabled'] === undefined) return false;
    if (!('riskScore' in value) || value['riskScore'] === undefined) return false;
    if (!('securityAlerts' in value) || value['securityAlerts'] === undefined) return false;
    return true;
}

export function UserSecuritySummaryFromJSON(json: any): UserSecuritySummary {
    return UserSecuritySummaryFromJSONTyped(json, false);
}

export function UserSecuritySummaryFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserSecuritySummary {
    if (json == null) {
        return json;
    }
    return {
        
        'failedAttempts': json['failed_attempts'],
        'lastCompromisedCheck': json['last_compromised_check'] == null ? undefined : (new Date(json['last_compromised_check'])),
        'lastLogin': json['last_login'] == null ? undefined : (new Date(json['last_login'])),
        'loginCount': json['login_count'],
        'mfaEnabled': json['mfa_enabled'],
        'passkeysEnabled': json['passkeys_enabled'],
        'riskScore': json['risk_score'],
        'securityAlerts': json['security_alerts'],
    };
}

export function UserSecuritySummaryToJSON(json: any): UserSecuritySummary {
    return UserSecuritySummaryToJSONTyped(json, false);
}

export function UserSecuritySummaryToJSONTyped(value?: UserSecuritySummary | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'failed_attempts': value['failedAttempts'],
        'last_compromised_check': value['lastCompromisedCheck'] == null ? undefined : ((value['lastCompromisedCheck']).toISOString()),
        'last_login': value['lastLogin'] == null ? undefined : ((value['lastLogin']).toISOString()),
        'login_count': value['loginCount'],
        'mfa_enabled': value['mfaEnabled'],
        'passkeys_enabled': value['passkeysEnabled'],
        'risk_score': value['riskScore'],
        'security_alerts': value['securityAlerts'],
    };
}

