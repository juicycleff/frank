/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DependencyHealth
 */
export interface DependencyHealth {
    /**
     * 
     * @type {Date}
     * @memberof DependencyHealth
     */
    lastChecked: Date;
    /**
     * 
     * @type {number}
     * @memberof DependencyHealth
     */
    latencyMs: number;
    /**
     * 
     * @type {string}
     * @memberof DependencyHealth
     */
    message?: string;
    /**
     * 
     * @type {string}
     * @memberof DependencyHealth
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof DependencyHealth
     */
    status: string;
    /**
     * 
     * @type {string}
     * @memberof DependencyHealth
     */
    type: string;
}

/**
 * Check if a given object implements the DependencyHealth interface.
 */
export function instanceOfDependencyHealth(value: object): value is DependencyHealth {
    if (!('lastChecked' in value) || value['lastChecked'] === undefined) return false;
    if (!('latencyMs' in value) || value['latencyMs'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    return true;
}

export function DependencyHealthFromJSON(json: any): DependencyHealth {
    return DependencyHealthFromJSONTyped(json, false);
}

export function DependencyHealthFromJSONTyped(json: any, ignoreDiscriminator: boolean): DependencyHealth {
    if (json == null) {
        return json;
    }
    return {
        
        'lastChecked': (new Date(json['last_checked'])),
        'latencyMs': json['latency_ms'],
        'message': json['message'] == null ? undefined : json['message'],
        'name': json['name'],
        'status': json['status'],
        'type': json['type'],
    };
}

export function DependencyHealthToJSON(json: any): DependencyHealth {
    return DependencyHealthToJSONTyped(json, false);
}

export function DependencyHealthToJSONTyped(value?: DependencyHealth | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'last_checked': ((value['lastChecked']).toISOString()),
        'latency_ms': value['latencyMs'],
        'message': value['message'],
        'name': value['name'],
        'status': value['status'],
        'type': value['type'],
    };
}

