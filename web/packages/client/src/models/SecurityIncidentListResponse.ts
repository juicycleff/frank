/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Pagination } from './Pagination';
import {
    PaginationFromJSON,
    PaginationFromJSONTyped,
    PaginationToJSON,
    PaginationToJSONTyped,
} from './Pagination';
import type { SecurityIncident } from './SecurityIncident';
import {
    SecurityIncidentFromJSON,
    SecurityIncidentFromJSONTyped,
    SecurityIncidentToJSON,
    SecurityIncidentToJSONTyped,
} from './SecurityIncident';
import type { SecurityIncidentStats } from './SecurityIncidentStats';
import {
    SecurityIncidentStatsFromJSON,
    SecurityIncidentStatsFromJSONTyped,
    SecurityIncidentStatsToJSON,
    SecurityIncidentStatsToJSONTyped,
} from './SecurityIncidentStats';

/**
 * 
 * @export
 * @interface SecurityIncidentListResponse
 */
export interface SecurityIncidentListResponse {
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof SecurityIncidentListResponse
     */
    readonly $schema?: string;
    /**
     * 
     * @type {Array<SecurityIncident>}
     * @memberof SecurityIncidentListResponse
     */
    incidents: Array<SecurityIncident> | null;
    /**
     * 
     * @type {Pagination}
     * @memberof SecurityIncidentListResponse
     */
    pagination: Pagination;
    /**
     * 
     * @type {SecurityIncidentStats}
     * @memberof SecurityIncidentListResponse
     */
    summary: SecurityIncidentStats;
}

/**
 * Check if a given object implements the SecurityIncidentListResponse interface.
 */
export function instanceOfSecurityIncidentListResponse(value: object): value is SecurityIncidentListResponse {
    if (!('incidents' in value) || value['incidents'] === undefined) return false;
    if (!('pagination' in value) || value['pagination'] === undefined) return false;
    if (!('summary' in value) || value['summary'] === undefined) return false;
    return true;
}

export function SecurityIncidentListResponseFromJSON(json: any): SecurityIncidentListResponse {
    return SecurityIncidentListResponseFromJSONTyped(json, false);
}

export function SecurityIncidentListResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): SecurityIncidentListResponse {
    if (json == null) {
        return json;
    }
    return {
        
        '$schema': json['$schema'] == null ? undefined : json['$schema'],
        'incidents': (json['incidents'] == null ? null : (json['incidents'] as Array<any>).map(SecurityIncidentFromJSON)),
        'pagination': PaginationFromJSON(json['pagination']),
        'summary': SecurityIncidentStatsFromJSON(json['summary']),
    };
}

export function SecurityIncidentListResponseToJSON(json: any): SecurityIncidentListResponse {
    return SecurityIncidentListResponseToJSONTyped(json, false);
}

export function SecurityIncidentListResponseToJSONTyped(value?: Omit<SecurityIncidentListResponse, '$schema'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'incidents': (value['incidents'] == null ? null : (value['incidents'] as Array<any>).map(SecurityIncidentToJSON)),
        'pagination': PaginationToJSON(value['pagination']),
        'summary': SecurityIncidentStatsToJSON(value['summary']),
    };
}

