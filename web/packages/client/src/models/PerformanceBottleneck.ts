/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PerformanceBottleneck
 */
export interface PerformanceBottleneck {
    /**
     * 
     * @type {string}
     * @memberof PerformanceBottleneck
     */
    component: string;
    /**
     * 
     * @type {string}
     * @memberof PerformanceBottleneck
     */
    description: string;
    /**
     * 
     * @type {string}
     * @memberof PerformanceBottleneck
     */
    impact: string;
    /**
     * 
     * @type {string}
     * @memberof PerformanceBottleneck
     */
    severity: string;
    /**
     * 
     * @type {string}
     * @memberof PerformanceBottleneck
     */
    suggestion: string;
    /**
     * 
     * @type {string}
     * @memberof PerformanceBottleneck
     */
    type: string;
}

/**
 * Check if a given object implements the PerformanceBottleneck interface.
 */
export function instanceOfPerformanceBottleneck(value: object): value is PerformanceBottleneck {
    if (!('component' in value) || value['component'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('impact' in value) || value['impact'] === undefined) return false;
    if (!('severity' in value) || value['severity'] === undefined) return false;
    if (!('suggestion' in value) || value['suggestion'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    return true;
}

export function PerformanceBottleneckFromJSON(json: any): PerformanceBottleneck {
    return PerformanceBottleneckFromJSONTyped(json, false);
}

export function PerformanceBottleneckFromJSONTyped(json: any, ignoreDiscriminator: boolean): PerformanceBottleneck {
    if (json == null) {
        return json;
    }
    return {
        
        'component': json['component'],
        'description': json['description'],
        'impact': json['impact'],
        'severity': json['severity'],
        'suggestion': json['suggestion'],
        'type': json['type'],
    };
}

export function PerformanceBottleneckToJSON(json: any): PerformanceBottleneck {
    return PerformanceBottleneckToJSONTyped(json, false);
}

export function PerformanceBottleneckToJSONTyped(value?: PerformanceBottleneck | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'component': value['component'],
        'description': value['description'],
        'impact': value['impact'],
        'severity': value['severity'],
        'suggestion': value['suggestion'],
        'type': value['type'],
    };
}

