/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UserDataExport
 */
export interface UserDataExport {
    [key: string]: any | any;
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof UserDataExport
     */
    readonly $schema?: string;
    /**
     * 
     * @type {object}
     * @memberof UserDataExport
     */
    dataSections: object;
    /**
     * 
     * @type {string}
     * @memberof UserDataExport
     */
    downloadUrl: string;
    /**
     * 
     * @type {Date}
     * @memberof UserDataExport
     */
    expiresAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof UserDataExport
     */
    exportedAt: Date;
    /**
     * 
     * @type {number}
     * @memberof UserDataExport
     */
    fileSize: number;
    /**
     * 
     * @type {string}
     * @memberof UserDataExport
     */
    format: string;
    /**
     * 
     * @type {string}
     * @memberof UserDataExport
     */
    organizationId: string;
    /**
     * 
     * @type {string}
     * @memberof UserDataExport
     */
    userId: string;
}

/**
 * Check if a given object implements the UserDataExport interface.
 */
export function instanceOfUserDataExport(value: object): value is UserDataExport {
    if (!('dataSections' in value) || value['dataSections'] === undefined) return false;
    if (!('downloadUrl' in value) || value['downloadUrl'] === undefined) return false;
    if (!('expiresAt' in value) || value['expiresAt'] === undefined) return false;
    if (!('exportedAt' in value) || value['exportedAt'] === undefined) return false;
    if (!('fileSize' in value) || value['fileSize'] === undefined) return false;
    if (!('format' in value) || value['format'] === undefined) return false;
    if (!('organizationId' in value) || value['organizationId'] === undefined) return false;
    if (!('userId' in value) || value['userId'] === undefined) return false;
    return true;
}

export function UserDataExportFromJSON(json: any): UserDataExport {
    return UserDataExportFromJSONTyped(json, false);
}

export function UserDataExportFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserDataExport {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        '$schema': json['$schema'] == null ? undefined : json['$schema'],
        'dataSections': json['data_sections'],
        'downloadUrl': json['download_url'],
        'expiresAt': (new Date(json['expires_at'])),
        'exportedAt': (new Date(json['exported_at'])),
        'fileSize': json['file_size'],
        'format': json['format'],
        'organizationId': json['organization_id'],
        'userId': json['user_id'],
    };
}

export function UserDataExportToJSON(json: any): UserDataExport {
    return UserDataExportToJSONTyped(json, false);
}

export function UserDataExportToJSONTyped(value?: Omit<UserDataExport, '$schema'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
            ...value,
        'data_sections': value['dataSections'],
        'download_url': value['downloadUrl'],
        'expires_at': ((value['expiresAt']).toISOString()),
        'exported_at': ((value['exportedAt']).toISOString()),
        'file_size': value['fileSize'],
        'format': value['format'],
        'organization_id': value['organizationId'],
        'user_id': value['userId'],
    };
}

