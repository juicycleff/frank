/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface MemberCohort
 */
export interface MemberCohort {
    /**
     * Average lifetime in months
     * @type {number}
     * @memberof MemberCohort
     */
    avgLifetime: number;
    /**
     * Members who have churned
     * @type {number}
     * @memberof MemberCohort
     */
    churnedMembers: number;
    /**
     * Cohort month (YYYY-MM)
     * @type {string}
     * @memberof MemberCohort
     */
    cohortMonth: string;
    /**
     * Retention rates by month
     * @type {{ [key: string]: number; }}
     * @memberof MemberCohort
     */
    retentionRates: { [key: string]: number; };
    /**
     * Total members in cohort
     * @type {number}
     * @memberof MemberCohort
     */
    totalMembers: number;
}

/**
 * Check if a given object implements the MemberCohort interface.
 */
export function instanceOfMemberCohort(value: object): value is MemberCohort {
    if (!('avgLifetime' in value) || value['avgLifetime'] === undefined) return false;
    if (!('churnedMembers' in value) || value['churnedMembers'] === undefined) return false;
    if (!('cohortMonth' in value) || value['cohortMonth'] === undefined) return false;
    if (!('retentionRates' in value) || value['retentionRates'] === undefined) return false;
    if (!('totalMembers' in value) || value['totalMembers'] === undefined) return false;
    return true;
}

export function MemberCohortFromJSON(json: any): MemberCohort {
    return MemberCohortFromJSONTyped(json, false);
}

export function MemberCohortFromJSONTyped(json: any, ignoreDiscriminator: boolean): MemberCohort {
    if (json == null) {
        return json;
    }
    return {
        
        'avgLifetime': json['avgLifetime'],
        'churnedMembers': json['churnedMembers'],
        'cohortMonth': json['cohortMonth'],
        'retentionRates': json['retentionRates'],
        'totalMembers': json['totalMembers'],
    };
}

export function MemberCohortToJSON(json: any): MemberCohort {
    return MemberCohortToJSONTyped(json, false);
}

export function MemberCohortToJSONTyped(value?: MemberCohort | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'avgLifetime': value['avgLifetime'],
        'churnedMembers': value['churnedMembers'],
        'cohortMonth': value['cohortMonth'],
        'retentionRates': value['retentionRates'],
        'totalMembers': value['totalMembers'],
    };
}

