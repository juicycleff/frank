/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface OAuthScope
 */
export interface OAuthScope {
    [key: string]: any | any;
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof OAuthScope
     */
    readonly $schema?: string;
    /**
     * 
     * @type {Date}
     * @memberof OAuthScope
     */
    createdAt: Date;
    /**
     * Whether scope is included by default
     * @type {boolean}
     * @memberof OAuthScope
     */
    defaultScope: boolean;
    /**
     * Scope description
     * @type {string}
     * @memberof OAuthScope
     */
    description: string;
    /**
     * 
     * @type {string}
     * @memberof OAuthScope
     */
    id: string;
    /**
     * Scope name
     * @type {string}
     * @memberof OAuthScope
     */
    name: string;
    /**
     * Whether scope can be requested by any client
     * @type {boolean}
     * @memberof OAuthScope
     */
    _public: boolean;
    /**
     * 
     * @type {Date}
     * @memberof OAuthScope
     */
    updatedAt: Date;
}

/**
 * Check if a given object implements the OAuthScope interface.
 */
export function instanceOfOAuthScope(value: object): value is OAuthScope {
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('defaultScope' in value) || value['defaultScope'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('_public' in value) || value['_public'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    return true;
}

export function OAuthScopeFromJSON(json: any): OAuthScope {
    return OAuthScopeFromJSONTyped(json, false);
}

export function OAuthScopeFromJSONTyped(json: any, ignoreDiscriminator: boolean): OAuthScope {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        '$schema': json['$schema'] == null ? undefined : json['$schema'],
        'createdAt': (new Date(json['createdAt'])),
        'defaultScope': json['defaultScope'],
        'description': json['description'],
        'id': json['id'],
        'name': json['name'],
        '_public': json['public'],
        'updatedAt': (new Date(json['updatedAt'])),
    };
}

export function OAuthScopeToJSON(json: any): OAuthScope {
    return OAuthScopeToJSONTyped(json, false);
}

export function OAuthScopeToJSONTyped(value?: Omit<OAuthScope, '$schema'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
            ...value,
        'createdAt': ((value['createdAt']).toISOString()),
        'defaultScope': value['defaultScope'],
        'description': value['description'],
        'id': value['id'],
        'name': value['name'],
        'public': value['_public'],
        'updatedAt': ((value['updatedAt']).toISOString()),
    };
}

