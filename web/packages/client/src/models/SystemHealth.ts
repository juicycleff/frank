/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DependencyHealth } from './DependencyHealth';
import {
    DependencyHealthFromJSON,
    DependencyHealthFromJSONTyped,
    DependencyHealthToJSON,
    DependencyHealthToJSONTyped,
} from './DependencyHealth';
import type { HealthMetrics } from './HealthMetrics';
import {
    HealthMetricsFromJSON,
    HealthMetricsFromJSONTyped,
    HealthMetricsToJSON,
    HealthMetricsToJSONTyped,
} from './HealthMetrics';
import type { ServiceHealth } from './ServiceHealth';
import {
    ServiceHealthFromJSON,
    ServiceHealthFromJSONTyped,
    ServiceHealthToJSON,
    ServiceHealthToJSONTyped,
} from './ServiceHealth';
import type { HealthAlert } from './HealthAlert';
import {
    HealthAlertFromJSON,
    HealthAlertFromJSONTyped,
    HealthAlertToJSON,
    HealthAlertToJSONTyped,
} from './HealthAlert';

/**
 * 
 * @export
 * @interface SystemHealth
 */
export interface SystemHealth {
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof SystemHealth
     */
    readonly $schema?: string;
    /**
     * 
     * @type {Array<HealthAlert>}
     * @memberof SystemHealth
     */
    alerts: Array<HealthAlert> | null;
    /**
     * 
     * @type {Array<DependencyHealth>}
     * @memberof SystemHealth
     */
    dependencies: Array<DependencyHealth> | null;
    /**
     * 
     * @type {Date}
     * @memberof SystemHealth
     */
    lastChecked: Date;
    /**
     * 
     * @type {HealthMetrics}
     * @memberof SystemHealth
     */
    metrics: HealthMetrics;
    /**
     * 
     * @type {Array<ServiceHealth>}
     * @memberof SystemHealth
     */
    services: Array<ServiceHealth> | null;
    /**
     * 
     * @type {string}
     * @memberof SystemHealth
     */
    status: string;
}

/**
 * Check if a given object implements the SystemHealth interface.
 */
export function instanceOfSystemHealth(value: object): value is SystemHealth {
    if (!('alerts' in value) || value['alerts'] === undefined) return false;
    if (!('dependencies' in value) || value['dependencies'] === undefined) return false;
    if (!('lastChecked' in value) || value['lastChecked'] === undefined) return false;
    if (!('metrics' in value) || value['metrics'] === undefined) return false;
    if (!('services' in value) || value['services'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    return true;
}

export function SystemHealthFromJSON(json: any): SystemHealth {
    return SystemHealthFromJSONTyped(json, false);
}

export function SystemHealthFromJSONTyped(json: any, ignoreDiscriminator: boolean): SystemHealth {
    if (json == null) {
        return json;
    }
    return {
        
        '$schema': json['$schema'] == null ? undefined : json['$schema'],
        'alerts': (json['alerts'] == null ? null : (json['alerts'] as Array<any>).map(HealthAlertFromJSON)),
        'dependencies': (json['dependencies'] == null ? null : (json['dependencies'] as Array<any>).map(DependencyHealthFromJSON)),
        'lastChecked': (new Date(json['last_checked'])),
        'metrics': HealthMetricsFromJSON(json['metrics']),
        'services': (json['services'] == null ? null : (json['services'] as Array<any>).map(ServiceHealthFromJSON)),
        'status': json['status'],
    };
}

export function SystemHealthToJSON(json: any): SystemHealth {
    return SystemHealthToJSONTyped(json, false);
}

export function SystemHealthToJSONTyped(value?: Omit<SystemHealth, '$schema'> | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'alerts': (value['alerts'] == null ? null : (value['alerts'] as Array<any>).map(HealthAlertToJSON)),
        'dependencies': (value['dependencies'] == null ? null : (value['dependencies'] as Array<any>).map(DependencyHealthToJSON)),
        'last_checked': ((value['lastChecked']).toISOString()),
        'metrics': HealthMetricsToJSON(value['metrics']),
        'services': (value['services'] == null ? null : (value['services'] as Array<any>).map(ServiceHealthToJSON)),
        'status': value['status'],
    };
}

