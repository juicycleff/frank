/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface RiskMitigation
 */
export interface RiskMitigation {
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof RiskMitigation
     */
    readonly $schema?: string;
    /**
     * 
     * @type {number}
     * @memberof RiskMitigation
     */
    cost: number;
    /**
     * 
     * @type {string}
     * @memberof RiskMitigation
     */
    description: string;
    /**
     * 
     * @type {string}
     * @memberof RiskMitigation
     */
    effectiveness: string;
    /**
     * 
     * @type {string}
     * @memberof RiskMitigation
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof RiskMitigation
     */
    implementation: string;
    /**
     * 
     * @type {Date}
     * @memberof RiskMitigation
     */
    lastReviewed: Date;
    /**
     * 
     * @type {string}
     * @memberof RiskMitigation
     */
    owner: string;
    /**
     * 
     * @type {string}
     * @memberof RiskMitigation
     */
    riskId: string;
    /**
     * 
     * @type {string}
     * @memberof RiskMitigation
     */
    status: string;
    /**
     * 
     * @type {string}
     * @memberof RiskMitigation
     */
    strategy: string;
    /**
     * 
     * @type {string}
     * @memberof RiskMitigation
     */
    timeline: string;
}

/**
 * Check if a given object implements the RiskMitigation interface.
 */
export function instanceOfRiskMitigation(value: object): value is RiskMitigation {
    if (!('cost' in value) || value['cost'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('effectiveness' in value) || value['effectiveness'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('implementation' in value) || value['implementation'] === undefined) return false;
    if (!('lastReviewed' in value) || value['lastReviewed'] === undefined) return false;
    if (!('owner' in value) || value['owner'] === undefined) return false;
    if (!('riskId' in value) || value['riskId'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('strategy' in value) || value['strategy'] === undefined) return false;
    if (!('timeline' in value) || value['timeline'] === undefined) return false;
    return true;
}

export function RiskMitigationFromJSON(json: any): RiskMitigation {
    return RiskMitigationFromJSONTyped(json, false);
}

export function RiskMitigationFromJSONTyped(json: any, ignoreDiscriminator: boolean): RiskMitigation {
    if (json == null) {
        return json;
    }
    return {
        
        '$schema': json['$schema'] == null ? undefined : json['$schema'],
        'cost': json['cost'],
        'description': json['description'],
        'effectiveness': json['effectiveness'],
        'id': json['id'],
        'implementation': json['implementation'],
        'lastReviewed': (new Date(json['last_reviewed'])),
        'owner': json['owner'],
        'riskId': json['risk_id'],
        'status': json['status'],
        'strategy': json['strategy'],
        'timeline': json['timeline'],
    };
}

export function RiskMitigationToJSON(json: any): RiskMitigation {
    return RiskMitigationToJSONTyped(json, false);
}

export function RiskMitigationToJSONTyped(value?: Omit<RiskMitigation, '$schema'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'cost': value['cost'],
        'description': value['description'],
        'effectiveness': value['effectiveness'],
        'id': value['id'],
        'implementation': value['implementation'],
        'last_reviewed': ((value['lastReviewed']).toISOString()),
        'owner': value['owner'],
        'risk_id': value['riskId'],
        'status': value['status'],
        'strategy': value['strategy'],
        'timeline': value['timeline'],
    };
}

