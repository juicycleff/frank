/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DataTransfer
 */
export interface DataTransfer {
    /**
     * 
     * @type {string}
     * @memberof DataTransfer
     */
    destination: string;
    /**
     * 
     * @type {string}
     * @memberof DataTransfer
     */
    frequency: string;
    /**
     * 
     * @type {Date}
     * @memberof DataTransfer
     */
    lastTransfer: Date;
    /**
     * 
     * @type {string}
     * @memberof DataTransfer
     */
    mechanism: string;
}

/**
 * Check if a given object implements the DataTransfer interface.
 */
export function instanceOfDataTransfer(value: object): value is DataTransfer {
    if (!('destination' in value) || value['destination'] === undefined) return false;
    if (!('frequency' in value) || value['frequency'] === undefined) return false;
    if (!('lastTransfer' in value) || value['lastTransfer'] === undefined) return false;
    if (!('mechanism' in value) || value['mechanism'] === undefined) return false;
    return true;
}

export function DataTransferFromJSON(json: any): DataTransfer {
    return DataTransferFromJSONTyped(json, false);
}

export function DataTransferFromJSONTyped(json: any, ignoreDiscriminator: boolean): DataTransfer {
    if (json == null) {
        return json;
    }
    return {
        
        'destination': json['destination'],
        'frequency': json['frequency'],
        'lastTransfer': (new Date(json['last_transfer'])),
        'mechanism': json['mechanism'],
    };
}

export function DataTransferToJSON(json: any): DataTransfer {
    return DataTransferToJSONTyped(json, false);
}

export function DataTransferToJSONTyped(value?: DataTransfer | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'destination': value['destination'],
        'frequency': value['frequency'],
        'last_transfer': ((value['lastTransfer']).toISOString()),
        'mechanism': value['mechanism'],
    };
}

