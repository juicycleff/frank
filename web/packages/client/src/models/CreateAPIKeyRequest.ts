/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { APIKeyType } from './APIKeyType';
import {
    APIKeyTypeFromJSON,
    APIKeyTypeFromJSONTyped,
    APIKeyTypeToJSON,
    APIKeyTypeToJSONTyped,
} from './APIKeyType';
import type { Environment } from './Environment';
import {
    EnvironmentFromJSON,
    EnvironmentFromJSONTyped,
    EnvironmentToJSON,
    EnvironmentToJSONTyped,
} from './Environment';
import type { APIKeyRateLimits } from './APIKeyRateLimits';
import {
    APIKeyRateLimitsFromJSON,
    APIKeyRateLimitsFromJSONTyped,
    APIKeyRateLimitsToJSON,
    APIKeyRateLimitsToJSONTyped,
} from './APIKeyRateLimits';

/**
 * 
 * @export
 * @interface CreateAPIKeyRequest
 */
export interface CreateAPIKeyRequest {
    [key: string]: any | any;
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof CreateAPIKeyRequest
     */
    readonly $schema?: string;
    /**
     * Environment (test, live)
     * @type {Environment}
     * @memberof CreateAPIKeyRequest
     */
    environment?: Environment;
    /**
     * Expiration timestamp
     * @type {Date}
     * @memberof CreateAPIKeyRequest
     */
    expiresAt?: Date;
    /**
     * IP whitelist
     * @type {Array<string>}
     * @memberof CreateAPIKeyRequest
     */
    ipWhitelist?: Array<string>;
    /**
     * Additional metadata
     * @type {object}
     * @memberof CreateAPIKeyRequest
     */
    metadata?: object;
    /**
     * API key name
     * @type {string}
     * @memberof CreateAPIKeyRequest
     */
    name: string;
    /**
     * Granted permissions
     * @type {Array<string>}
     * @memberof CreateAPIKeyRequest
     */
    permissions?: Array<string>;
    /**
     * Rate limits
     * @type {APIKeyRateLimits}
     * @memberof CreateAPIKeyRequest
     */
    rateLimits?: APIKeyRateLimits;
    /**
     * API scopes
     * @type {Array<string>}
     * @memberof CreateAPIKeyRequest
     */
    scopes?: Array<string>;
    /**
     * API key type
     * @type {APIKeyType}
     * @memberof CreateAPIKeyRequest
     */
    type?: APIKeyType;
}



/**
 * Check if a given object implements the CreateAPIKeyRequest interface.
 */
export function instanceOfCreateAPIKeyRequest(value: object): value is CreateAPIKeyRequest {
    if (!('name' in value) || value['name'] === undefined) return false;
    return true;
}

export function CreateAPIKeyRequestFromJSON(json: any): CreateAPIKeyRequest {
    return CreateAPIKeyRequestFromJSONTyped(json, false);
}

export function CreateAPIKeyRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateAPIKeyRequest {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        '$schema': json['$schema'] == null ? undefined : json['$schema'],
        'environment': json['environment'] == null ? undefined : EnvironmentFromJSON(json['environment']),
        'expiresAt': json['expiresAt'] == null ? undefined : (new Date(json['expiresAt'])),
        'ipWhitelist': json['ipWhitelist'] == null ? undefined : json['ipWhitelist'],
        'metadata': json['metadata'] == null ? undefined : json['metadata'],
        'name': json['name'],
        'permissions': json['permissions'] == null ? undefined : json['permissions'],
        'rateLimits': json['rateLimits'] == null ? undefined : APIKeyRateLimitsFromJSON(json['rateLimits']),
        'scopes': json['scopes'] == null ? undefined : json['scopes'],
        'type': json['type'] == null ? undefined : APIKeyTypeFromJSON(json['type']),
    };
}

export function CreateAPIKeyRequestToJSON(json: any): CreateAPIKeyRequest {
    return CreateAPIKeyRequestToJSONTyped(json, false);
}

export function CreateAPIKeyRequestToJSONTyped(value?: Omit<CreateAPIKeyRequest, '$schema'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
            ...value,
        'environment': EnvironmentToJSON(value['environment']),
        'expiresAt': value['expiresAt'] == null ? undefined : ((value['expiresAt']).toISOString()),
        'ipWhitelist': value['ipWhitelist'],
        'metadata': value['metadata'],
        'name': value['name'],
        'permissions': value['permissions'],
        'rateLimits': APIKeyRateLimitsToJSON(value['rateLimits']),
        'scopes': value['scopes'],
        'type': APIKeyTypeToJSON(value['type']),
    };
}

