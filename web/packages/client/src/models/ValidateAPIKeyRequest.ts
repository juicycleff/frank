/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ValidateAPIKeyRequest
 */
export interface ValidateAPIKeyRequest {
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof ValidateAPIKeyRequest
     */
    readonly $schema?: string;
    /**
     * Requested endpoint
     * @type {string}
     * @memberof ValidateAPIKeyRequest
     */
    endpoint?: string;
    /**
     * Request IP address
     * @type {string}
     * @memberof ValidateAPIKeyRequest
     */
    ipAddress?: string;
    /**
     * API key to validate
     * @type {string}
     * @memberof ValidateAPIKeyRequest
     */
    key: string;
    /**
     * HTTP method
     * @type {string}
     * @memberof ValidateAPIKeyRequest
     */
    method?: string;
    /**
     * User agent
     * @type {string}
     * @memberof ValidateAPIKeyRequest
     */
    userAgent?: string;
}

/**
 * Check if a given object implements the ValidateAPIKeyRequest interface.
 */
export function instanceOfValidateAPIKeyRequest(value: object): value is ValidateAPIKeyRequest {
    if (!('key' in value) || value['key'] === undefined) return false;
    return true;
}

export function ValidateAPIKeyRequestFromJSON(json: any): ValidateAPIKeyRequest {
    return ValidateAPIKeyRequestFromJSONTyped(json, false);
}

export function ValidateAPIKeyRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ValidateAPIKeyRequest {
    if (json == null) {
        return json;
    }
    return {
        
        '$schema': json['$schema'] == null ? undefined : json['$schema'],
        'endpoint': json['endpoint'] == null ? undefined : json['endpoint'],
        'ipAddress': json['ipAddress'] == null ? undefined : json['ipAddress'],
        'key': json['key'],
        'method': json['method'] == null ? undefined : json['method'],
        'userAgent': json['userAgent'] == null ? undefined : json['userAgent'],
    };
}

export function ValidateAPIKeyRequestToJSON(json: any): ValidateAPIKeyRequest {
    return ValidateAPIKeyRequestToJSONTyped(json, false);
}

export function ValidateAPIKeyRequestToJSONTyped(value?: Omit<ValidateAPIKeyRequest, '$schema'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'endpoint': value['endpoint'],
        'ipAddress': value['ipAddress'],
        'key': value['key'],
        'method': value['method'],
        'userAgent': value['userAgent'],
    };
}

