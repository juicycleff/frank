/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AuditUserActivity
 */
export interface AuditUserActivity {
    /**
     * 
     * @type {string}
     * @memberof AuditUserActivity
     */
    email: string;
    /**
     * 
     * @type {number}
     * @memberof AuditUserActivity
     */
    eventCount: number;
    /**
     * 
     * @type {number}
     * @memberof AuditUserActivity
     */
    failureRatePercent: number;
    /**
     * 
     * @type {number}
     * @memberof AuditUserActivity
     */
    riskScore: number;
    /**
     * 
     * @type {string}
     * @memberof AuditUserActivity
     */
    userId: string;
}

/**
 * Check if a given object implements the AuditUserActivity interface.
 */
export function instanceOfAuditUserActivity(value: object): value is AuditUserActivity {
    if (!('email' in value) || value['email'] === undefined) return false;
    if (!('eventCount' in value) || value['eventCount'] === undefined) return false;
    if (!('failureRatePercent' in value) || value['failureRatePercent'] === undefined) return false;
    if (!('riskScore' in value) || value['riskScore'] === undefined) return false;
    if (!('userId' in value) || value['userId'] === undefined) return false;
    return true;
}

export function AuditUserActivityFromJSON(json: any): AuditUserActivity {
    return AuditUserActivityFromJSONTyped(json, false);
}

export function AuditUserActivityFromJSONTyped(json: any, ignoreDiscriminator: boolean): AuditUserActivity {
    if (json == null) {
        return json;
    }
    return {
        
        'email': json['email'],
        'eventCount': json['event_count'],
        'failureRatePercent': json['failure_rate_percent'],
        'riskScore': json['risk_score'],
        'userId': json['userId'],
    };
}

export function AuditUserActivityToJSON(json: any): AuditUserActivity {
    return AuditUserActivityToJSONTyped(json, false);
}

export function AuditUserActivityToJSONTyped(value?: AuditUserActivity | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'email': value['email'],
        'event_count': value['eventCount'],
        'failure_rate_percent': value['failureRatePercent'],
        'risk_score': value['riskScore'],
        'userId': value['userId'],
    };
}

