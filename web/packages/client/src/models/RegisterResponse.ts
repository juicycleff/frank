/* tslint:disable */
/* eslint-disable */
/**
 * My Project
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    User,
    UserFromJSON,
    UserFromJSONTyped,
    UserToJSON,
} from './';

/**
 * 
 * @export
 * @interface RegisterResponse
 */
export interface RegisterResponse {
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof RegisterResponse
     */
    readonly $schema?: string;
    /**
     * JWT access token (if auto-login enabled)
     * @type {string}
     * @memberof RegisterResponse
     */
    accessToken?: string;
    /**
     * Whether email verification is required
     * @type {boolean}
     * @memberof RegisterResponse
     */
    emailVerificationRequired: boolean;
    /**
     * Token expiration in seconds
     * @type {number}
     * @memberof RegisterResponse
     */
    expiresIn?: number;
    /**
     * Whether phone verification is required
     * @type {boolean}
     * @memberof RegisterResponse
     */
    phoneVerificationRequired: boolean;
    /**
     * Refresh token
     * @type {string}
     * @memberof RegisterResponse
     */
    refreshToken?: string;
    /**
     * Token type
     * @type {string}
     * @memberof RegisterResponse
     */
    tokenType?: string;
    /**
     * 
     * @type {User}
     * @memberof RegisterResponse
     */
    user: User;
    /**
     * Verification token
     * @type {string}
     * @memberof RegisterResponse
     */
    verificationToken?: string;
}

export function RegisterResponseFromJSON(json: any): RegisterResponse {
    return RegisterResponseFromJSONTyped(json, false);
}

export function RegisterResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): RegisterResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        '$schema': !exists(json, '$schema') ? undefined : json['$schema'],
        'accessToken': !exists(json, 'accessToken') ? undefined : json['accessToken'],
        'emailVerificationRequired': json['emailVerificationRequired'],
        'expiresIn': !exists(json, 'expiresIn') ? undefined : json['expiresIn'],
        'phoneVerificationRequired': json['phoneVerificationRequired'],
        'refreshToken': !exists(json, 'refreshToken') ? undefined : json['refreshToken'],
        'tokenType': !exists(json, 'tokenType') ? undefined : json['tokenType'],
        'user': UserFromJSON(json['user']),
        'verificationToken': !exists(json, 'verificationToken') ? undefined : json['verificationToken'],
    };
}

export function RegisterResponseToJSON(value?: RegisterResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'accessToken': value.accessToken,
        'emailVerificationRequired': value.emailVerificationRequired,
        'expiresIn': value.expiresIn,
        'phoneVerificationRequired': value.phoneVerificationRequired,
        'refreshToken': value.refreshToken,
        'tokenType': value.tokenType,
        'user': UserToJSON(value.user),
        'verificationToken': value.verificationToken,
    };
}


