/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface FeatureUsage
 */
export interface FeatureUsage {
    /**
     * 
     * @type {number}
     * @memberof FeatureUsage
     */
    activeUsers: number;
    /**
     * 
     * @type {number}
     * @memberof FeatureUsage
     */
    adoptionRatePercent: number;
    /**
     * 
     * @type {string}
     * @memberof FeatureUsage
     */
    feature: string;
    /**
     * 
     * @type {number}
     * @memberof FeatureUsage
     */
    growthRatePercent: number;
    /**
     * 
     * @type {number}
     * @memberof FeatureUsage
     */
    organizations: number;
    /**
     * 
     * @type {number}
     * @memberof FeatureUsage
     */
    revenue: number;
    /**
     * 
     * @type {number}
     * @memberof FeatureUsage
     */
    totalUsage: number;
}

/**
 * Check if a given object implements the FeatureUsage interface.
 */
export function instanceOfFeatureUsage(value: object): value is FeatureUsage {
    if (!('activeUsers' in value) || value['activeUsers'] === undefined) return false;
    if (!('adoptionRatePercent' in value) || value['adoptionRatePercent'] === undefined) return false;
    if (!('feature' in value) || value['feature'] === undefined) return false;
    if (!('growthRatePercent' in value) || value['growthRatePercent'] === undefined) return false;
    if (!('organizations' in value) || value['organizations'] === undefined) return false;
    if (!('revenue' in value) || value['revenue'] === undefined) return false;
    if (!('totalUsage' in value) || value['totalUsage'] === undefined) return false;
    return true;
}

export function FeatureUsageFromJSON(json: any): FeatureUsage {
    return FeatureUsageFromJSONTyped(json, false);
}

export function FeatureUsageFromJSONTyped(json: any, ignoreDiscriminator: boolean): FeatureUsage {
    if (json == null) {
        return json;
    }
    return {
        
        'activeUsers': json['active_users'],
        'adoptionRatePercent': json['adoption_rate_percent'],
        'feature': json['feature'],
        'growthRatePercent': json['growth_rate_percent'],
        'organizations': json['organizations'],
        'revenue': json['revenue'],
        'totalUsage': json['total_usage'],
    };
}

export function FeatureUsageToJSON(json: any): FeatureUsage {
    return FeatureUsageToJSONTyped(json, false);
}

export function FeatureUsageToJSONTyped(value?: FeatureUsage | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'active_users': value['activeUsers'],
        'adoption_rate_percent': value['adoptionRatePercent'],
        'feature': value['feature'],
        'growth_rate_percent': value['growthRatePercent'],
        'organizations': value['organizations'],
        'revenue': value['revenue'],
        'total_usage': value['totalUsage'],
    };
}

