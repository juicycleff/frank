/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DataRetentionResult
 */
export interface DataRetentionResult {
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof DataRetentionResult
     */
    readonly $schema?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof DataRetentionResult
     */
    errors: Array<string> | null;
    /**
     * 
     * @type {Date}
     * @memberof DataRetentionResult
     */
    nextScheduled: Date;
    /**
     * 
     * @type {string}
     * @memberof DataRetentionResult
     */
    organizationId: string;
    /**
     * 
     * @type {Date}
     * @memberof DataRetentionResult
     */
    processedAt: Date;
    /**
     * 
     * @type {number}
     * @memberof DataRetentionResult
     */
    recordsArchived: number;
    /**
     * 
     * @type {number}
     * @memberof DataRetentionResult
     */
    recordsDeleted: number;
    /**
     * 
     * @type {number}
     * @memberof DataRetentionResult
     */
    recordsReviewed: number;
}

/**
 * Check if a given object implements the DataRetentionResult interface.
 */
export function instanceOfDataRetentionResult(value: object): value is DataRetentionResult {
    if (!('errors' in value) || value['errors'] === undefined) return false;
    if (!('nextScheduled' in value) || value['nextScheduled'] === undefined) return false;
    if (!('organizationId' in value) || value['organizationId'] === undefined) return false;
    if (!('processedAt' in value) || value['processedAt'] === undefined) return false;
    if (!('recordsArchived' in value) || value['recordsArchived'] === undefined) return false;
    if (!('recordsDeleted' in value) || value['recordsDeleted'] === undefined) return false;
    if (!('recordsReviewed' in value) || value['recordsReviewed'] === undefined) return false;
    return true;
}

export function DataRetentionResultFromJSON(json: any): DataRetentionResult {
    return DataRetentionResultFromJSONTyped(json, false);
}

export function DataRetentionResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): DataRetentionResult {
    if (json == null) {
        return json;
    }
    return {
        
        '$schema': json['$schema'] == null ? undefined : json['$schema'],
        'errors': json['errors'] == null ? null : json['errors'],
        'nextScheduled': (new Date(json['next_scheduled'])),
        'organizationId': json['organization_id'],
        'processedAt': (new Date(json['processed_at'])),
        'recordsArchived': json['records_archived'],
        'recordsDeleted': json['records_deleted'],
        'recordsReviewed': json['records_reviewed'],
    };
}

export function DataRetentionResultToJSON(json: any): DataRetentionResult {
    return DataRetentionResultToJSONTyped(json, false);
}

export function DataRetentionResultToJSONTyped(value?: Omit<DataRetentionResult, '$schema'> | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'errors': value['errors'],
        'next_scheduled': ((value['nextScheduled']).toISOString()),
        'organization_id': value['organizationId'],
        'processed_at': ((value['processedAt']).toISOString()),
        'records_archived': value['recordsArchived'],
        'records_deleted': value['recordsDeleted'],
        'records_reviewed': value['recordsReviewed'],
    };
}

