/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { FeatureClause } from './FeatureClause';
import {
    FeatureClauseFromJSON,
    FeatureClauseFromJSONTyped,
    FeatureClauseToJSON,
    FeatureClauseToJSONTyped,
} from './FeatureClause';
import type { FeatureRollout } from './FeatureRollout';
import {
    FeatureRolloutFromJSON,
    FeatureRolloutFromJSONTyped,
    FeatureRolloutToJSON,
    FeatureRolloutToJSONTyped,
} from './FeatureRollout';

/**
 * 
 * @export
 * @interface FeatureTargetingRule
 */
export interface FeatureTargetingRule {
    /**
     * 
     * @type {Array<FeatureClause>}
     * @memberof FeatureTargetingRule
     */
    clauses: Array<FeatureClause> | null;
    /**
     * 
     * @type {string}
     * @memberof FeatureTargetingRule
     */
    id: string;
    /**
     * 
     * @type {FeatureRollout}
     * @memberof FeatureTargetingRule
     */
    rollout?: FeatureRollout;
    /**
     * 
     * @type {string}
     * @memberof FeatureTargetingRule
     */
    variation: string;
}

/**
 * Check if a given object implements the FeatureTargetingRule interface.
 */
export function instanceOfFeatureTargetingRule(value: object): value is FeatureTargetingRule {
    if (!('clauses' in value) || value['clauses'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('variation' in value) || value['variation'] === undefined) return false;
    return true;
}

export function FeatureTargetingRuleFromJSON(json: any): FeatureTargetingRule {
    return FeatureTargetingRuleFromJSONTyped(json, false);
}

export function FeatureTargetingRuleFromJSONTyped(json: any, ignoreDiscriminator: boolean): FeatureTargetingRule {
    if (json == null) {
        return json;
    }
    return {
        
        'clauses': (json['clauses'] == null ? null : (json['clauses'] as Array<any>).map(FeatureClauseFromJSON)),
        'id': json['id'],
        'rollout': json['rollout'] == null ? undefined : FeatureRolloutFromJSON(json['rollout']),
        'variation': json['variation'],
    };
}

export function FeatureTargetingRuleToJSON(json: any): FeatureTargetingRule {
    return FeatureTargetingRuleToJSONTyped(json, false);
}

export function FeatureTargetingRuleToJSONTyped(value?: FeatureTargetingRule | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'clauses': (value['clauses'] == null ? null : (value['clauses'] as Array<any>).map(FeatureClauseToJSON)),
        'id': value['id'],
        'rollout': FeatureRolloutToJSON(value['rollout']),
        'variation': value['variation'],
    };
}

