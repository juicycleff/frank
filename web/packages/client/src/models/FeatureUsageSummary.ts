/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface FeatureUsageSummary
 */
export interface FeatureUsageSummary {
    /**
     * 
     * @type {number}
     * @memberof FeatureUsageSummary
     */
    activeFeatures: number;
    /**
     * 
     * @type {number}
     * @memberof FeatureUsageSummary
     */
    organizations: number;
    /**
     * 
     * @type {number}
     * @memberof FeatureUsageSummary
     */
    totalEvaluations: number;
    /**
     * 
     * @type {number}
     * @memberof FeatureUsageSummary
     */
    totalFeatures: number;
    /**
     * 
     * @type {number}
     * @memberof FeatureUsageSummary
     */
    users: number;
}

/**
 * Check if a given object implements the FeatureUsageSummary interface.
 */
export function instanceOfFeatureUsageSummary(value: object): value is FeatureUsageSummary {
    if (!('activeFeatures' in value) || value['activeFeatures'] === undefined) return false;
    if (!('organizations' in value) || value['organizations'] === undefined) return false;
    if (!('totalEvaluations' in value) || value['totalEvaluations'] === undefined) return false;
    if (!('totalFeatures' in value) || value['totalFeatures'] === undefined) return false;
    if (!('users' in value) || value['users'] === undefined) return false;
    return true;
}

export function FeatureUsageSummaryFromJSON(json: any): FeatureUsageSummary {
    return FeatureUsageSummaryFromJSONTyped(json, false);
}

export function FeatureUsageSummaryFromJSONTyped(json: any, ignoreDiscriminator: boolean): FeatureUsageSummary {
    if (json == null) {
        return json;
    }
    return {
        
        'activeFeatures': json['active_features'],
        'organizations': json['organizations'],
        'totalEvaluations': json['total_evaluations'],
        'totalFeatures': json['total_features'],
        'users': json['users'],
    };
}

export function FeatureUsageSummaryToJSON(json: any): FeatureUsageSummary {
    return FeatureUsageSummaryToJSONTyped(json, false);
}

export function FeatureUsageSummaryToJSONTyped(value?: FeatureUsageSummary | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'active_features': value['activeFeatures'],
        'organizations': value['organizations'],
        'total_evaluations': value['totalEvaluations'],
        'total_features': value['totalFeatures'],
        'users': value['users'],
    };
}

