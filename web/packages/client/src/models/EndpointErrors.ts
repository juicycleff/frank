/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface EndpointErrors
 */
export interface EndpointErrors {
    /**
     * 
     * @type {string}
     * @memberof EndpointErrors
     */
    endpoint: string;
    /**
     * 
     * @type {number}
     * @memberof EndpointErrors
     */
    errorRatePercent: number;
    /**
     * 
     * @type {number}
     * @memberof EndpointErrors
     */
    errors: number;
    /**
     * 
     * @type {string}
     * @memberof EndpointErrors
     */
    method: string;
    /**
     * 
     * @type {number}
     * @memberof EndpointErrors
     */
    total: number;
}

/**
 * Check if a given object implements the EndpointErrors interface.
 */
export function instanceOfEndpointErrors(value: object): value is EndpointErrors {
    if (!('endpoint' in value) || value['endpoint'] === undefined) return false;
    if (!('errorRatePercent' in value) || value['errorRatePercent'] === undefined) return false;
    if (!('errors' in value) || value['errors'] === undefined) return false;
    if (!('method' in value) || value['method'] === undefined) return false;
    if (!('total' in value) || value['total'] === undefined) return false;
    return true;
}

export function EndpointErrorsFromJSON(json: any): EndpointErrors {
    return EndpointErrorsFromJSONTyped(json, false);
}

export function EndpointErrorsFromJSONTyped(json: any, ignoreDiscriminator: boolean): EndpointErrors {
    if (json == null) {
        return json;
    }
    return {
        
        'endpoint': json['endpoint'],
        'errorRatePercent': json['error_rate_percent'],
        'errors': json['errors'],
        'method': json['method'],
        'total': json['total'],
    };
}

export function EndpointErrorsToJSON(json: any): EndpointErrors {
    return EndpointErrorsToJSONTyped(json, false);
}

export function EndpointErrorsToJSONTyped(value?: EndpointErrors | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'endpoint': value['endpoint'],
        'error_rate_percent': value['errorRatePercent'],
        'errors': value['errors'],
        'method': value['method'],
        'total': value['total'],
    };
}

