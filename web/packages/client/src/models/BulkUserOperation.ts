/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface BulkUserOperation
 */
export interface BulkUserOperation {
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof BulkUserOperation
     */
    readonly $schema?: string;
    /**
     * Operation to perform (activate, deactivate, block, unblock)
     * @type {string}
     * @memberof BulkUserOperation
     */
    operation: string;
    /**
     * Organization ID
     * @type {string}
     * @memberof BulkUserOperation
     */
    organizationId?: string;
    /**
     * Reason for operation
     * @type {string}
     * @memberof BulkUserOperation
     */
    reason?: string;
    /**
     * List of user IDs
     * @type {Array<string>}
     * @memberof BulkUserOperation
     */
    userIds: Array<string> | null;
}

/**
 * Check if a given object implements the BulkUserOperation interface.
 */
export function instanceOfBulkUserOperation(value: object): value is BulkUserOperation {
    if (!('operation' in value) || value['operation'] === undefined) return false;
    if (!('userIds' in value) || value['userIds'] === undefined) return false;
    return true;
}

export function BulkUserOperationFromJSON(json: any): BulkUserOperation {
    return BulkUserOperationFromJSONTyped(json, false);
}

export function BulkUserOperationFromJSONTyped(json: any, ignoreDiscriminator: boolean): BulkUserOperation {
    if (json == null) {
        return json;
    }
    return {
        
        '$schema': json['$schema'] == null ? undefined : json['$schema'],
        'operation': json['operation'],
        'organizationId': json['organizationId'] == null ? undefined : json['organizationId'],
        'reason': json['reason'] == null ? undefined : json['reason'],
        'userIds': json['userIds'] == null ? null : json['userIds'],
    };
}

export function BulkUserOperationToJSON(json: any): BulkUserOperation {
    return BulkUserOperationToJSONTyped(json, false);
}

export function BulkUserOperationToJSONTyped(value?: Omit<BulkUserOperation, '$schema'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'operation': value['operation'],
        'organizationId': value['organizationId'],
        'reason': value['reason'],
        'userIds': value['userIds'],
    };
}

