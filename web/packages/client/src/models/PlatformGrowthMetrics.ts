/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AcquisitionMetrics } from './AcquisitionMetrics';
import {
    AcquisitionMetricsFromJSON,
    AcquisitionMetricsFromJSONTyped,
    AcquisitionMetricsToJSON,
    AcquisitionMetricsToJSONTyped,
} from './AcquisitionMetrics';
import type { GrowthAPIMetrics } from './GrowthAPIMetrics';
import {
    GrowthAPIMetricsFromJSON,
    GrowthAPIMetricsFromJSONTyped,
    GrowthAPIMetricsToJSON,
    GrowthAPIMetricsToJSONTyped,
} from './GrowthAPIMetrics';
import type { GrowthRevenueMetrics } from './GrowthRevenueMetrics';
import {
    GrowthRevenueMetricsFromJSON,
    GrowthRevenueMetricsFromJSONTyped,
    GrowthRevenueMetricsToJSON,
    GrowthRevenueMetricsToJSONTyped,
} from './GrowthRevenueMetrics';
import type { GrowthOrgMetrics } from './GrowthOrgMetrics';
import {
    GrowthOrgMetricsFromJSON,
    GrowthOrgMetricsFromJSONTyped,
    GrowthOrgMetricsToJSON,
    GrowthOrgMetricsToJSONTyped,
} from './GrowthOrgMetrics';
import type { GrowthUserMetrics } from './GrowthUserMetrics';
import {
    GrowthUserMetricsFromJSON,
    GrowthUserMetricsFromJSONTyped,
    GrowthUserMetricsToJSON,
    GrowthUserMetricsToJSONTyped,
} from './GrowthUserMetrics';
import type { RetentionMetrics } from './RetentionMetrics';
import {
    RetentionMetricsFromJSON,
    RetentionMetricsFromJSONTyped,
    RetentionMetricsToJSON,
    RetentionMetricsToJSONTyped,
} from './RetentionMetrics';

/**
 * 
 * @export
 * @interface PlatformGrowthMetrics
 */
export interface PlatformGrowthMetrics {
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof PlatformGrowthMetrics
     */
    readonly $schema?: string;
    /**
     * 
     * @type {AcquisitionMetrics}
     * @memberof PlatformGrowthMetrics
     */
    acquisition: AcquisitionMetrics;
    /**
     * 
     * @type {GrowthAPIMetrics}
     * @memberof PlatformGrowthMetrics
     */
    api: GrowthAPIMetrics;
    /**
     * 
     * @type {Date}
     * @memberof PlatformGrowthMetrics
     */
    generatedAt: Date;
    /**
     * 
     * @type {GrowthOrgMetrics}
     * @memberof PlatformGrowthMetrics
     */
    organizations: GrowthOrgMetrics;
    /**
     * 
     * @type {string}
     * @memberof PlatformGrowthMetrics
     */
    period: string;
    /**
     * 
     * @type {RetentionMetrics}
     * @memberof PlatformGrowthMetrics
     */
    retention: RetentionMetrics;
    /**
     * 
     * @type {GrowthRevenueMetrics}
     * @memberof PlatformGrowthMetrics
     */
    revenue: GrowthRevenueMetrics;
    /**
     * 
     * @type {GrowthUserMetrics}
     * @memberof PlatformGrowthMetrics
     */
    users: GrowthUserMetrics;
}

/**
 * Check if a given object implements the PlatformGrowthMetrics interface.
 */
export function instanceOfPlatformGrowthMetrics(value: object): value is PlatformGrowthMetrics {
    if (!('acquisition' in value) || value['acquisition'] === undefined) return false;
    if (!('api' in value) || value['api'] === undefined) return false;
    if (!('generatedAt' in value) || value['generatedAt'] === undefined) return false;
    if (!('organizations' in value) || value['organizations'] === undefined) return false;
    if (!('period' in value) || value['period'] === undefined) return false;
    if (!('retention' in value) || value['retention'] === undefined) return false;
    if (!('revenue' in value) || value['revenue'] === undefined) return false;
    if (!('users' in value) || value['users'] === undefined) return false;
    return true;
}

export function PlatformGrowthMetricsFromJSON(json: any): PlatformGrowthMetrics {
    return PlatformGrowthMetricsFromJSONTyped(json, false);
}

export function PlatformGrowthMetricsFromJSONTyped(json: any, ignoreDiscriminator: boolean): PlatformGrowthMetrics {
    if (json == null) {
        return json;
    }
    return {
        
        '$schema': json['$schema'] == null ? undefined : json['$schema'],
        'acquisition': AcquisitionMetricsFromJSON(json['acquisition']),
        'api': GrowthAPIMetricsFromJSON(json['api']),
        'generatedAt': (new Date(json['generated_at'])),
        'organizations': GrowthOrgMetricsFromJSON(json['organizations']),
        'period': json['period'],
        'retention': RetentionMetricsFromJSON(json['retention']),
        'revenue': GrowthRevenueMetricsFromJSON(json['revenue']),
        'users': GrowthUserMetricsFromJSON(json['users']),
    };
}

export function PlatformGrowthMetricsToJSON(json: any): PlatformGrowthMetrics {
    return PlatformGrowthMetricsToJSONTyped(json, false);
}

export function PlatformGrowthMetricsToJSONTyped(value?: Omit<PlatformGrowthMetrics, '$schema'> | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'acquisition': AcquisitionMetricsToJSON(value['acquisition']),
        'api': GrowthAPIMetricsToJSON(value['api']),
        'generated_at': ((value['generatedAt']).toISOString()),
        'organizations': GrowthOrgMetricsToJSON(value['organizations']),
        'period': value['period'],
        'retention': RetentionMetricsToJSON(value['retention']),
        'revenue': GrowthRevenueMetricsToJSON(value['revenue']),
        'users': GrowthUserMetricsToJSON(value['users']),
    };
}

