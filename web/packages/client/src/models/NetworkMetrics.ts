/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface NetworkMetrics
 */
export interface NetworkMetrics {
    /**
     * 
     * @type {number}
     * @memberof NetworkMetrics
     */
    bandwidthUsagePercent: number;
    /**
     * 
     * @type {number}
     * @memberof NetworkMetrics
     */
    connectionCount: number;
    /**
     * 
     * @type {number}
     * @memberof NetworkMetrics
     */
    inboundTrafficBytes: number;
    /**
     * 
     * @type {number}
     * @memberof NetworkMetrics
     */
    outboundTrafficBytes: number;
    /**
     * 
     * @type {number}
     * @memberof NetworkMetrics
     */
    requestRatePerSecond: number;
}

/**
 * Check if a given object implements the NetworkMetrics interface.
 */
export function instanceOfNetworkMetrics(value: object): value is NetworkMetrics {
    if (!('bandwidthUsagePercent' in value) || value['bandwidthUsagePercent'] === undefined) return false;
    if (!('connectionCount' in value) || value['connectionCount'] === undefined) return false;
    if (!('inboundTrafficBytes' in value) || value['inboundTrafficBytes'] === undefined) return false;
    if (!('outboundTrafficBytes' in value) || value['outboundTrafficBytes'] === undefined) return false;
    if (!('requestRatePerSecond' in value) || value['requestRatePerSecond'] === undefined) return false;
    return true;
}

export function NetworkMetricsFromJSON(json: any): NetworkMetrics {
    return NetworkMetricsFromJSONTyped(json, false);
}

export function NetworkMetricsFromJSONTyped(json: any, ignoreDiscriminator: boolean): NetworkMetrics {
    if (json == null) {
        return json;
    }
    return {
        
        'bandwidthUsagePercent': json['bandwidth_usage_percent'],
        'connectionCount': json['connection_count'],
        'inboundTrafficBytes': json['inbound_traffic_bytes'],
        'outboundTrafficBytes': json['outbound_traffic_bytes'],
        'requestRatePerSecond': json['request_rate_per_second'],
    };
}

export function NetworkMetricsToJSON(json: any): NetworkMetrics {
    return NetworkMetricsToJSONTyped(json, false);
}

export function NetworkMetricsToJSONTyped(value?: NetworkMetrics | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'bandwidth_usage_percent': value['bandwidthUsagePercent'],
        'connection_count': value['connectionCount'],
        'inbound_traffic_bytes': value['inboundTrafficBytes'],
        'outbound_traffic_bytes': value['outboundTrafficBytes'],
        'request_rate_per_second': value['requestRatePerSecond'],
    };
}

