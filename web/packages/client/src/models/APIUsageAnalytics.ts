/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { APIErrorAnalysis } from './APIErrorAnalysis';
import {
    APIErrorAnalysisFromJSON,
    APIErrorAnalysisFromJSONTyped,
    APIErrorAnalysisToJSON,
    APIErrorAnalysisToJSONTyped,
} from './APIErrorAnalysis';
import type { EndpointUsage } from './EndpointUsage';
import {
    EndpointUsageFromJSON,
    EndpointUsageFromJSONTyped,
    EndpointUsageToJSON,
    EndpointUsageToJSONTyped,
} from './EndpointUsage';

/**
 * 
 * @export
 * @interface APIUsageAnalytics
 */
export interface APIUsageAnalytics {
    /**
     * 
     * @type {number}
     * @memberof APIUsageAnalytics
     */
    avgRequestsPerUser: number;
    /**
     * 
     * @type {APIErrorAnalysis}
     * @memberof APIUsageAnalytics
     */
    errorAnalysis: APIErrorAnalysis;
    /**
     * 
     * @type {Array<EndpointUsage>}
     * @memberof APIUsageAnalytics
     */
    topEndpoints: Array<EndpointUsage> | null;
    /**
     * 
     * @type {number}
     * @memberof APIUsageAnalytics
     */
    totalRequests: number;
    /**
     * 
     * @type {number}
     * @memberof APIUsageAnalytics
     */
    uniqueConsumers: number;
}

/**
 * Check if a given object implements the APIUsageAnalytics interface.
 */
export function instanceOfAPIUsageAnalytics(value: object): value is APIUsageAnalytics {
    if (!('avgRequestsPerUser' in value) || value['avgRequestsPerUser'] === undefined) return false;
    if (!('errorAnalysis' in value) || value['errorAnalysis'] === undefined) return false;
    if (!('topEndpoints' in value) || value['topEndpoints'] === undefined) return false;
    if (!('totalRequests' in value) || value['totalRequests'] === undefined) return false;
    if (!('uniqueConsumers' in value) || value['uniqueConsumers'] === undefined) return false;
    return true;
}

export function APIUsageAnalyticsFromJSON(json: any): APIUsageAnalytics {
    return APIUsageAnalyticsFromJSONTyped(json, false);
}

export function APIUsageAnalyticsFromJSONTyped(json: any, ignoreDiscriminator: boolean): APIUsageAnalytics {
    if (json == null) {
        return json;
    }
    return {
        
        'avgRequestsPerUser': json['avg_requests_per_user'],
        'errorAnalysis': APIErrorAnalysisFromJSON(json['error_analysis']),
        'topEndpoints': (json['top_endpoints'] == null ? null : (json['top_endpoints'] as Array<any>).map(EndpointUsageFromJSON)),
        'totalRequests': json['total_requests'],
        'uniqueConsumers': json['unique_consumers'],
    };
}

export function APIUsageAnalyticsToJSON(json: any): APIUsageAnalytics {
    return APIUsageAnalyticsToJSONTyped(json, false);
}

export function APIUsageAnalyticsToJSONTyped(value?: APIUsageAnalytics | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'avg_requests_per_user': value['avgRequestsPerUser'],
        'error_analysis': APIErrorAnalysisToJSON(value['errorAnalysis']),
        'top_endpoints': (value['topEndpoints'] == null ? null : (value['topEndpoints'] as Array<any>).map(EndpointUsageToJSON)),
        'total_requests': value['totalRequests'],
        'unique_consumers': value['uniqueConsumers'],
    };
}

