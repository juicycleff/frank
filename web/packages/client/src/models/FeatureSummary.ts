/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface FeatureSummary
 */
export interface FeatureSummary {
    [key: string]: any | any;
    /**
     * Feature configuration
     * @type {object}
     * @memberof FeatureSummary
     */
    config?: object;
    /**
     * Feature display name
     * @type {string}
     * @memberof FeatureSummary
     */
    displayName: string;
    /**
     * Whether feature is enabled
     * @type {boolean}
     * @memberof FeatureSummary
     */
    enabled: boolean;
    /**
     * Feature name
     * @type {string}
     * @memberof FeatureSummary
     */
    name: string;
    /**
     * Last update time
     * @type {Date}
     * @memberof FeatureSummary
     */
    updatedAt: Date;
}

/**
 * Check if a given object implements the FeatureSummary interface.
 */
export function instanceOfFeatureSummary(value: object): value is FeatureSummary {
    if (!('displayName' in value) || value['displayName'] === undefined) return false;
    if (!('enabled' in value) || value['enabled'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    return true;
}

export function FeatureSummaryFromJSON(json: any): FeatureSummary {
    return FeatureSummaryFromJSONTyped(json, false);
}

export function FeatureSummaryFromJSONTyped(json: any, ignoreDiscriminator: boolean): FeatureSummary {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        'config': json['config'] == null ? undefined : json['config'],
        'displayName': json['displayName'],
        'enabled': json['enabled'],
        'name': json['name'],
        'updatedAt': (new Date(json['updatedAt'])),
    };
}

export function FeatureSummaryToJSON(json: any): FeatureSummary {
    return FeatureSummaryToJSONTyped(json, false);
}

export function FeatureSummaryToJSONTyped(value?: FeatureSummary | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
            ...value,
        'config': value['config'],
        'displayName': value['displayName'],
        'enabled': value['enabled'],
        'name': value['name'],
        'updatedAt': ((value['updatedAt']).toISOString()),
    };
}

