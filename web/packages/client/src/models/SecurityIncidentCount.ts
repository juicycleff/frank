/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SecurityIncidentCount
 */
export interface SecurityIncidentCount {
    /**
     * 
     * @type {number}
     * @memberof SecurityIncidentCount
     */
    open: number;
    /**
     * 
     * @type {number}
     * @memberof SecurityIncidentCount
     */
    resolved: number;
    /**
     * 
     * @type {number}
     * @memberof SecurityIncidentCount
     */
    total: number;
}

/**
 * Check if a given object implements the SecurityIncidentCount interface.
 */
export function instanceOfSecurityIncidentCount(value: object): value is SecurityIncidentCount {
    if (!('open' in value) || value['open'] === undefined) return false;
    if (!('resolved' in value) || value['resolved'] === undefined) return false;
    if (!('total' in value) || value['total'] === undefined) return false;
    return true;
}

export function SecurityIncidentCountFromJSON(json: any): SecurityIncidentCount {
    return SecurityIncidentCountFromJSONTyped(json, false);
}

export function SecurityIncidentCountFromJSONTyped(json: any, ignoreDiscriminator: boolean): SecurityIncidentCount {
    if (json == null) {
        return json;
    }
    return {
        
        'open': json['open'],
        'resolved': json['resolved'],
        'total': json['total'],
    };
}

export function SecurityIncidentCountToJSON(json: any): SecurityIncidentCount {
    return SecurityIncidentCountToJSONTyped(json, false);
}

export function SecurityIncidentCountToJSONTyped(value?: SecurityIncidentCount | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'open': value['open'],
        'resolved': value['resolved'],
        'total': value['total'],
    };
}

