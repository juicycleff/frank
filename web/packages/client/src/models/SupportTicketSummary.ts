/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SupportTicketSummary
 */
export interface SupportTicketSummary {
    /**
     * 
     * @type {string}
     * @memberof SupportTicketSummary
     */
    assigneeId?: string;
    /**
     * 
     * @type {Date}
     * @memberof SupportTicketSummary
     */
    createdAt: Date;
    /**
     * 
     * @type {string}
     * @memberof SupportTicketSummary
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof SupportTicketSummary
     */
    organizationId?: string;
    /**
     * 
     * @type {string}
     * @memberof SupportTicketSummary
     */
    priority: string;
    /**
     * 
     * @type {number}
     * @memberof SupportTicketSummary
     */
    resolutionTimeHours?: number;
    /**
     * 
     * @type {Date}
     * @memberof SupportTicketSummary
     */
    resolvedAt?: Date;
    /**
     * 
     * @type {number}
     * @memberof SupportTicketSummary
     */
    responseTimeHours?: number;
    /**
     * 
     * @type {string}
     * @memberof SupportTicketSummary
     */
    status: string;
    /**
     * 
     * @type {string}
     * @memberof SupportTicketSummary
     */
    subject: string;
    /**
     * 
     * @type {Date}
     * @memberof SupportTicketSummary
     */
    updatedAt: Date;
    /**
     * 
     * @type {string}
     * @memberof SupportTicketSummary
     */
    userId: string;
    /**
     * 
     * @type {string}
     * @memberof SupportTicketSummary
     */
    userEmail: string;
}

/**
 * Check if a given object implements the SupportTicketSummary interface.
 */
export function instanceOfSupportTicketSummary(value: object): value is SupportTicketSummary {
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('priority' in value) || value['priority'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('subject' in value) || value['subject'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    if (!('userId' in value) || value['userId'] === undefined) return false;
    if (!('userEmail' in value) || value['userEmail'] === undefined) return false;
    return true;
}

export function SupportTicketSummaryFromJSON(json: any): SupportTicketSummary {
    return SupportTicketSummaryFromJSONTyped(json, false);
}

export function SupportTicketSummaryFromJSONTyped(json: any, ignoreDiscriminator: boolean): SupportTicketSummary {
    if (json == null) {
        return json;
    }
    return {
        
        'assigneeId': json['assigneeId'] == null ? undefined : json['assigneeId'],
        'createdAt': (new Date(json['createdAt'])),
        'id': json['id'],
        'organizationId': json['organizationId'] == null ? undefined : json['organizationId'],
        'priority': json['priority'],
        'resolutionTimeHours': json['resolutionTimeHours'] == null ? undefined : json['resolutionTimeHours'],
        'resolvedAt': json['resolvedAt'] == null ? undefined : (new Date(json['resolvedAt'])),
        'responseTimeHours': json['responseTimeHours'] == null ? undefined : json['responseTimeHours'],
        'status': json['status'],
        'subject': json['subject'],
        'updatedAt': (new Date(json['updatedAt'])),
        'userId': json['userId'],
        'userEmail': json['user_email'],
    };
}

export function SupportTicketSummaryToJSON(json: any): SupportTicketSummary {
    return SupportTicketSummaryToJSONTyped(json, false);
}

export function SupportTicketSummaryToJSONTyped(value?: SupportTicketSummary | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'assigneeId': value['assigneeId'],
        'createdAt': ((value['createdAt']).toISOString()),
        'id': value['id'],
        'organizationId': value['organizationId'],
        'priority': value['priority'],
        'resolutionTimeHours': value['resolutionTimeHours'],
        'resolvedAt': value['resolvedAt'] == null ? undefined : ((value['resolvedAt']).toISOString()),
        'responseTimeHours': value['responseTimeHours'],
        'status': value['status'],
        'subject': value['subject'],
        'updatedAt': ((value['updatedAt']).toISOString()),
        'userId': value['userId'],
        'user_email': value['userEmail'],
    };
}

