/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ErrorDetail } from './ErrorDetail';
import {
    ErrorDetailFromJSON,
    ErrorDetailFromJSONTyped,
    ErrorDetailToJSON,
    ErrorDetailToJSONTyped,
} from './ErrorDetail';

/**
 * 
 * @export
 * @interface ErrorRateStats
 */
export interface ErrorRateStats {
    /**
     * 
     * @type {string}
     * @memberof ErrorRateStats
     */
    errorTrend: string;
    /**
     * 
     * @type {{ [key: string]: number; }}
     * @memberof ErrorRateStats
     */
    errorsByCode: { [key: string]: number; };
    /**
     * 
     * @type {{ [key: string]: number; }}
     * @memberof ErrorRateStats
     */
    errorsByEndpoint: { [key: string]: number; };
    /**
     * 
     * @type {number}
     * @memberof ErrorRateStats
     */
    overallErrorRate: number;
    /**
     * 
     * @type {Array<ErrorDetail>}
     * @memberof ErrorRateStats
     */
    topErrors: Array<ErrorDetail> | null;
}

/**
 * Check if a given object implements the ErrorRateStats interface.
 */
export function instanceOfErrorRateStats(value: object): value is ErrorRateStats {
    if (!('errorTrend' in value) || value['errorTrend'] === undefined) return false;
    if (!('errorsByCode' in value) || value['errorsByCode'] === undefined) return false;
    if (!('errorsByEndpoint' in value) || value['errorsByEndpoint'] === undefined) return false;
    if (!('overallErrorRate' in value) || value['overallErrorRate'] === undefined) return false;
    if (!('topErrors' in value) || value['topErrors'] === undefined) return false;
    return true;
}

export function ErrorRateStatsFromJSON(json: any): ErrorRateStats {
    return ErrorRateStatsFromJSONTyped(json, false);
}

export function ErrorRateStatsFromJSONTyped(json: any, ignoreDiscriminator: boolean): ErrorRateStats {
    if (json == null) {
        return json;
    }
    return {
        
        'errorTrend': json['errorTrend'],
        'errorsByCode': json['errorsByCode'],
        'errorsByEndpoint': json['errorsByEndpoint'],
        'overallErrorRate': json['overallErrorRate'],
        'topErrors': (json['topErrors'] == null ? null : (json['topErrors'] as Array<any>).map(ErrorDetailFromJSON)),
    };
}

export function ErrorRateStatsToJSON(json: any): ErrorRateStats {
    return ErrorRateStatsToJSONTyped(json, false);
}

export function ErrorRateStatsToJSONTyped(value?: ErrorRateStats | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'errorTrend': value['errorTrend'],
        'errorsByCode': value['errorsByCode'],
        'errorsByEndpoint': value['errorsByEndpoint'],
        'overallErrorRate': value['overallErrorRate'],
        'topErrors': (value['topErrors'] == null ? null : (value['topErrors'] as Array<any>).map(ErrorDetailToJSON)),
    };
}

