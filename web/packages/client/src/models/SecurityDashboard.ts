/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SecurityCompliance } from './SecurityCompliance';
import {
    SecurityComplianceFromJSON,
    SecurityComplianceFromJSONTyped,
    SecurityComplianceToJSON,
    SecurityComplianceToJSONTyped,
} from './SecurityCompliance';
import type { SecurityOverview } from './SecurityOverview';
import {
    SecurityOverviewFromJSON,
    SecurityOverviewFromJSONTyped,
    SecurityOverviewToJSON,
    SecurityOverviewToJSONTyped,
} from './SecurityOverview';
import type { SecurityRecommendation } from './SecurityRecommendation';
import {
    SecurityRecommendationFromJSON,
    SecurityRecommendationFromJSONTyped,
    SecurityRecommendationToJSON,
    SecurityRecommendationToJSONTyped,
} from './SecurityRecommendation';
import type { VulnerabilitySummary } from './VulnerabilitySummary';
import {
    VulnerabilitySummaryFromJSON,
    VulnerabilitySummaryFromJSONTyped,
    VulnerabilitySummaryToJSON,
    VulnerabilitySummaryToJSONTyped,
} from './VulnerabilitySummary';
import type { ThreatSummary } from './ThreatSummary';
import {
    ThreatSummaryFromJSON,
    ThreatSummaryFromJSONTyped,
    ThreatSummaryToJSON,
    ThreatSummaryToJSONTyped,
} from './ThreatSummary';
import type { SecurityIncidentSummary } from './SecurityIncidentSummary';
import {
    SecurityIncidentSummaryFromJSON,
    SecurityIncidentSummaryFromJSONTyped,
    SecurityIncidentSummaryToJSON,
    SecurityIncidentSummaryToJSONTyped,
} from './SecurityIncidentSummary';

/**
 * 
 * @export
 * @interface SecurityDashboard
 */
export interface SecurityDashboard {
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof SecurityDashboard
     */
    readonly $schema?: string;
    /**
     * 
     * @type {SecurityCompliance}
     * @memberof SecurityDashboard
     */
    compliance: SecurityCompliance;
    /**
     * 
     * @type {Date}
     * @memberof SecurityDashboard
     */
    generatedAt: Date;
    /**
     * 
     * @type {SecurityOverview}
     * @memberof SecurityDashboard
     */
    overview: SecurityOverview;
    /**
     * 
     * @type {Array<SecurityIncidentSummary>}
     * @memberof SecurityDashboard
     */
    recentIncidents: Array<SecurityIncidentSummary> | null;
    /**
     * 
     * @type {Array<SecurityRecommendation>}
     * @memberof SecurityDashboard
     */
    recommendations: Array<SecurityRecommendation> | null;
    /**
     * 
     * @type {string}
     * @memberof SecurityDashboard
     */
    threatLevel: string;
    /**
     * 
     * @type {Array<ThreatSummary>}
     * @memberof SecurityDashboard
     */
    threats: Array<ThreatSummary> | null;
    /**
     * 
     * @type {Array<VulnerabilitySummary>}
     * @memberof SecurityDashboard
     */
    vulnerabilities: Array<VulnerabilitySummary> | null;
}

/**
 * Check if a given object implements the SecurityDashboard interface.
 */
export function instanceOfSecurityDashboard(value: object): value is SecurityDashboard {
    if (!('compliance' in value) || value['compliance'] === undefined) return false;
    if (!('generatedAt' in value) || value['generatedAt'] === undefined) return false;
    if (!('overview' in value) || value['overview'] === undefined) return false;
    if (!('recentIncidents' in value) || value['recentIncidents'] === undefined) return false;
    if (!('recommendations' in value) || value['recommendations'] === undefined) return false;
    if (!('threatLevel' in value) || value['threatLevel'] === undefined) return false;
    if (!('threats' in value) || value['threats'] === undefined) return false;
    if (!('vulnerabilities' in value) || value['vulnerabilities'] === undefined) return false;
    return true;
}

export function SecurityDashboardFromJSON(json: any): SecurityDashboard {
    return SecurityDashboardFromJSONTyped(json, false);
}

export function SecurityDashboardFromJSONTyped(json: any, ignoreDiscriminator: boolean): SecurityDashboard {
    if (json == null) {
        return json;
    }
    return {
        
        '$schema': json['$schema'] == null ? undefined : json['$schema'],
        'compliance': SecurityComplianceFromJSON(json['compliance']),
        'generatedAt': (new Date(json['generated_at'])),
        'overview': SecurityOverviewFromJSON(json['overview']),
        'recentIncidents': (json['recent_incidents'] == null ? null : (json['recent_incidents'] as Array<any>).map(SecurityIncidentSummaryFromJSON)),
        'recommendations': (json['recommendations'] == null ? null : (json['recommendations'] as Array<any>).map(SecurityRecommendationFromJSON)),
        'threatLevel': json['threat_level'],
        'threats': (json['threats'] == null ? null : (json['threats'] as Array<any>).map(ThreatSummaryFromJSON)),
        'vulnerabilities': (json['vulnerabilities'] == null ? null : (json['vulnerabilities'] as Array<any>).map(VulnerabilitySummaryFromJSON)),
    };
}

export function SecurityDashboardToJSON(json: any): SecurityDashboard {
    return SecurityDashboardToJSONTyped(json, false);
}

export function SecurityDashboardToJSONTyped(value?: Omit<SecurityDashboard, '$schema'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'compliance': SecurityComplianceToJSON(value['compliance']),
        'generated_at': ((value['generatedAt']).toISOString()),
        'overview': SecurityOverviewToJSON(value['overview']),
        'recent_incidents': (value['recentIncidents'] == null ? null : (value['recentIncidents'] as Array<any>).map(SecurityIncidentSummaryToJSON)),
        'recommendations': (value['recommendations'] == null ? null : (value['recommendations'] as Array<any>).map(SecurityRecommendationToJSON)),
        'threat_level': value['threatLevel'],
        'threats': (value['threats'] == null ? null : (value['threats'] as Array<any>).map(ThreatSummaryToJSON)),
        'vulnerabilities': (value['vulnerabilities'] == null ? null : (value['vulnerabilities'] as Array<any>).map(VulnerabilitySummaryToJSON)),
    };
}

