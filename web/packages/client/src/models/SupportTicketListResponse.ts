/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Pagination } from './Pagination';
import {
    PaginationFromJSON,
    PaginationFromJSONTyped,
    PaginationToJSON,
    PaginationToJSONTyped,
} from './Pagination';
import type { SupportTicketStats } from './SupportTicketStats';
import {
    SupportTicketStatsFromJSON,
    SupportTicketStatsFromJSONTyped,
    SupportTicketStatsToJSON,
    SupportTicketStatsToJSONTyped,
} from './SupportTicketStats';
import type { SupportTicketSummary } from './SupportTicketSummary';
import {
    SupportTicketSummaryFromJSON,
    SupportTicketSummaryFromJSONTyped,
    SupportTicketSummaryToJSON,
    SupportTicketSummaryToJSONTyped,
} from './SupportTicketSummary';

/**
 * 
 * @export
 * @interface SupportTicketListResponse
 */
export interface SupportTicketListResponse {
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof SupportTicketListResponse
     */
    readonly $schema?: string;
    /**
     * 
     * @type {Pagination}
     * @memberof SupportTicketListResponse
     */
    pagination: Pagination;
    /**
     * 
     * @type {SupportTicketStats}
     * @memberof SupportTicketListResponse
     */
    summary: SupportTicketStats;
    /**
     * 
     * @type {Array<SupportTicketSummary>}
     * @memberof SupportTicketListResponse
     */
    tickets: Array<SupportTicketSummary> | null;
}

/**
 * Check if a given object implements the SupportTicketListResponse interface.
 */
export function instanceOfSupportTicketListResponse(value: object): value is SupportTicketListResponse {
    if (!('pagination' in value) || value['pagination'] === undefined) return false;
    if (!('summary' in value) || value['summary'] === undefined) return false;
    if (!('tickets' in value) || value['tickets'] === undefined) return false;
    return true;
}

export function SupportTicketListResponseFromJSON(json: any): SupportTicketListResponse {
    return SupportTicketListResponseFromJSONTyped(json, false);
}

export function SupportTicketListResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): SupportTicketListResponse {
    if (json == null) {
        return json;
    }
    return {
        
        '$schema': json['$schema'] == null ? undefined : json['$schema'],
        'pagination': PaginationFromJSON(json['pagination']),
        'summary': SupportTicketStatsFromJSON(json['summary']),
        'tickets': (json['tickets'] == null ? null : (json['tickets'] as Array<any>).map(SupportTicketSummaryFromJSON)),
    };
}

export function SupportTicketListResponseToJSON(json: any): SupportTicketListResponse {
    return SupportTicketListResponseToJSONTyped(json, false);
}

export function SupportTicketListResponseToJSONTyped(value?: Omit<SupportTicketListResponse, '$schema'> | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'pagination': PaginationToJSON(value['pagination']),
        'summary': SupportTicketStatsToJSON(value['summary']),
        'tickets': (value['tickets'] == null ? null : (value['tickets'] as Array<any>).map(SupportTicketSummaryToJSON)),
    };
}

