/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface LogoutRequest
 */
export interface LogoutRequest {
    [key: string]: any | any;
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof LogoutRequest
     */
    readonly $schema?: string;
    /**
     * Whether to logout from all devices
     * @type {boolean}
     * @memberof LogoutRequest
     */
    logoutAll: boolean;
    /**
     * Refresh token to revoke
     * @type {string}
     * @memberof LogoutRequest
     */
    refreshToken?: string;
    /**
     * Specific session to logout
     * @type {string}
     * @memberof LogoutRequest
     */
    sessionId?: string;
}

/**
 * Check if a given object implements the LogoutRequest interface.
 */
export function instanceOfLogoutRequest(value: object): value is LogoutRequest {
    if (!('logoutAll' in value) || value['logoutAll'] === undefined) return false;
    return true;
}

export function LogoutRequestFromJSON(json: any): LogoutRequest {
    return LogoutRequestFromJSONTyped(json, false);
}

export function LogoutRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): LogoutRequest {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        '$schema': json['$schema'] == null ? undefined : json['$schema'],
        'logoutAll': json['logoutAll'],
        'refreshToken': json['refreshToken'] == null ? undefined : json['refreshToken'],
        'sessionId': json['sessionId'] == null ? undefined : json['sessionId'],
    };
}

export function LogoutRequestToJSON(json: any): LogoutRequest {
    return LogoutRequestToJSONTyped(json, false);
}

export function LogoutRequestToJSONTyped(value?: Omit<LogoutRequest, '$schema'> | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
            ...value,
        'logoutAll': value['logoutAll'],
        'refreshToken': value['refreshToken'],
        'sessionId': value['sessionId'],
    };
}

