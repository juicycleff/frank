/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UserActivitySummary
 */
export interface UserActivitySummary {
    /**
     * User email
     * @type {string}
     * @memberof UserActivitySummary
     */
    email: string;
    /**
     * Number of events
     * @type {number}
     * @memberof UserActivitySummary
     */
    eventCount: number;
    /**
     * Last activity time
     * @type {Date}
     * @memberof UserActivitySummary
     */
    lastActivity: Date;
    /**
     * User name
     * @type {string}
     * @memberof UserActivitySummary
     */
    name: string;
    /**
     * User ID
     * @type {string}
     * @memberof UserActivitySummary
     */
    userId: string;
}

/**
 * Check if a given object implements the UserActivitySummary interface.
 */
export function instanceOfUserActivitySummary(value: object): value is UserActivitySummary {
    if (!('email' in value) || value['email'] === undefined) return false;
    if (!('eventCount' in value) || value['eventCount'] === undefined) return false;
    if (!('lastActivity' in value) || value['lastActivity'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('userId' in value) || value['userId'] === undefined) return false;
    return true;
}

export function UserActivitySummaryFromJSON(json: any): UserActivitySummary {
    return UserActivitySummaryFromJSONTyped(json, false);
}

export function UserActivitySummaryFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserActivitySummary {
    if (json == null) {
        return json;
    }
    return {
        
        'email': json['email'],
        'eventCount': json['eventCount'],
        'lastActivity': (new Date(json['lastActivity'])),
        'name': json['name'],
        'userId': json['userId'],
    };
}

export function UserActivitySummaryToJSON(json: any): UserActivitySummary {
    return UserActivitySummaryToJSONTyped(json, false);
}

export function UserActivitySummaryToJSONTyped(value?: UserActivitySummary | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'email': value['email'],
        'eventCount': value['eventCount'],
        'lastActivity': ((value['lastActivity']).toISOString()),
        'name': value['name'],
        'userId': value['userId'],
    };
}

