/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface RetryWebhookEventResponse
 */
export interface RetryWebhookEventResponse {
    [key: string]: any | any;
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof RetryWebhookEventResponse
     */
    readonly $schema?: string;
    /**
     * Request duration in milliseconds
     * @type {number}
     * @memberof RetryWebhookEventResponse
     */
    duration?: number;
    /**
     * Error message if failed
     * @type {string}
     * @memberof RetryWebhookEventResponse
     */
    error?: string;
    /**
     * Next retry time
     * @type {Date}
     * @memberof RetryWebhookEventResponse
     */
    nextRetry?: Date;
    /**
     * HTTP status code
     * @type {number}
     * @memberof RetryWebhookEventResponse
     */
    statusCode?: number;
    /**
     * Whether retry was initiated
     * @type {boolean}
     * @memberof RetryWebhookEventResponse
     */
    success: boolean;
}

/**
 * Check if a given object implements the RetryWebhookEventResponse interface.
 */
export function instanceOfRetryWebhookEventResponse(value: object): value is RetryWebhookEventResponse {
    if (!('success' in value) || value['success'] === undefined) return false;
    return true;
}

export function RetryWebhookEventResponseFromJSON(json: any): RetryWebhookEventResponse {
    return RetryWebhookEventResponseFromJSONTyped(json, false);
}

export function RetryWebhookEventResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): RetryWebhookEventResponse {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        '$schema': json['$schema'] == null ? undefined : json['$schema'],
        'duration': json['duration'] == null ? undefined : json['duration'],
        'error': json['error'] == null ? undefined : json['error'],
        'nextRetry': json['nextRetry'] == null ? undefined : (new Date(json['nextRetry'])),
        'statusCode': json['statusCode'] == null ? undefined : json['statusCode'],
        'success': json['success'],
    };
}

export function RetryWebhookEventResponseToJSON(json: any): RetryWebhookEventResponse {
    return RetryWebhookEventResponseToJSONTyped(json, false);
}

export function RetryWebhookEventResponseToJSONTyped(value?: Omit<RetryWebhookEventResponse, '$schema'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
            ...value,
        'duration': value['duration'],
        'error': value['error'],
        'nextRetry': value['nextRetry'] == null ? undefined : ((value['nextRetry']).toISOString()),
        'statusCode': value['statusCode'],
        'success': value['success'],
    };
}

