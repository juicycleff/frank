/* tslint:disable */
/* eslint-disable */
/**
 * My Project
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface MembershipSummary
 */
export interface MembershipSummary {
    /**
     * Creation timestamp
     * @type {Date}
     * @memberof MembershipSummary
     */
    createdAt: Date;
    /**
     * Membership ID
     * @type {string}
     * @memberof MembershipSummary
     */
    id: string;
    /**
     * Billing contact status
     * @type {boolean}
     * @memberof MembershipSummary
     */
    isBillingContact: boolean;
    /**
     * Primary contact status
     * @type {boolean}
     * @memberof MembershipSummary
     */
    isPrimaryContact: boolean;
    /**
     * Join timestamp
     * @type {Date}
     * @memberof MembershipSummary
     */
    joinedAt?: Date;
    /**
     * Organization ID
     * @type {string}
     * @memberof MembershipSummary
     */
    organizationId: string;
    /**
     * Organization name
     * @type {string}
     * @memberof MembershipSummary
     */
    organizationName: string;
    /**
     * Role name
     * @type {string}
     * @memberof MembershipSummary
     */
    roleName: string;
    /**
     * Membership status
     * @type {string}
     * @memberof MembershipSummary
     */
    status: string;
    /**
     * User email
     * @type {string}
     * @memberof MembershipSummary
     */
    userEmail: string;
    /**
     * User ID
     * @type {string}
     * @memberof MembershipSummary
     */
    userId: string;
    /**
     * User full name
     * @type {string}
     * @memberof MembershipSummary
     */
    userName: string;
}

export function MembershipSummaryFromJSON(json: any): MembershipSummary {
    return MembershipSummaryFromJSONTyped(json, false);
}

export function MembershipSummaryFromJSONTyped(json: any, ignoreDiscriminator: boolean): MembershipSummary {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'createdAt': (new Date(json['createdAt'])),
        'id': json['id'],
        'isBillingContact': json['isBillingContact'],
        'isPrimaryContact': json['isPrimaryContact'],
        'joinedAt': !exists(json, 'joinedAt') ? undefined : (new Date(json['joinedAt'])),
        'organizationId': json['organizationId'],
        'organizationName': json['organizationName'],
        'roleName': json['roleName'],
        'status': json['status'],
        'userEmail': json['userEmail'],
        'userId': json['userId'],
        'userName': json['userName'],
    };
}

export function MembershipSummaryToJSON(value?: MembershipSummary | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'createdAt': (value.createdAt.toISOString()),
        'id': value.id,
        'isBillingContact': value.isBillingContact,
        'isPrimaryContact': value.isPrimaryContact,
        'joinedAt': value.joinedAt === undefined ? undefined : (value.joinedAt.toISOString()),
        'organizationId': value.organizationId,
        'organizationName': value.organizationName,
        'roleName': value.roleName,
        'status': value.status,
        'userEmail': value.userEmail,
        'userId': value.userId,
        'userName': value.userName,
    };
}


