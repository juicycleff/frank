/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface RecentAssessment
 */
export interface RecentAssessment {
    /**
     * 
     * @type {string}
     * @memberof RecentAssessment
     */
    date: string;
    /**
     * 
     * @type {string}
     * @memberof RecentAssessment
     */
    framework: string;
    /**
     * 
     * @type {number}
     * @memberof RecentAssessment
     */
    score: number;
    /**
     * 
     * @type {string}
     * @memberof RecentAssessment
     */
    status: string;
}

/**
 * Check if a given object implements the RecentAssessment interface.
 */
export function instanceOfRecentAssessment(value: object): value is RecentAssessment {
    if (!('date' in value) || value['date'] === undefined) return false;
    if (!('framework' in value) || value['framework'] === undefined) return false;
    if (!('score' in value) || value['score'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    return true;
}

export function RecentAssessmentFromJSON(json: any): RecentAssessment {
    return RecentAssessmentFromJSONTyped(json, false);
}

export function RecentAssessmentFromJSONTyped(json: any, ignoreDiscriminator: boolean): RecentAssessment {
    if (json == null) {
        return json;
    }
    return {
        
        'date': json['date'],
        'framework': json['framework'],
        'score': json['score'],
        'status': json['status'],
    };
}

export function RecentAssessmentToJSON(json: any): RecentAssessment {
    return RecentAssessmentToJSONTyped(json, false);
}

export function RecentAssessmentToJSONTyped(value?: RecentAssessment | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'date': value['date'],
        'framework': value['framework'],
        'score': value['score'],
        'status': value['status'],
    };
}

