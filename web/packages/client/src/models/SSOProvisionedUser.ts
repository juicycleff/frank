/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SSOProvisionedUser
 */
export interface SSOProvisionedUser {
    [key: string]: any | any;
    /**
     * Whether user was newly created
     * @type {boolean}
     * @memberof SSOProvisionedUser
     */
    created: boolean;
    /**
     * User email
     * @type {string}
     * @memberof SSOProvisionedUser
     */
    email: string;
    /**
     * Created user ID
     * @type {string}
     * @memberof SSOProvisionedUser
     */
    userId: string;
}

/**
 * Check if a given object implements the SSOProvisionedUser interface.
 */
export function instanceOfSSOProvisionedUser(value: object): value is SSOProvisionedUser {
    if (!('created' in value) || value['created'] === undefined) return false;
    if (!('email' in value) || value['email'] === undefined) return false;
    if (!('userId' in value) || value['userId'] === undefined) return false;
    return true;
}

export function SSOProvisionedUserFromJSON(json: any): SSOProvisionedUser {
    return SSOProvisionedUserFromJSONTyped(json, false);
}

export function SSOProvisionedUserFromJSONTyped(json: any, ignoreDiscriminator: boolean): SSOProvisionedUser {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        'created': json['created'],
        'email': json['email'],
        'userId': json['userId'],
    };
}

export function SSOProvisionedUserToJSON(json: any): SSOProvisionedUser {
    return SSOProvisionedUserToJSONTyped(json, false);
}

export function SSOProvisionedUserToJSONTyped(value?: SSOProvisionedUser | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
            ...value,
        'created': value['created'],
        'email': value['email'],
        'userId': value['userId'],
    };
}

