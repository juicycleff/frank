/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SubscriptionEvent
 */
export interface SubscriptionEvent {
    [key: string]: any | any;
    /**
     * 
     * @type {Date}
     * @memberof SubscriptionEvent
     */
    createdAt: Date;
    /**
     * 
     * @type {string}
     * @memberof SubscriptionEvent
     */
    createdBy?: string;
    /**
     * 
     * @type {string}
     * @memberof SubscriptionEvent
     */
    description: string;
    /**
     * 
     * @type {string}
     * @memberof SubscriptionEvent
     */
    id: string;
    /**
     * 
     * @type {object}
     * @memberof SubscriptionEvent
     */
    metadata?: object;
    /**
     * 
     * @type {string}
     * @memberof SubscriptionEvent
     */
    type: string;
}

/**
 * Check if a given object implements the SubscriptionEvent interface.
 */
export function instanceOfSubscriptionEvent(value: object): value is SubscriptionEvent {
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    return true;
}

export function SubscriptionEventFromJSON(json: any): SubscriptionEvent {
    return SubscriptionEventFromJSONTyped(json, false);
}

export function SubscriptionEventFromJSONTyped(json: any, ignoreDiscriminator: boolean): SubscriptionEvent {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        'createdAt': (new Date(json['created_at'])),
        'createdBy': json['created_by'] == null ? undefined : json['created_by'],
        'description': json['description'],
        'id': json['id'],
        'metadata': json['metadata'] == null ? undefined : json['metadata'],
        'type': json['type'],
    };
}

export function SubscriptionEventToJSON(json: any): SubscriptionEvent {
    return SubscriptionEventToJSONTyped(json, false);
}

export function SubscriptionEventToJSONTyped(value?: SubscriptionEvent | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
            ...value,
        'created_at': ((value['createdAt']).toISOString()),
        'created_by': value['createdBy'],
        'description': value['description'],
        'id': value['id'],
        'metadata': value['metadata'],
        'type': value['type'],
    };
}

