/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CompensatingControl
 */
export interface CompensatingControl {
    /**
     * 
     * @type {string}
     * @memberof CompensatingControl
     */
    control: string;
    /**
     * 
     * @type {string}
     * @memberof CompensatingControl
     */
    justification: string;
    /**
     * 
     * @type {string}
     * @memberof CompensatingControl
     */
    requirementNumber: string;
    /**
     * 
     * @type {Date}
     * @memberof CompensatingControl
     */
    reviewDate: Date;
    /**
     * 
     * @type {string}
     * @memberof CompensatingControl
     */
    status: string;
    /**
     * 
     * @type {string}
     * @memberof CompensatingControl
     */
    validation: string;
}

/**
 * Check if a given object implements the CompensatingControl interface.
 */
export function instanceOfCompensatingControl(value: object): value is CompensatingControl {
    if (!('control' in value) || value['control'] === undefined) return false;
    if (!('justification' in value) || value['justification'] === undefined) return false;
    if (!('requirementNumber' in value) || value['requirementNumber'] === undefined) return false;
    if (!('reviewDate' in value) || value['reviewDate'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('validation' in value) || value['validation'] === undefined) return false;
    return true;
}

export function CompensatingControlFromJSON(json: any): CompensatingControl {
    return CompensatingControlFromJSONTyped(json, false);
}

export function CompensatingControlFromJSONTyped(json: any, ignoreDiscriminator: boolean): CompensatingControl {
    if (json == null) {
        return json;
    }
    return {
        
        'control': json['control'],
        'justification': json['justification'],
        'requirementNumber': json['requirement_number'],
        'reviewDate': (new Date(json['review_date'])),
        'status': json['status'],
        'validation': json['validation'],
    };
}

export function CompensatingControlToJSON(json: any): CompensatingControl {
    return CompensatingControlToJSONTyped(json, false);
}

export function CompensatingControlToJSONTyped(value?: CompensatingControl | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'control': value['control'],
        'justification': value['justification'],
        'requirement_number': value['requirementNumber'],
        'review_date': ((value['reviewDate']).toISOString()),
        'status': value['status'],
        'validation': value['validation'],
    };
}

