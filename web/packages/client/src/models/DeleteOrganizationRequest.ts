/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DeleteOrganizationRequest
 */
export interface DeleteOrganizationRequest {
    [key: string]: any | any;
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof DeleteOrganizationRequest
     */
    readonly $schema?: string;
    /**
     * Confirmation of deletion
     * @type {boolean}
     * @memberof DeleteOrganizationRequest
     */
    confirm: boolean;
    /**
     * Data retention period in days
     * @type {number}
     * @memberof DeleteOrganizationRequest
     */
    dataRetention: number;
    /**
     * Whether to notify members
     * @type {boolean}
     * @memberof DeleteOrganizationRequest
     */
    notifyMembers: boolean;
    /**
     * Reason for deletion
     * @type {string}
     * @memberof DeleteOrganizationRequest
     */
    reason?: string;
}

/**
 * Check if a given object implements the DeleteOrganizationRequest interface.
 */
export function instanceOfDeleteOrganizationRequest(value: object): value is DeleteOrganizationRequest {
    if (!('confirm' in value) || value['confirm'] === undefined) return false;
    if (!('dataRetention' in value) || value['dataRetention'] === undefined) return false;
    if (!('notifyMembers' in value) || value['notifyMembers'] === undefined) return false;
    return true;
}

export function DeleteOrganizationRequestFromJSON(json: any): DeleteOrganizationRequest {
    return DeleteOrganizationRequestFromJSONTyped(json, false);
}

export function DeleteOrganizationRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): DeleteOrganizationRequest {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        '$schema': json['$schema'] == null ? undefined : json['$schema'],
        'confirm': json['confirm'],
        'dataRetention': json['dataRetention'],
        'notifyMembers': json['notifyMembers'],
        'reason': json['reason'] == null ? undefined : json['reason'],
    };
}

export function DeleteOrganizationRequestToJSON(json: any): DeleteOrganizationRequest {
    return DeleteOrganizationRequestToJSONTyped(json, false);
}

export function DeleteOrganizationRequestToJSONTyped(value?: Omit<DeleteOrganizationRequest, '$schema'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
            ...value,
        'confirm': value['confirm'],
        'dataRetention': value['dataRetention'],
        'notifyMembers': value['notifyMembers'],
        'reason': value['reason'],
    };
}

