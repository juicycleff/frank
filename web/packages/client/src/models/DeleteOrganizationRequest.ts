/* tslint:disable */
/* eslint-disable */
/**
 * My Project
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DeleteOrganizationRequest
 */
export interface DeleteOrganizationRequest {
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof DeleteOrganizationRequest
     */
    readonly $schema?: string;
    /**
     * Confirmation of deletion
     * @type {boolean}
     * @memberof DeleteOrganizationRequest
     */
    confirm: boolean;
    /**
     * Data retention period in days
     * @type {number}
     * @memberof DeleteOrganizationRequest
     */
    dataRetention: number;
    /**
     * Whether to notify members
     * @type {boolean}
     * @memberof DeleteOrganizationRequest
     */
    notifyMembers: boolean;
    /**
     * Reason for deletion
     * @type {string}
     * @memberof DeleteOrganizationRequest
     */
    reason?: string;
}

export function DeleteOrganizationRequestFromJSON(json: any): DeleteOrganizationRequest {
    return DeleteOrganizationRequestFromJSONTyped(json, false);
}

export function DeleteOrganizationRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): DeleteOrganizationRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        '$schema': !exists(json, '$schema') ? undefined : json['$schema'],
        'confirm': json['confirm'],
        'dataRetention': json['dataRetention'],
        'notifyMembers': json['notifyMembers'],
        'reason': !exists(json, 'reason') ? undefined : json['reason'],
    };
}

export function DeleteOrganizationRequestToJSON(value?: DeleteOrganizationRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'confirm': value.confirm,
        'dataRetention': value.dataRetention,
        'notifyMembers': value.notifyMembers,
        'reason': value.reason,
    };
}


