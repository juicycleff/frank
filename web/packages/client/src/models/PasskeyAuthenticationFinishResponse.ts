/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { User } from './User';
import {
    UserFromJSON,
    UserFromJSONTyped,
    UserToJSON,
    UserToJSONTyped,
} from './User';

/**
 * 
 * @export
 * @interface PasskeyAuthenticationFinishResponse
 */
export interface PasskeyAuthenticationFinishResponse {
    [key: string]: any | any;
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof PasskeyAuthenticationFinishResponse
     */
    readonly $schema?: string;
    /**
     * Access token
     * @type {string}
     * @memberof PasskeyAuthenticationFinishResponse
     */
    accessToken?: string;
    /**
     * Token expiration in seconds
     * @type {number}
     * @memberof PasskeyAuthenticationFinishResponse
     */
    expiresIn?: number;
    /**
     * Success message
     * @type {string}
     * @memberof PasskeyAuthenticationFinishResponse
     */
    message: string;
    /**
     * Refresh token
     * @type {string}
     * @memberof PasskeyAuthenticationFinishResponse
     */
    refreshToken?: string;
    /**
     * Whether authentication was successful
     * @type {boolean}
     * @memberof PasskeyAuthenticationFinishResponse
     */
    success: boolean;
    /**
     * Authenticated user
     * @type {User}
     * @memberof PasskeyAuthenticationFinishResponse
     */
    user: User;
}

/**
 * Check if a given object implements the PasskeyAuthenticationFinishResponse interface.
 */
export function instanceOfPasskeyAuthenticationFinishResponse(value: object): value is PasskeyAuthenticationFinishResponse {
    if (!('message' in value) || value['message'] === undefined) return false;
    if (!('success' in value) || value['success'] === undefined) return false;
    if (!('user' in value) || value['user'] === undefined) return false;
    return true;
}

export function PasskeyAuthenticationFinishResponseFromJSON(json: any): PasskeyAuthenticationFinishResponse {
    return PasskeyAuthenticationFinishResponseFromJSONTyped(json, false);
}

export function PasskeyAuthenticationFinishResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): PasskeyAuthenticationFinishResponse {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        '$schema': json['$schema'] == null ? undefined : json['$schema'],
        'accessToken': json['accessToken'] == null ? undefined : json['accessToken'],
        'expiresIn': json['expiresIn'] == null ? undefined : json['expiresIn'],
        'message': json['message'],
        'refreshToken': json['refreshToken'] == null ? undefined : json['refreshToken'],
        'success': json['success'],
        'user': UserFromJSON(json['user']),
    };
}

export function PasskeyAuthenticationFinishResponseToJSON(json: any): PasskeyAuthenticationFinishResponse {
    return PasskeyAuthenticationFinishResponseToJSONTyped(json, false);
}

export function PasskeyAuthenticationFinishResponseToJSONTyped(value?: Omit<PasskeyAuthenticationFinishResponse, '$schema'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
            ...value,
        'accessToken': value['accessToken'],
        'expiresIn': value['expiresIn'],
        'message': value['message'],
        'refreshToken': value['refreshToken'],
        'success': value['success'],
        'user': UserToJSON(value['user']),
    };
}

