/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UpdateWebhookRequest
 */
export interface UpdateWebhookRequest {
    [key: string]: any | any;
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof UpdateWebhookRequest
     */
    readonly $schema?: string;
    /**
     * Updated active status
     * @type {boolean}
     * @memberof UpdateWebhookRequest
     */
    active?: boolean;
    /**
     * Updated event types
     * @type {Array<string>}
     * @memberof UpdateWebhookRequest
     */
    eventTypes?: Array<string>;
    /**
     * Updated headers
     * @type {{ [key: string]: string; }}
     * @memberof UpdateWebhookRequest
     */
    headers?: { [key: string]: string; };
    /**
     * Updated metadata
     * @type {object}
     * @memberof UpdateWebhookRequest
     */
    metadata?: object;
    /**
     * Updated name
     * @type {string}
     * @memberof UpdateWebhookRequest
     */
    name?: string;
    /**
     * Updated retry count
     * @type {number}
     * @memberof UpdateWebhookRequest
     */
    retryCount?: number;
    /**
     * Updated secret
     * @type {string}
     * @memberof UpdateWebhookRequest
     */
    secret?: string;
    /**
     * Updated timeout
     * @type {number}
     * @memberof UpdateWebhookRequest
     */
    timeoutMs?: number;
    /**
     * Updated URL
     * @type {string}
     * @memberof UpdateWebhookRequest
     */
    url?: string;
}

/**
 * Check if a given object implements the UpdateWebhookRequest interface.
 */
export function instanceOfUpdateWebhookRequest(value: object): value is UpdateWebhookRequest {
    return true;
}

export function UpdateWebhookRequestFromJSON(json: any): UpdateWebhookRequest {
    return UpdateWebhookRequestFromJSONTyped(json, false);
}

export function UpdateWebhookRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateWebhookRequest {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        '$schema': json['$schema'] == null ? undefined : json['$schema'],
        'active': json['active'] == null ? undefined : json['active'],
        'eventTypes': json['eventTypes'] == null ? undefined : json['eventTypes'],
        'headers': json['headers'] == null ? undefined : json['headers'],
        'metadata': json['metadata'] == null ? undefined : json['metadata'],
        'name': json['name'] == null ? undefined : json['name'],
        'retryCount': json['retryCount'] == null ? undefined : json['retryCount'],
        'secret': json['secret'] == null ? undefined : json['secret'],
        'timeoutMs': json['timeoutMs'] == null ? undefined : json['timeoutMs'],
        'url': json['url'] == null ? undefined : json['url'],
    };
}

export function UpdateWebhookRequestToJSON(json: any): UpdateWebhookRequest {
    return UpdateWebhookRequestToJSONTyped(json, false);
}

export function UpdateWebhookRequestToJSONTyped(value?: Omit<UpdateWebhookRequest, '$schema'> | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
            ...value,
        'active': value['active'],
        'eventTypes': value['eventTypes'],
        'headers': value['headers'],
        'metadata': value['metadata'],
        'name': value['name'],
        'retryCount': value['retryCount'],
        'secret': value['secret'],
        'timeoutMs': value['timeoutMs'],
        'url': value['url'],
    };
}

