/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ResourceMetric
 */
export interface ResourceMetric {
    /**
     * 
     * @type {number}
     * @memberof ResourceMetric
     */
    averagePercent: number;
    /**
     * 
     * @type {number}
     * @memberof ResourceMetric
     */
    currentPercent: number;
    /**
     * 
     * @type {number}
     * @memberof ResourceMetric
     */
    peakPercent: number;
    /**
     * 
     * @type {string}
     * @memberof ResourceMetric
     */
    trend: string;
}

/**
 * Check if a given object implements the ResourceMetric interface.
 */
export function instanceOfResourceMetric(value: object): value is ResourceMetric {
    if (!('averagePercent' in value) || value['averagePercent'] === undefined) return false;
    if (!('currentPercent' in value) || value['currentPercent'] === undefined) return false;
    if (!('peakPercent' in value) || value['peakPercent'] === undefined) return false;
    if (!('trend' in value) || value['trend'] === undefined) return false;
    return true;
}

export function ResourceMetricFromJSON(json: any): ResourceMetric {
    return ResourceMetricFromJSONTyped(json, false);
}

export function ResourceMetricFromJSONTyped(json: any, ignoreDiscriminator: boolean): ResourceMetric {
    if (json == null) {
        return json;
    }
    return {
        
        'averagePercent': json['average_percent'],
        'currentPercent': json['current_percent'],
        'peakPercent': json['peak_percent'],
        'trend': json['trend'],
    };
}

export function ResourceMetricToJSON(json: any): ResourceMetric {
    return ResourceMetricToJSONTyped(json, false);
}

export function ResourceMetricToJSONTyped(value?: ResourceMetric | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'average_percent': value['averagePercent'],
        'current_percent': value['currentPercent'],
        'peak_percent': value['peakPercent'],
        'trend': value['trend'],
    };
}

