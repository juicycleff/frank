/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface GrowthMetrics
 */
export interface GrowthMetrics {
    /**
     * 
     * @type {number}
     * @memberof GrowthMetrics
     */
    monthOverMonth: number;
    /**
     * 
     * @type {number}
     * @memberof GrowthMetrics
     */
    requestGrowth: number;
    /**
     * 
     * @type {number}
     * @memberof GrowthMetrics
     */
    userGrowth: number;
    /**
     * 
     * @type {number}
     * @memberof GrowthMetrics
     */
    weekOverWeek: number;
    /**
     * 
     * @type {number}
     * @memberof GrowthMetrics
     */
    yearOverYear: number;
}

/**
 * Check if a given object implements the GrowthMetrics interface.
 */
export function instanceOfGrowthMetrics(value: object): value is GrowthMetrics {
    if (!('monthOverMonth' in value) || value['monthOverMonth'] === undefined) return false;
    if (!('requestGrowth' in value) || value['requestGrowth'] === undefined) return false;
    if (!('userGrowth' in value) || value['userGrowth'] === undefined) return false;
    if (!('weekOverWeek' in value) || value['weekOverWeek'] === undefined) return false;
    if (!('yearOverYear' in value) || value['yearOverYear'] === undefined) return false;
    return true;
}

export function GrowthMetricsFromJSON(json: any): GrowthMetrics {
    return GrowthMetricsFromJSONTyped(json, false);
}

export function GrowthMetricsFromJSONTyped(json: any, ignoreDiscriminator: boolean): GrowthMetrics {
    if (json == null) {
        return json;
    }
    return {
        
        'monthOverMonth': json['monthOverMonth'],
        'requestGrowth': json['requestGrowth'],
        'userGrowth': json['userGrowth'],
        'weekOverWeek': json['weekOverWeek'],
        'yearOverYear': json['yearOverYear'],
    };
}

export function GrowthMetricsToJSON(json: any): GrowthMetrics {
    return GrowthMetricsToJSONTyped(json, false);
}

export function GrowthMetricsToJSONTyped(value?: GrowthMetrics | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'monthOverMonth': value['monthOverMonth'],
        'requestGrowth': value['requestGrowth'],
        'userGrowth': value['userGrowth'],
        'weekOverWeek': value['weekOverWeek'],
        'yearOverYear': value['yearOverYear'],
    };
}

