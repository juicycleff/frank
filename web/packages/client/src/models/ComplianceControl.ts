/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ComplianceControl
 */
export interface ComplianceControl {
    [key: string]: any | any;
    /**
     * 
     * @type {string}
     * @memberof ComplianceControl
     */
    category: string;
    /**
     * 
     * @type {string}
     * @memberof ComplianceControl
     */
    description: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof ComplianceControl
     */
    evidence: Array<string> | null;
    /**
     * 
     * @type {string}
     * @memberof ComplianceControl
     */
    id: string;
    /**
     * 
     * @type {Date}
     * @memberof ComplianceControl
     */
    lastTested: Date;
    /**
     * 
     * @type {object}
     * @memberof ComplianceControl
     */
    metadata?: object;
    /**
     * 
     * @type {string}
     * @memberof ComplianceControl
     */
    name: string;
    /**
     * 
     * @type {Date}
     * @memberof ComplianceControl
     */
    nextTest: Date;
    /**
     * 
     * @type {string}
     * @memberof ComplianceControl
     */
    owner: string;
    /**
     * 
     * @type {string}
     * @memberof ComplianceControl
     */
    status: string;
}

/**
 * Check if a given object implements the ComplianceControl interface.
 */
export function instanceOfComplianceControl(value: object): value is ComplianceControl {
    if (!('category' in value) || value['category'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('evidence' in value) || value['evidence'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('lastTested' in value) || value['lastTested'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('nextTest' in value) || value['nextTest'] === undefined) return false;
    if (!('owner' in value) || value['owner'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    return true;
}

export function ComplianceControlFromJSON(json: any): ComplianceControl {
    return ComplianceControlFromJSONTyped(json, false);
}

export function ComplianceControlFromJSONTyped(json: any, ignoreDiscriminator: boolean): ComplianceControl {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        'category': json['category'],
        'description': json['description'],
        'evidence': json['evidence'] == null ? null : json['evidence'],
        'id': json['id'],
        'lastTested': (new Date(json['last_tested'])),
        'metadata': json['metadata'] == null ? undefined : json['metadata'],
        'name': json['name'],
        'nextTest': (new Date(json['next_test'])),
        'owner': json['owner'],
        'status': json['status'],
    };
}

export function ComplianceControlToJSON(json: any): ComplianceControl {
    return ComplianceControlToJSONTyped(json, false);
}

export function ComplianceControlToJSONTyped(value?: ComplianceControl | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
            ...value,
        'category': value['category'],
        'description': value['description'],
        'evidence': value['evidence'],
        'id': value['id'],
        'last_tested': ((value['lastTested']).toISOString()),
        'metadata': value['metadata'],
        'name': value['name'],
        'next_test': ((value['nextTest']).toISOString()),
        'owner': value['owner'],
        'status': value['status'],
    };
}

