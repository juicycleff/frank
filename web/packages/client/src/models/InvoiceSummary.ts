/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface InvoiceSummary
 */
export interface InvoiceSummary {
    /**
     * 
     * @type {number}
     * @memberof InvoiceSummary
     */
    amount: number;
    /**
     * 
     * @type {string}
     * @memberof InvoiceSummary
     */
    currency: string;
    /**
     * 
     * @type {string}
     * @memberof InvoiceSummary
     */
    downloadUrl: string;
    /**
     * 
     * @type {Date}
     * @memberof InvoiceSummary
     */
    dueAt: Date;
    /**
     * 
     * @type {string}
     * @memberof InvoiceSummary
     */
    id: string;
    /**
     * 
     * @type {Date}
     * @memberof InvoiceSummary
     */
    issuedAt: Date;
    /**
     * 
     * @type {string}
     * @memberof InvoiceSummary
     */
    number: string;
    /**
     * 
     * @type {Date}
     * @memberof InvoiceSummary
     */
    paidAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof InvoiceSummary
     */
    status: string;
}

/**
 * Check if a given object implements the InvoiceSummary interface.
 */
export function instanceOfInvoiceSummary(value: object): value is InvoiceSummary {
    if (!('amount' in value) || value['amount'] === undefined) return false;
    if (!('currency' in value) || value['currency'] === undefined) return false;
    if (!('downloadUrl' in value) || value['downloadUrl'] === undefined) return false;
    if (!('dueAt' in value) || value['dueAt'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('issuedAt' in value) || value['issuedAt'] === undefined) return false;
    if (!('number' in value) || value['number'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    return true;
}

export function InvoiceSummaryFromJSON(json: any): InvoiceSummary {
    return InvoiceSummaryFromJSONTyped(json, false);
}

export function InvoiceSummaryFromJSONTyped(json: any, ignoreDiscriminator: boolean): InvoiceSummary {
    if (json == null) {
        return json;
    }
    return {
        
        'amount': json['amount'],
        'currency': json['currency'],
        'downloadUrl': json['download_url'],
        'dueAt': (new Date(json['due_at'])),
        'id': json['id'],
        'issuedAt': (new Date(json['issued_at'])),
        'number': json['number'],
        'paidAt': json['paid_at'] == null ? undefined : (new Date(json['paid_at'])),
        'status': json['status'],
    };
}

export function InvoiceSummaryToJSON(json: any): InvoiceSummary {
    return InvoiceSummaryToJSONTyped(json, false);
}

export function InvoiceSummaryToJSONTyped(value?: InvoiceSummary | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'amount': value['amount'],
        'currency': value['currency'],
        'download_url': value['downloadUrl'],
        'due_at': ((value['dueAt']).toISOString()),
        'id': value['id'],
        'issued_at': ((value['issuedAt']).toISOString()),
        'number': value['number'],
        'paid_at': value['paidAt'] == null ? undefined : ((value['paidAt']).toISOString()),
        'status': value['status'],
    };
}

