/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UsagePeriod
 */
export interface UsagePeriod {
    /**
     * 
     * @type {number}
     * @memberof UsagePeriod
     */
    activeUsers: number;
    /**
     * 
     * @type {number}
     * @memberof UsagePeriod
     */
    apiRequests: number;
    /**
     * 
     * @type {number}
     * @memberof UsagePeriod
     */
    bandwidthUsedBytes: number;
    /**
     * 
     * @type {number}
     * @memberof UsagePeriod
     */
    endUsers: number;
    /**
     * 
     * @type {number}
     * @memberof UsagePeriod
     */
    externalUsers: number;
    /**
     * 
     * @type {number}
     * @memberof UsagePeriod
     */
    storageUsedBytes: number;
}

/**
 * Check if a given object implements the UsagePeriod interface.
 */
export function instanceOfUsagePeriod(value: object): value is UsagePeriod {
    if (!('activeUsers' in value) || value['activeUsers'] === undefined) return false;
    if (!('apiRequests' in value) || value['apiRequests'] === undefined) return false;
    if (!('bandwidthUsedBytes' in value) || value['bandwidthUsedBytes'] === undefined) return false;
    if (!('endUsers' in value) || value['endUsers'] === undefined) return false;
    if (!('externalUsers' in value) || value['externalUsers'] === undefined) return false;
    if (!('storageUsedBytes' in value) || value['storageUsedBytes'] === undefined) return false;
    return true;
}

export function UsagePeriodFromJSON(json: any): UsagePeriod {
    return UsagePeriodFromJSONTyped(json, false);
}

export function UsagePeriodFromJSONTyped(json: any, ignoreDiscriminator: boolean): UsagePeriod {
    if (json == null) {
        return json;
    }
    return {
        
        'activeUsers': json['active_users'],
        'apiRequests': json['api_requests'],
        'bandwidthUsedBytes': json['bandwidth_used_bytes'],
        'endUsers': json['end_users'],
        'externalUsers': json['external_users'],
        'storageUsedBytes': json['storage_used_bytes'],
    };
}

export function UsagePeriodToJSON(json: any): UsagePeriod {
    return UsagePeriodToJSONTyped(json, false);
}

export function UsagePeriodToJSONTyped(value?: UsagePeriod | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'active_users': value['activeUsers'],
        'api_requests': value['apiRequests'],
        'bandwidth_used_bytes': value['bandwidthUsedBytes'],
        'end_users': value['endUsers'],
        'external_users': value['externalUsers'],
        'storage_used_bytes': value['storageUsedBytes'],
    };
}

