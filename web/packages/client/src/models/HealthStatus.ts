/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface HealthStatus
 */
export interface HealthStatus {
    [key: string]: any | any;
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof HealthStatus
     */
    readonly $schema?: string;
    /**
     * Component health details
     * @type {object}
     * @memberof HealthStatus
     */
    components?: object;
    /**
     * Environment name
     * @type {string}
     * @memberof HealthStatus
     */
    environment: string;
    /**
     * Overall health status
     * @type {string}
     * @memberof HealthStatus
     */
    status: string;
    /**
     * Health check timestamp
     * @type {Date}
     * @memberof HealthStatus
     */
    timestamp: Date;
    /**
     * Uptime in seconds
     * @type {number}
     * @memberof HealthStatus
     */
    uptime: number;
    /**
     * Application version
     * @type {string}
     * @memberof HealthStatus
     */
    version: string;
}

/**
 * Check if a given object implements the HealthStatus interface.
 */
export function instanceOfHealthStatus(value: object): value is HealthStatus {
    if (!('environment' in value) || value['environment'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('timestamp' in value) || value['timestamp'] === undefined) return false;
    if (!('uptime' in value) || value['uptime'] === undefined) return false;
    if (!('version' in value) || value['version'] === undefined) return false;
    return true;
}

export function HealthStatusFromJSON(json: any): HealthStatus {
    return HealthStatusFromJSONTyped(json, false);
}

export function HealthStatusFromJSONTyped(json: any, ignoreDiscriminator: boolean): HealthStatus {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        '$schema': json['$schema'] == null ? undefined : json['$schema'],
        'components': json['components'] == null ? undefined : json['components'],
        'environment': json['environment'],
        'status': json['status'],
        'timestamp': (new Date(json['timestamp'])),
        'uptime': json['uptime'],
        'version': json['version'],
    };
}

export function HealthStatusToJSON(json: any): HealthStatus {
    return HealthStatusToJSONTyped(json, false);
}

export function HealthStatusToJSONTyped(value?: Omit<HealthStatus, '$schema'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
            ...value,
        'components': value['components'],
        'environment': value['environment'],
        'status': value['status'],
        'timestamp': ((value['timestamp']).toISOString()),
        'uptime': value['uptime'],
        'version': value['version'],
    };
}

