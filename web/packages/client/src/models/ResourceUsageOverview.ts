/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ResourceUsageOverview
 */
export interface ResourceUsageOverview {
    /**
     * Cache hit rate percentage
     * @type {number}
     * @memberof ResourceUsageOverview
     */
    cacheHitRate: number;
    /**
     * CPU usage percentage
     * @type {number}
     * @memberof ResourceUsageOverview
     */
    cpu: number;
    /**
     * Database size in bytes
     * @type {number}
     * @memberof ResourceUsageOverview
     */
    databaseSize: number;
    /**
     * Memory usage percentage
     * @type {number}
     * @memberof ResourceUsageOverview
     */
    memory: number;
    /**
     * Network usage in bytes/sec
     * @type {number}
     * @memberof ResourceUsageOverview
     */
    network: number;
    /**
     * Storage usage percentage
     * @type {number}
     * @memberof ResourceUsageOverview
     */
    storage: number;
}

/**
 * Check if a given object implements the ResourceUsageOverview interface.
 */
export function instanceOfResourceUsageOverview(value: object): value is ResourceUsageOverview {
    if (!('cacheHitRate' in value) || value['cacheHitRate'] === undefined) return false;
    if (!('cpu' in value) || value['cpu'] === undefined) return false;
    if (!('databaseSize' in value) || value['databaseSize'] === undefined) return false;
    if (!('memory' in value) || value['memory'] === undefined) return false;
    if (!('network' in value) || value['network'] === undefined) return false;
    if (!('storage' in value) || value['storage'] === undefined) return false;
    return true;
}

export function ResourceUsageOverviewFromJSON(json: any): ResourceUsageOverview {
    return ResourceUsageOverviewFromJSONTyped(json, false);
}

export function ResourceUsageOverviewFromJSONTyped(json: any, ignoreDiscriminator: boolean): ResourceUsageOverview {
    if (json == null) {
        return json;
    }
    return {
        
        'cacheHitRate': json['cacheHitRate'],
        'cpu': json['cpu'],
        'databaseSize': json['databaseSize'],
        'memory': json['memory'],
        'network': json['network'],
        'storage': json['storage'],
    };
}

export function ResourceUsageOverviewToJSON(json: any): ResourceUsageOverview {
    return ResourceUsageOverviewToJSONTyped(json, false);
}

export function ResourceUsageOverviewToJSONTyped(value?: ResourceUsageOverview | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'cacheHitRate': value['cacheHitRate'],
        'cpu': value['cpu'],
        'databaseSize': value['databaseSize'],
        'memory': value['memory'],
        'network': value['network'],
        'storage': value['storage'],
    };
}

