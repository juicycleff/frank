/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SystemAlert
 */
export interface SystemAlert {
    [key: string]: any | any;
    /**
     * Affected component
     * @type {string}
     * @memberof SystemAlert
     */
    component: string;
    /**
     * Alert ID
     * @type {string}
     * @memberof SystemAlert
     */
    id: string;
    /**
     * Alert level (info, warning, error, critical)
     * @type {string}
     * @memberof SystemAlert
     */
    level: string;
    /**
     * Alert message
     * @type {string}
     * @memberof SystemAlert
     */
    message: string;
    /**
     * Whether alert is resolved
     * @type {boolean}
     * @memberof SystemAlert
     */
    resolved: boolean;
    /**
     * Resolution timestamp
     * @type {Date}
     * @memberof SystemAlert
     */
    resolvedAt?: Date;
    /**
     * User who resolved alert
     * @type {string}
     * @memberof SystemAlert
     */
    resolvedBy?: string;
    /**
     * Alert timestamp
     * @type {Date}
     * @memberof SystemAlert
     */
    timestamp: Date;
}

/**
 * Check if a given object implements the SystemAlert interface.
 */
export function instanceOfSystemAlert(value: object): value is SystemAlert {
    if (!('component' in value) || value['component'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('level' in value) || value['level'] === undefined) return false;
    if (!('message' in value) || value['message'] === undefined) return false;
    if (!('resolved' in value) || value['resolved'] === undefined) return false;
    if (!('timestamp' in value) || value['timestamp'] === undefined) return false;
    return true;
}

export function SystemAlertFromJSON(json: any): SystemAlert {
    return SystemAlertFromJSONTyped(json, false);
}

export function SystemAlertFromJSONTyped(json: any, ignoreDiscriminator: boolean): SystemAlert {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        'component': json['component'],
        'id': json['id'],
        'level': json['level'],
        'message': json['message'],
        'resolved': json['resolved'],
        'resolvedAt': json['resolvedAt'] == null ? undefined : (new Date(json['resolvedAt'])),
        'resolvedBy': json['resolvedBy'] == null ? undefined : json['resolvedBy'],
        'timestamp': (new Date(json['timestamp'])),
    };
}

export function SystemAlertToJSON(json: any): SystemAlert {
    return SystemAlertToJSONTyped(json, false);
}

export function SystemAlertToJSONTyped(value?: SystemAlert | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
            ...value,
        'component': value['component'],
        'id': value['id'],
        'level': value['level'],
        'message': value['message'],
        'resolved': value['resolved'],
        'resolvedAt': value['resolvedAt'] == null ? undefined : ((value['resolvedAt']).toISOString()),
        'resolvedBy': value['resolvedBy'],
        'timestamp': ((value['timestamp']).toISOString()),
    };
}

