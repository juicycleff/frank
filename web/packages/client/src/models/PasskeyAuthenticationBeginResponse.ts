/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PasskeyAuthenticationBeginResponse
 */
export interface PasskeyAuthenticationBeginResponse {
    [key: string]: any | any;
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof PasskeyAuthenticationBeginResponse
     */
    readonly $schema?: string;
    /**
     * Authentication challenge
     * @type {string}
     * @memberof PasskeyAuthenticationBeginResponse
     */
    challenge: string;
    /**
     * Challenge expiration
     * @type {Date}
     * @memberof PasskeyAuthenticationBeginResponse
     */
    expiresAt: Date;
    /**
     * WebAuthn credential request options
     * @type {object}
     * @memberof PasskeyAuthenticationBeginResponse
     */
    options: object;
    /**
     * Authentication session ID
     * @type {string}
     * @memberof PasskeyAuthenticationBeginResponse
     */
    sessionId: string;
}

/**
 * Check if a given object implements the PasskeyAuthenticationBeginResponse interface.
 */
export function instanceOfPasskeyAuthenticationBeginResponse(value: object): value is PasskeyAuthenticationBeginResponse {
    if (!('challenge' in value) || value['challenge'] === undefined) return false;
    if (!('expiresAt' in value) || value['expiresAt'] === undefined) return false;
    if (!('options' in value) || value['options'] === undefined) return false;
    if (!('sessionId' in value) || value['sessionId'] === undefined) return false;
    return true;
}

export function PasskeyAuthenticationBeginResponseFromJSON(json: any): PasskeyAuthenticationBeginResponse {
    return PasskeyAuthenticationBeginResponseFromJSONTyped(json, false);
}

export function PasskeyAuthenticationBeginResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): PasskeyAuthenticationBeginResponse {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        '$schema': json['$schema'] == null ? undefined : json['$schema'],
        'challenge': json['challenge'],
        'expiresAt': (new Date(json['expiresAt'])),
        'options': json['options'],
        'sessionId': json['sessionId'],
    };
}

export function PasskeyAuthenticationBeginResponseToJSON(json: any): PasskeyAuthenticationBeginResponse {
    return PasskeyAuthenticationBeginResponseToJSONTyped(json, false);
}

export function PasskeyAuthenticationBeginResponseToJSONTyped(value?: Omit<PasskeyAuthenticationBeginResponse, '$schema'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
            ...value,
        'challenge': value['challenge'],
        'expiresAt': ((value['expiresAt']).toISOString()),
        'options': value['options'],
        'sessionId': value['sessionId'],
    };
}

