/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PasskeyBackupRequest
 */
export interface PasskeyBackupRequest {
    [key: string]: any | any;
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof PasskeyBackupRequest
     */
    readonly $schema?: string;
    /**
     * New backup state
     * @type {boolean}
     * @memberof PasskeyBackupRequest
     */
    backupState: boolean;
    /**
     * Passkey IDs
     * @type {Array<string>}
     * @memberof PasskeyBackupRequest
     */
    passkeyIds: Array<string>;
}

/**
 * Check if a given object implements the PasskeyBackupRequest interface.
 */
export function instanceOfPasskeyBackupRequest(value: object): value is PasskeyBackupRequest {
    if (!('backupState' in value) || value['backupState'] === undefined) return false;
    if (!('passkeyIds' in value) || value['passkeyIds'] === undefined) return false;
    return true;
}

export function PasskeyBackupRequestFromJSON(json: any): PasskeyBackupRequest {
    return PasskeyBackupRequestFromJSONTyped(json, false);
}

export function PasskeyBackupRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PasskeyBackupRequest {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        '$schema': json['$schema'] == null ? undefined : json['$schema'],
        'backupState': json['backupState'],
        'passkeyIds': json['passkeyIds'],
    };
}

export function PasskeyBackupRequestToJSON(json: any): PasskeyBackupRequest {
    return PasskeyBackupRequestToJSONTyped(json, false);
}

export function PasskeyBackupRequestToJSONTyped(value?: Omit<PasskeyBackupRequest, '$schema'> | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
            ...value,
        'backupState': value['backupState'],
        'passkeyIds': value['passkeyIds'],
    };
}

