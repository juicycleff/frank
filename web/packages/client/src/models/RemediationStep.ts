/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface RemediationStep
 */
export interface RemediationStep {
    /**
     * 
     * @type {string}
     * @memberof RemediationStep
     */
    assignedTo?: string;
    /**
     * 
     * @type {Date}
     * @memberof RemediationStep
     */
    completedAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof RemediationStep
     */
    description: string;
    /**
     * 
     * @type {Date}
     * @memberof RemediationStep
     */
    dueDate?: Date;
    /**
     * 
     * @type {string}
     * @memberof RemediationStep
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof RemediationStep
     */
    notes?: string;
    /**
     * 
     * @type {string}
     * @memberof RemediationStep
     */
    status: string;
}

/**
 * Check if a given object implements the RemediationStep interface.
 */
export function instanceOfRemediationStep(value: object): value is RemediationStep {
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    return true;
}

export function RemediationStepFromJSON(json: any): RemediationStep {
    return RemediationStepFromJSONTyped(json, false);
}

export function RemediationStepFromJSONTyped(json: any, ignoreDiscriminator: boolean): RemediationStep {
    if (json == null) {
        return json;
    }
    return {
        
        'assignedTo': json['assigned_to'] == null ? undefined : json['assigned_to'],
        'completedAt': json['completed_at'] == null ? undefined : (new Date(json['completed_at'])),
        'description': json['description'],
        'dueDate': json['due_date'] == null ? undefined : (new Date(json['due_date'])),
        'id': json['id'],
        'notes': json['notes'] == null ? undefined : json['notes'],
        'status': json['status'],
    };
}

export function RemediationStepToJSON(json: any): RemediationStep {
    return RemediationStepToJSONTyped(json, false);
}

export function RemediationStepToJSONTyped(value?: RemediationStep | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'assigned_to': value['assignedTo'],
        'completed_at': value['completedAt'] == null ? undefined : ((value['completedAt']).toISOString()),
        'description': value['description'],
        'due_date': value['dueDate'] == null ? undefined : ((value['dueDate']).toISOString()),
        'id': value['id'],
        'notes': value['notes'],
        'status': value['status'],
    };
}

