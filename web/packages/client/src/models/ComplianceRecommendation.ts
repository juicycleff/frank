/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ComplianceRecommendation
 */
export interface ComplianceRecommendation {
    /**
     * 
     * @type {string}
     * @memberof ComplianceRecommendation
     */
    controlId: string;
    /**
     * 
     * @type {string}
     * @memberof ComplianceRecommendation
     */
    description: string;
    /**
     * 
     * @type {Date}
     * @memberof ComplianceRecommendation
     */
    dueDate: Date;
    /**
     * 
     * @type {string}
     * @memberof ComplianceRecommendation
     */
    effort: string;
    /**
     * 
     * @type {string}
     * @memberof ComplianceRecommendation
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof ComplianceRecommendation
     */
    impact: string;
    /**
     * 
     * @type {string}
     * @memberof ComplianceRecommendation
     */
    priority: string;
    /**
     * 
     * @type {string}
     * @memberof ComplianceRecommendation
     */
    status: string;
    /**
     * 
     * @type {string}
     * @memberof ComplianceRecommendation
     */
    title: string;
}

/**
 * Check if a given object implements the ComplianceRecommendation interface.
 */
export function instanceOfComplianceRecommendation(value: object): value is ComplianceRecommendation {
    if (!('controlId' in value) || value['controlId'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('dueDate' in value) || value['dueDate'] === undefined) return false;
    if (!('effort' in value) || value['effort'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('impact' in value) || value['impact'] === undefined) return false;
    if (!('priority' in value) || value['priority'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('title' in value) || value['title'] === undefined) return false;
    return true;
}

export function ComplianceRecommendationFromJSON(json: any): ComplianceRecommendation {
    return ComplianceRecommendationFromJSONTyped(json, false);
}

export function ComplianceRecommendationFromJSONTyped(json: any, ignoreDiscriminator: boolean): ComplianceRecommendation {
    if (json == null) {
        return json;
    }
    return {
        
        'controlId': json['control_id'],
        'description': json['description'],
        'dueDate': (new Date(json['due_date'])),
        'effort': json['effort'],
        'id': json['id'],
        'impact': json['impact'],
        'priority': json['priority'],
        'status': json['status'],
        'title': json['title'],
    };
}

export function ComplianceRecommendationToJSON(json: any): ComplianceRecommendation {
    return ComplianceRecommendationToJSONTyped(json, false);
}

export function ComplianceRecommendationToJSONTyped(value?: ComplianceRecommendation | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'control_id': value['controlId'],
        'description': value['description'],
        'due_date': ((value['dueDate']).toISOString()),
        'effort': value['effort'],
        'id': value['id'],
        'impact': value['impact'],
        'priority': value['priority'],
        'status': value['status'],
        'title': value['title'],
    };
}

