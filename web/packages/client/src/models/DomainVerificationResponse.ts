/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DomainVerificationResponse
 */
export interface DomainVerificationResponse {
    [key: string]: any | any;
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof DomainVerificationResponse
     */
    readonly $schema?: string;
    /**
     * DNS record to add
     * @type {string}
     * @memberof DomainVerificationResponse
     */
    dnsRecord?: string;
    /**
     * Domain being verified
     * @type {string}
     * @memberof DomainVerificationResponse
     */
    domain: string;
    /**
     * Verification instructions
     * @type {string}
     * @memberof DomainVerificationResponse
     */
    instructions?: string;
    /**
     * Verification code
     * @type {string}
     * @memberof DomainVerificationResponse
     */
    verificationCode?: string;
    /**
     * Whether domain is verified
     * @type {boolean}
     * @memberof DomainVerificationResponse
     */
    verified: boolean;
}

/**
 * Check if a given object implements the DomainVerificationResponse interface.
 */
export function instanceOfDomainVerificationResponse(value: object): value is DomainVerificationResponse {
    if (!('domain' in value) || value['domain'] === undefined) return false;
    if (!('verified' in value) || value['verified'] === undefined) return false;
    return true;
}

export function DomainVerificationResponseFromJSON(json: any): DomainVerificationResponse {
    return DomainVerificationResponseFromJSONTyped(json, false);
}

export function DomainVerificationResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): DomainVerificationResponse {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        '$schema': json['$schema'] == null ? undefined : json['$schema'],
        'dnsRecord': json['dnsRecord'] == null ? undefined : json['dnsRecord'],
        'domain': json['domain'],
        'instructions': json['instructions'] == null ? undefined : json['instructions'],
        'verificationCode': json['verificationCode'] == null ? undefined : json['verificationCode'],
        'verified': json['verified'],
    };
}

export function DomainVerificationResponseToJSON(json: any): DomainVerificationResponse {
    return DomainVerificationResponseToJSONTyped(json, false);
}

export function DomainVerificationResponseToJSONTyped(value?: Omit<DomainVerificationResponse, '$schema'> | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
            ...value,
        'dnsRecord': value['dnsRecord'],
        'domain': value['domain'],
        'instructions': value['instructions'],
        'verificationCode': value['verificationCode'],
        'verified': value['verified'],
    };
}

