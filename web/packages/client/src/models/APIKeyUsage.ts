/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EndpointUsage } from './EndpointUsage';
import {
    EndpointUsageFromJSON,
    EndpointUsageFromJSONTyped,
    EndpointUsageToJSON,
    EndpointUsageToJSONTyped,
} from './EndpointUsage';

/**
 * 
 * @export
 * @interface APIKeyUsage
 */
export interface APIKeyUsage {
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof APIKeyUsage
     */
    readonly $schema?: string;
    /**
     * Error requests
     * @type {number}
     * @memberof APIKeyUsage
     */
    errorRequests: number;
    /**
     * Errors by HTTP status code
     * @type {{ [key: string]: number; }}
     * @memberof APIKeyUsage
     */
    errorsByCode?: { [key: string]: number; };
    /**
     * Last usage timestamp
     * @type {Date}
     * @memberof APIKeyUsage
     */
    lastUsed?: Date;
    /**
     * Most used endpoints
     * @type {Array<EndpointUsage>}
     * @memberof APIKeyUsage
     */
    popularEndpoints?: Array<EndpointUsage> | null;
    /**
     * Requests this month
     * @type {number}
     * @memberof APIKeyUsage
     */
    requestsMonth: number;
    /**
     * Requests today
     * @type {number}
     * @memberof APIKeyUsage
     */
    requestsToday: number;
    /**
     * Requests this week
     * @type {number}
     * @memberof APIKeyUsage
     */
    requestsWeek: number;
    /**
     * Success rate percentage
     * @type {number}
     * @memberof APIKeyUsage
     */
    successRate: number;
    /**
     * Successful requests
     * @type {number}
     * @memberof APIKeyUsage
     */
    successfulRequests: number;
    /**
     * Total API requests
     * @type {number}
     * @memberof APIKeyUsage
     */
    totalRequests: number;
}

/**
 * Check if a given object implements the APIKeyUsage interface.
 */
export function instanceOfAPIKeyUsage(value: object): value is APIKeyUsage {
    if (!('errorRequests' in value) || value['errorRequests'] === undefined) return false;
    if (!('requestsMonth' in value) || value['requestsMonth'] === undefined) return false;
    if (!('requestsToday' in value) || value['requestsToday'] === undefined) return false;
    if (!('requestsWeek' in value) || value['requestsWeek'] === undefined) return false;
    if (!('successRate' in value) || value['successRate'] === undefined) return false;
    if (!('successfulRequests' in value) || value['successfulRequests'] === undefined) return false;
    if (!('totalRequests' in value) || value['totalRequests'] === undefined) return false;
    return true;
}

export function APIKeyUsageFromJSON(json: any): APIKeyUsage {
    return APIKeyUsageFromJSONTyped(json, false);
}

export function APIKeyUsageFromJSONTyped(json: any, ignoreDiscriminator: boolean): APIKeyUsage {
    if (json == null) {
        return json;
    }
    return {
        
        '$schema': json['$schema'] == null ? undefined : json['$schema'],
        'errorRequests': json['errorRequests'],
        'errorsByCode': json['errorsByCode'] == null ? undefined : json['errorsByCode'],
        'lastUsed': json['lastUsed'] == null ? undefined : (new Date(json['lastUsed'])),
        'popularEndpoints': json['popularEndpoints'] == null ? undefined : ((json['popularEndpoints'] as Array<any>).map(EndpointUsageFromJSON)),
        'requestsMonth': json['requestsMonth'],
        'requestsToday': json['requestsToday'],
        'requestsWeek': json['requestsWeek'],
        'successRate': json['successRate'],
        'successfulRequests': json['successfulRequests'],
        'totalRequests': json['totalRequests'],
    };
}

export function APIKeyUsageToJSON(json: any): APIKeyUsage {
    return APIKeyUsageToJSONTyped(json, false);
}

export function APIKeyUsageToJSONTyped(value?: Omit<APIKeyUsage, '$schema'> | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'errorRequests': value['errorRequests'],
        'errorsByCode': value['errorsByCode'],
        'lastUsed': value['lastUsed'] == null ? undefined : ((value['lastUsed']).toISOString()),
        'popularEndpoints': value['popularEndpoints'] == null ? undefined : ((value['popularEndpoints'] as Array<any>).map(EndpointUsageToJSON)),
        'requestsMonth': value['requestsMonth'],
        'requestsToday': value['requestsToday'],
        'requestsWeek': value['requestsWeek'],
        'successRate': value['successRate'],
        'successfulRequests': value['successfulRequests'],
        'totalRequests': value['totalRequests'],
    };
}

