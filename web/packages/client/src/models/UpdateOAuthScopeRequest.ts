/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UpdateOAuthScopeRequest
 */
export interface UpdateOAuthScopeRequest {
    [key: string]: any | any;
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof UpdateOAuthScopeRequest
     */
    readonly $schema?: string;
    /**
     * Updated default status
     * @type {boolean}
     * @memberof UpdateOAuthScopeRequest
     */
    defaultScope?: boolean;
    /**
     * Updated description
     * @type {string}
     * @memberof UpdateOAuthScopeRequest
     */
    description?: string;
    /**
     * Updated public status
     * @type {boolean}
     * @memberof UpdateOAuthScopeRequest
     */
    _public?: boolean;
}

/**
 * Check if a given object implements the UpdateOAuthScopeRequest interface.
 */
export function instanceOfUpdateOAuthScopeRequest(value: object): value is UpdateOAuthScopeRequest {
    return true;
}

export function UpdateOAuthScopeRequestFromJSON(json: any): UpdateOAuthScopeRequest {
    return UpdateOAuthScopeRequestFromJSONTyped(json, false);
}

export function UpdateOAuthScopeRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateOAuthScopeRequest {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        '$schema': json['$schema'] == null ? undefined : json['$schema'],
        'defaultScope': json['defaultScope'] == null ? undefined : json['defaultScope'],
        'description': json['description'] == null ? undefined : json['description'],
        '_public': json['public'] == null ? undefined : json['public'],
    };
}

export function UpdateOAuthScopeRequestToJSON(json: any): UpdateOAuthScopeRequest {
    return UpdateOAuthScopeRequestToJSONTyped(json, false);
}

export function UpdateOAuthScopeRequestToJSONTyped(value?: Omit<UpdateOAuthScopeRequest, '$schema'> | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
            ...value,
        'defaultScope': value['defaultScope'],
        'description': value['description'],
        'public': value['_public'],
    };
}

