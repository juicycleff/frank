/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Pagination } from './Pagination';
import {
    PaginationFromJSON,
    PaginationFromJSONTyped,
    PaginationToJSON,
    PaginationToJSONTyped,
} from './Pagination';
import type { SessionInfo } from './SessionInfo';
import {
    SessionInfoFromJSON,
    SessionInfoFromJSONTyped,
    SessionInfoToJSON,
    SessionInfoToJSONTyped,
} from './SessionInfo';

/**
 * 
 * @export
 * @interface PaginatedOutputSessionInfo
 */
export interface PaginatedOutputSessionInfo {
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof PaginatedOutputSessionInfo
     */
    readonly $schema?: string;
    /**
     * 
     * @type {Array<SessionInfo>}
     * @memberof PaginatedOutputSessionInfo
     */
    data: Array<SessionInfo> | null;
    /**
     * 
     * @type {Pagination}
     * @memberof PaginatedOutputSessionInfo
     */
    pagination: Pagination;
}

/**
 * Check if a given object implements the PaginatedOutputSessionInfo interface.
 */
export function instanceOfPaginatedOutputSessionInfo(value: object): value is PaginatedOutputSessionInfo {
    if (!('data' in value) || value['data'] === undefined) return false;
    if (!('pagination' in value) || value['pagination'] === undefined) return false;
    return true;
}

export function PaginatedOutputSessionInfoFromJSON(json: any): PaginatedOutputSessionInfo {
    return PaginatedOutputSessionInfoFromJSONTyped(json, false);
}

export function PaginatedOutputSessionInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): PaginatedOutputSessionInfo {
    if (json == null) {
        return json;
    }
    return {
        
        '$schema': json['$schema'] == null ? undefined : json['$schema'],
        'data': (json['data'] == null ? null : (json['data'] as Array<any>).map(SessionInfoFromJSON)),
        'pagination': PaginationFromJSON(json['pagination']),
    };
}

export function PaginatedOutputSessionInfoToJSON(json: any): PaginatedOutputSessionInfo {
    return PaginatedOutputSessionInfoToJSONTyped(json, false);
}

export function PaginatedOutputSessionInfoToJSONTyped(value?: Omit<PaginatedOutputSessionInfo, '$schema'> | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'data': (value['data'] == null ? null : (value['data'] as Array<any>).map(SessionInfoToJSON)),
        'pagination': PaginationToJSON(value['pagination']),
    };
}

