/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PlatformAPIKeyUsage
 */
export interface PlatformAPIKeyUsage {
    /**
     * Error rate percentage
     * @type {number}
     * @memberof PlatformAPIKeyUsage
     */
    errorRate: number;
    /**
     * API key ID
     * @type {string}
     * @memberof PlatformAPIKeyUsage
     */
    keyId: string;
    /**
     * Last usage timestamp
     * @type {Date}
     * @memberof PlatformAPIKeyUsage
     */
    lastUsed: Date;
    /**
     * Organization name
     * @type {string}
     * @memberof PlatformAPIKeyUsage
     */
    orgName: string;
    /**
     * Number of requests
     * @type {number}
     * @memberof PlatformAPIKeyUsage
     */
    requests: number;
}

/**
 * Check if a given object implements the PlatformAPIKeyUsage interface.
 */
export function instanceOfPlatformAPIKeyUsage(value: object): value is PlatformAPIKeyUsage {
    if (!('errorRate' in value) || value['errorRate'] === undefined) return false;
    if (!('keyId' in value) || value['keyId'] === undefined) return false;
    if (!('lastUsed' in value) || value['lastUsed'] === undefined) return false;
    if (!('orgName' in value) || value['orgName'] === undefined) return false;
    if (!('requests' in value) || value['requests'] === undefined) return false;
    return true;
}

export function PlatformAPIKeyUsageFromJSON(json: any): PlatformAPIKeyUsage {
    return PlatformAPIKeyUsageFromJSONTyped(json, false);
}

export function PlatformAPIKeyUsageFromJSONTyped(json: any, ignoreDiscriminator: boolean): PlatformAPIKeyUsage {
    if (json == null) {
        return json;
    }
    return {
        
        'errorRate': json['errorRate'],
        'keyId': json['keyId'],
        'lastUsed': (new Date(json['lastUsed'])),
        'orgName': json['orgName'],
        'requests': json['requests'],
    };
}

export function PlatformAPIKeyUsageToJSON(json: any): PlatformAPIKeyUsage {
    return PlatformAPIKeyUsageToJSONTyped(json, false);
}

export function PlatformAPIKeyUsageToJSONTyped(value?: PlatformAPIKeyUsage | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'errorRate': value['errorRate'],
        'keyId': value['keyId'],
        'lastUsed': ((value['lastUsed']).toISOString()),
        'orgName': value['orgName'],
        'requests': value['requests'],
    };
}

