/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface BillingRevenue
 */
export interface BillingRevenue {
    /**
     * 
     * @type {number}
     * @memberof BillingRevenue
     */
    arppu: number;
    /**
     * 
     * @type {number}
     * @memberof BillingRevenue
     */
    arpu: number;
    /**
     * 
     * @type {number}
     * @memberof BillingRevenue
     */
    growthRatePercent: number;
    /**
     * 
     * @type {number}
     * @memberof BillingRevenue
     */
    oneTime: number;
    /**
     * 
     * @type {number}
     * @memberof BillingRevenue
     */
    pending: number;
    /**
     * 
     * @type {number}
     * @memberof BillingRevenue
     */
    recurring: number;
    /**
     * 
     * @type {number}
     * @memberof BillingRevenue
     */
    refunded: number;
    /**
     * 
     * @type {number}
     * @memberof BillingRevenue
     */
    total: number;
}

/**
 * Check if a given object implements the BillingRevenue interface.
 */
export function instanceOfBillingRevenue(value: object): value is BillingRevenue {
    if (!('arppu' in value) || value['arppu'] === undefined) return false;
    if (!('arpu' in value) || value['arpu'] === undefined) return false;
    if (!('growthRatePercent' in value) || value['growthRatePercent'] === undefined) return false;
    if (!('oneTime' in value) || value['oneTime'] === undefined) return false;
    if (!('pending' in value) || value['pending'] === undefined) return false;
    if (!('recurring' in value) || value['recurring'] === undefined) return false;
    if (!('refunded' in value) || value['refunded'] === undefined) return false;
    if (!('total' in value) || value['total'] === undefined) return false;
    return true;
}

export function BillingRevenueFromJSON(json: any): BillingRevenue {
    return BillingRevenueFromJSONTyped(json, false);
}

export function BillingRevenueFromJSONTyped(json: any, ignoreDiscriminator: boolean): BillingRevenue {
    if (json == null) {
        return json;
    }
    return {
        
        'arppu': json['arppu'],
        'arpu': json['arpu'],
        'growthRatePercent': json['growth_rate_percent'],
        'oneTime': json['one_time'],
        'pending': json['pending'],
        'recurring': json['recurring'],
        'refunded': json['refunded'],
        'total': json['total'],
    };
}

export function BillingRevenueToJSON(json: any): BillingRevenue {
    return BillingRevenueToJSONTyped(json, false);
}

export function BillingRevenueToJSONTyped(value?: BillingRevenue | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'arppu': value['arppu'],
        'arpu': value['arpu'],
        'growth_rate_percent': value['growthRatePercent'],
        'one_time': value['oneTime'],
        'pending': value['pending'],
        'recurring': value['recurring'],
        'refunded': value['refunded'],
        'total': value['total'],
    };
}

