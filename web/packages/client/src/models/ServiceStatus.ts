/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ServiceStatus
 */
export interface ServiceStatus {
    /**
     * Error rate percentage
     * @type {number}
     * @memberof ServiceStatus
     */
    errorRate: number;
    /**
     * Last health check
     * @type {Date}
     * @memberof ServiceStatus
     */
    lastCheck: Date;
    /**
     * Service name
     * @type {string}
     * @memberof ServiceStatus
     */
    name: string;
    /**
     * Average response time in ms
     * @type {number}
     * @memberof ServiceStatus
     */
    responseTime: number;
    /**
     * Service status
     * @type {string}
     * @memberof ServiceStatus
     */
    status: string;
    /**
     * Uptime percentage
     * @type {number}
     * @memberof ServiceStatus
     */
    uptime: number;
}

/**
 * Check if a given object implements the ServiceStatus interface.
 */
export function instanceOfServiceStatus(value: object): value is ServiceStatus {
    if (!('errorRate' in value) || value['errorRate'] === undefined) return false;
    if (!('lastCheck' in value) || value['lastCheck'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('responseTime' in value) || value['responseTime'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('uptime' in value) || value['uptime'] === undefined) return false;
    return true;
}

export function ServiceStatusFromJSON(json: any): ServiceStatus {
    return ServiceStatusFromJSONTyped(json, false);
}

export function ServiceStatusFromJSONTyped(json: any, ignoreDiscriminator: boolean): ServiceStatus {
    if (json == null) {
        return json;
    }
    return {
        
        'errorRate': json['errorRate'],
        'lastCheck': (new Date(json['lastCheck'])),
        'name': json['name'],
        'responseTime': json['responseTime'],
        'status': json['status'],
        'uptime': json['uptime'],
    };
}

export function ServiceStatusToJSON(json: any): ServiceStatus {
    return ServiceStatusToJSONTyped(json, false);
}

export function ServiceStatusToJSONTyped(value?: ServiceStatus | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'errorRate': value['errorRate'],
        'lastCheck': ((value['lastCheck']).toISOString()),
        'name': value['name'],
        'responseTime': value['responseTime'],
        'status': value['status'],
        'uptime': value['uptime'],
    };
}

