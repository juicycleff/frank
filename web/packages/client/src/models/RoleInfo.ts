/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface RoleInfo
 */
export interface RoleInfo {
    /**
     * Role context
     * @type {string}
     * @memberof RoleInfo
     */
    context: string;
    /**
     * Context ID
     * @type {string}
     * @memberof RoleInfo
     */
    contextId?: string;
    /**
     * Role display name
     * @type {string}
     * @memberof RoleInfo
     */
    displayName: string;
    /**
     * Role ID
     * @type {string}
     * @memberof RoleInfo
     */
    id: string;
    /**
     * Role name
     * @type {string}
     * @memberof RoleInfo
     */
    name: string;
}

/**
 * Check if a given object implements the RoleInfo interface.
 */
export function instanceOfRoleInfo(value: object): value is RoleInfo {
    if (!('context' in value) || value['context'] === undefined) return false;
    if (!('displayName' in value) || value['displayName'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    return true;
}

export function RoleInfoFromJSON(json: any): RoleInfo {
    return RoleInfoFromJSONTyped(json, false);
}

export function RoleInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): RoleInfo {
    if (json == null) {
        return json;
    }
    return {
        
        'context': json['context'],
        'contextId': json['contextId'] == null ? undefined : json['contextId'],
        'displayName': json['displayName'],
        'id': json['id'],
        'name': json['name'],
    };
}

export function RoleInfoToJSON(json: any): RoleInfo {
    return RoleInfoToJSONTyped(json, false);
}

export function RoleInfoToJSONTyped(value?: RoleInfo | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'context': value['context'],
        'contextId': value['contextId'],
        'displayName': value['displayName'],
        'id': value['id'],
        'name': value['name'],
    };
}

