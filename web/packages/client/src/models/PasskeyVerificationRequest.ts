/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PasskeyVerificationRequest
 */
export interface PasskeyVerificationRequest {
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof PasskeyVerificationRequest
     */
    readonly $schema?: string;
    /**
     * Verification challenge
     * @type {string}
     * @memberof PasskeyVerificationRequest
     */
    challenge: string;
    /**
     * Credential ID to verify
     * @type {string}
     * @memberof PasskeyVerificationRequest
     */
    credentialId: string;
    /**
     * Origin of the request
     * @type {string}
     * @memberof PasskeyVerificationRequest
     */
    origin: string;
}

/**
 * Check if a given object implements the PasskeyVerificationRequest interface.
 */
export function instanceOfPasskeyVerificationRequest(value: object): value is PasskeyVerificationRequest {
    if (!('challenge' in value) || value['challenge'] === undefined) return false;
    if (!('credentialId' in value) || value['credentialId'] === undefined) return false;
    if (!('origin' in value) || value['origin'] === undefined) return false;
    return true;
}

export function PasskeyVerificationRequestFromJSON(json: any): PasskeyVerificationRequest {
    return PasskeyVerificationRequestFromJSONTyped(json, false);
}

export function PasskeyVerificationRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PasskeyVerificationRequest {
    if (json == null) {
        return json;
    }
    return {
        
        '$schema': json['$schema'] == null ? undefined : json['$schema'],
        'challenge': json['challenge'],
        'credentialId': json['credentialId'],
        'origin': json['origin'],
    };
}

export function PasskeyVerificationRequestToJSON(json: any): PasskeyVerificationRequest {
    return PasskeyVerificationRequestToJSONTyped(json, false);
}

export function PasskeyVerificationRequestToJSONTyped(value?: Omit<PasskeyVerificationRequest, '$schema'> | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'challenge': value['challenge'],
        'credentialId': value['credentialId'],
        'origin': value['origin'],
    };
}

