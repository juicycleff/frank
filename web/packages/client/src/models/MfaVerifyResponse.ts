/* tslint:disable */
/* eslint-disable */
/**
 * My Project
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface MfaVerifyResponse
 */
export interface MfaVerifyResponse {
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof MfaVerifyResponse
     */
    readonly $schema?: string;
    /**
     * Whether a backup code was used
     * @type {boolean}
     * @memberof MfaVerifyResponse
     */
    backupUsed: boolean;
    /**
     * Response message
     * @type {string}
     * @memberof MfaVerifyResponse
     */
    message: string;
    /**
     * MFA method used
     * @type {string}
     * @memberof MfaVerifyResponse
     */
    method: string;
    /**
     * Whether verification was successful
     * @type {boolean}
     * @memberof MfaVerifyResponse
     */
    success: boolean;
}

export function MfaVerifyResponseFromJSON(json: any): MfaVerifyResponse {
    return MfaVerifyResponseFromJSONTyped(json, false);
}

export function MfaVerifyResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): MfaVerifyResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        '$schema': !exists(json, '$schema') ? undefined : json['$schema'],
        'backupUsed': json['backupUsed'],
        'message': json['message'],
        'method': json['method'],
        'success': json['success'],
    };
}

export function MfaVerifyResponseToJSON(value?: MfaVerifyResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'backupUsed': value.backupUsed,
        'message': value.message,
        'method': value.method,
        'success': value.success,
    };
}


