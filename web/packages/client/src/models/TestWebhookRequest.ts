/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TestWebhookRequest
 */
export interface TestWebhookRequest {
    [key: string]: any | any;
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof TestWebhookRequest
     */
    readonly $schema?: string;
    /**
     * Event type for test
     * @type {string}
     * @memberof TestWebhookRequest
     */
    eventType?: string;
    /**
     * Test payload
     * @type {object}
     * @memberof TestWebhookRequest
     */
    payload?: object;
    /**
     * Webhook ID to test
     * @type {string}
     * @memberof TestWebhookRequest
     */
    webhookId: string;
}

/**
 * Check if a given object implements the TestWebhookRequest interface.
 */
export function instanceOfTestWebhookRequest(value: object): value is TestWebhookRequest {
    if (!('webhookId' in value) || value['webhookId'] === undefined) return false;
    return true;
}

export function TestWebhookRequestFromJSON(json: any): TestWebhookRequest {
    return TestWebhookRequestFromJSONTyped(json, false);
}

export function TestWebhookRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): TestWebhookRequest {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        '$schema': json['$schema'] == null ? undefined : json['$schema'],
        'eventType': json['eventType'] == null ? undefined : json['eventType'],
        'payload': json['payload'] == null ? undefined : json['payload'],
        'webhookId': json['webhookId'],
    };
}

export function TestWebhookRequestToJSON(json: any): TestWebhookRequest {
    return TestWebhookRequestToJSONTyped(json, false);
}

export function TestWebhookRequestToJSONTyped(value?: Omit<TestWebhookRequest, '$schema'> | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
            ...value,
        'eventType': value['eventType'],
        'payload': value['payload'],
        'webhookId': value['webhookId'],
    };
}

