/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SSOCallbackRequest
 */
export interface SSOCallbackRequest {
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof SSOCallbackRequest
     */
    readonly $schema?: string;
    /**
     * Authorization code
     * @type {string}
     * @memberof SSOCallbackRequest
     */
    code?: string;
    /**
     * Identity provider ID
     * @type {string}
     * @memberof SSOCallbackRequest
     */
    providerId: string;
    /**
     * Redirect URL
     * @type {string}
     * @memberof SSOCallbackRequest
     */
    redirectUrl?: string;
    /**
     * SAML relay state
     * @type {string}
     * @memberof SSOCallbackRequest
     */
    relayState?: string;
    /**
     * SAML response (for SAML providers)
     * @type {string}
     * @memberof SSOCallbackRequest
     */
    samlResponse?: string;
    /**
     * OAuth state parameter
     * @type {string}
     * @memberof SSOCallbackRequest
     */
    state?: string;
}

/**
 * Check if a given object implements the SSOCallbackRequest interface.
 */
export function instanceOfSSOCallbackRequest(value: object): value is SSOCallbackRequest {
    if (!('providerId' in value) || value['providerId'] === undefined) return false;
    return true;
}

export function SSOCallbackRequestFromJSON(json: any): SSOCallbackRequest {
    return SSOCallbackRequestFromJSONTyped(json, false);
}

export function SSOCallbackRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): SSOCallbackRequest {
    if (json == null) {
        return json;
    }
    return {
        
        '$schema': json['$schema'] == null ? undefined : json['$schema'],
        'code': json['code'] == null ? undefined : json['code'],
        'providerId': json['providerId'],
        'redirectUrl': json['redirectUrl'] == null ? undefined : json['redirectUrl'],
        'relayState': json['relayState'] == null ? undefined : json['relayState'],
        'samlResponse': json['samlResponse'] == null ? undefined : json['samlResponse'],
        'state': json['state'] == null ? undefined : json['state'],
    };
}

export function SSOCallbackRequestToJSON(json: any): SSOCallbackRequest {
    return SSOCallbackRequestToJSONTyped(json, false);
}

export function SSOCallbackRequestToJSONTyped(value?: Omit<SSOCallbackRequest, '$schema'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'code': value['code'],
        'providerId': value['providerId'],
        'redirectUrl': value['redirectUrl'],
        'relayState': value['relayState'],
        'samlResponse': value['samlResponse'],
        'state': value['state'],
    };
}

