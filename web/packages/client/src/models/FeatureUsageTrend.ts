/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface FeatureUsageTrend
 */
export interface FeatureUsageTrend {
    /**
     * 
     * @type {number}
     * @memberof FeatureUsageTrend
     */
    activeFeatures: number;
    /**
     * 
     * @type {Date}
     * @memberof FeatureUsageTrend
     */
    date: Date;
    /**
     * 
     * @type {number}
     * @memberof FeatureUsageTrend
     */
    evaluations: number;
    /**
     * 
     * @type {number}
     * @memberof FeatureUsageTrend
     */
    users: number;
}

/**
 * Check if a given object implements the FeatureUsageTrend interface.
 */
export function instanceOfFeatureUsageTrend(value: object): value is FeatureUsageTrend {
    if (!('activeFeatures' in value) || value['activeFeatures'] === undefined) return false;
    if (!('date' in value) || value['date'] === undefined) return false;
    if (!('evaluations' in value) || value['evaluations'] === undefined) return false;
    if (!('users' in value) || value['users'] === undefined) return false;
    return true;
}

export function FeatureUsageTrendFromJSON(json: any): FeatureUsageTrend {
    return FeatureUsageTrendFromJSONTyped(json, false);
}

export function FeatureUsageTrendFromJSONTyped(json: any, ignoreDiscriminator: boolean): FeatureUsageTrend {
    if (json == null) {
        return json;
    }
    return {
        
        'activeFeatures': json['active_features'],
        'date': (new Date(json['date'])),
        'evaluations': json['evaluations'],
        'users': json['users'],
    };
}

export function FeatureUsageTrendToJSON(json: any): FeatureUsageTrend {
    return FeatureUsageTrendToJSONTyped(json, false);
}

export function FeatureUsageTrendToJSONTyped(value?: FeatureUsageTrend | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'active_features': value['activeFeatures'],
        'date': ((value['date']).toISOString()),
        'evaluations': value['evaluations'],
        'users': value['users'],
    };
}

