/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CheckPermissionResponse
 */
export interface CheckPermissionResponse {
    [key: string]: any | any;
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof CheckPermissionResponse
     */
    readonly $schema?: string;
    /**
     * Whether permission is allowed
     * @type {boolean}
     * @memberof CheckPermissionResponse
     */
    allowed: boolean;
    /**
     * Permission expiration
     * @type {Date}
     * @memberof CheckPermissionResponse
     */
    expiresAt?: Date;
    /**
     * Reason for decision
     * @type {string}
     * @memberof CheckPermissionResponse
     */
    reason?: string;
    /**
     * Role that grants permission
     * @type {string}
     * @memberof CheckPermissionResponse
     */
    roleName?: string;
    /**
     * Source of permission (role, direct, system)
     * @type {string}
     * @memberof CheckPermissionResponse
     */
    source: string;
}

/**
 * Check if a given object implements the CheckPermissionResponse interface.
 */
export function instanceOfCheckPermissionResponse(value: object): value is CheckPermissionResponse {
    if (!('allowed' in value) || value['allowed'] === undefined) return false;
    if (!('source' in value) || value['source'] === undefined) return false;
    return true;
}

export function CheckPermissionResponseFromJSON(json: any): CheckPermissionResponse {
    return CheckPermissionResponseFromJSONTyped(json, false);
}

export function CheckPermissionResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CheckPermissionResponse {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        '$schema': json['$schema'] == null ? undefined : json['$schema'],
        'allowed': json['allowed'],
        'expiresAt': json['expiresAt'] == null ? undefined : (new Date(json['expiresAt'])),
        'reason': json['reason'] == null ? undefined : json['reason'],
        'roleName': json['roleName'] == null ? undefined : json['roleName'],
        'source': json['source'],
    };
}

export function CheckPermissionResponseToJSON(json: any): CheckPermissionResponse {
    return CheckPermissionResponseToJSONTyped(json, false);
}

export function CheckPermissionResponseToJSONTyped(value?: Omit<CheckPermissionResponse, '$schema'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
            ...value,
        'allowed': value['allowed'],
        'expiresAt': value['expiresAt'] == null ? undefined : ((value['expiresAt']).toISOString()),
        'reason': value['reason'],
        'roleName': value['roleName'],
        'source': value['source'],
    };
}

