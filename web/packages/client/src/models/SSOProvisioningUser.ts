/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SSOProvisioningUser
 */
export interface SSOProvisioningUser {
    /**
     * Additional user attributes
     * @type {{ [key: string]: string; }}
     * @memberof SSOProvisioningUser
     */
    attributes?: { [key: string]: string; };
    /**
     * User email
     * @type {string}
     * @memberof SSOProvisioningUser
     */
    email: string;
    /**
     * First name
     * @type {string}
     * @memberof SSOProvisioningUser
     */
    firstName?: string;
    /**
     * Last name
     * @type {string}
     * @memberof SSOProvisioningUser
     */
    lastName?: string;
    /**
     * Initial role
     * @type {string}
     * @memberof SSOProvisioningUser
     */
    role?: string;
}

/**
 * Check if a given object implements the SSOProvisioningUser interface.
 */
export function instanceOfSSOProvisioningUser(value: object): value is SSOProvisioningUser {
    if (!('email' in value) || value['email'] === undefined) return false;
    return true;
}

export function SSOProvisioningUserFromJSON(json: any): SSOProvisioningUser {
    return SSOProvisioningUserFromJSONTyped(json, false);
}

export function SSOProvisioningUserFromJSONTyped(json: any, ignoreDiscriminator: boolean): SSOProvisioningUser {
    if (json == null) {
        return json;
    }
    return {
        
        'attributes': json['attributes'] == null ? undefined : json['attributes'],
        'email': json['email'],
        'firstName': json['firstName'] == null ? undefined : json['firstName'],
        'lastName': json['lastName'] == null ? undefined : json['lastName'],
        'role': json['role'] == null ? undefined : json['role'],
    };
}

export function SSOProvisioningUserToJSON(json: any): SSOProvisioningUser {
    return SSOProvisioningUserToJSONTyped(json, false);
}

export function SSOProvisioningUserToJSONTyped(value?: SSOProvisioningUser | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'attributes': value['attributes'],
        'email': value['email'],
        'firstName': value['firstName'],
        'lastName': value['lastName'],
        'role': value['role'],
    };
}

