/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ThreatSummary
 */
export interface ThreatSummary {
    /**
     * 
     * @type {string}
     * @memberof ThreatSummary
     */
    description: string;
    /**
     * 
     * @type {Date}
     * @memberof ThreatSummary
     */
    firstSeen: Date;
    /**
     * 
     * @type {string}
     * @memberof ThreatSummary
     */
    id: string;
    /**
     * 
     * @type {Date}
     * @memberof ThreatSummary
     */
    lastSeen: Date;
    /**
     * 
     * @type {number}
     * @memberof ThreatSummary
     */
    occurrences: number;
    /**
     * 
     * @type {string}
     * @memberof ThreatSummary
     */
    severity: string;
    /**
     * 
     * @type {string}
     * @memberof ThreatSummary
     */
    source: string;
    /**
     * 
     * @type {string}
     * @memberof ThreatSummary
     */
    status: string;
    /**
     * 
     * @type {string}
     * @memberof ThreatSummary
     */
    type: string;
}

/**
 * Check if a given object implements the ThreatSummary interface.
 */
export function instanceOfThreatSummary(value: object): value is ThreatSummary {
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('firstSeen' in value) || value['firstSeen'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('lastSeen' in value) || value['lastSeen'] === undefined) return false;
    if (!('occurrences' in value) || value['occurrences'] === undefined) return false;
    if (!('severity' in value) || value['severity'] === undefined) return false;
    if (!('source' in value) || value['source'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    return true;
}

export function ThreatSummaryFromJSON(json: any): ThreatSummary {
    return ThreatSummaryFromJSONTyped(json, false);
}

export function ThreatSummaryFromJSONTyped(json: any, ignoreDiscriminator: boolean): ThreatSummary {
    if (json == null) {
        return json;
    }
    return {
        
        'description': json['description'],
        'firstSeen': (new Date(json['first_seen'])),
        'id': json['id'],
        'lastSeen': (new Date(json['last_seen'])),
        'occurrences': json['occurrences'],
        'severity': json['severity'],
        'source': json['source'],
        'status': json['status'],
        'type': json['type'],
    };
}

export function ThreatSummaryToJSON(json: any): ThreatSummary {
    return ThreatSummaryToJSONTyped(json, false);
}

export function ThreatSummaryToJSONTyped(value?: ThreatSummary | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'description': value['description'],
        'first_seen': ((value['firstSeen']).toISOString()),
        'id': value['id'],
        'last_seen': ((value['lastSeen']).toISOString()),
        'occurrences': value['occurrences'],
        'severity': value['severity'],
        'source': value['source'],
        'status': value['status'],
        'type': value['type'],
    };
}

