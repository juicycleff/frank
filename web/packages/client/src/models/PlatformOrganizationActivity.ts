/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PlatformOrganizationActivity
 */
export interface PlatformOrganizationActivity {
    /**
     * Activity score
     * @type {number}
     * @memberof PlatformOrganizationActivity
     */
    activity: number;
    /**
     * Last login timestamp
     * @type {Date}
     * @memberof PlatformOrganizationActivity
     */
    lastLogin: Date;
    /**
     * Organization name
     * @type {string}
     * @memberof PlatformOrganizationActivity
     */
    name: string;
    /**
     * Organization ID
     * @type {string}
     * @memberof PlatformOrganizationActivity
     */
    orgId: string;
}

/**
 * Check if a given object implements the PlatformOrganizationActivity interface.
 */
export function instanceOfPlatformOrganizationActivity(value: object): value is PlatformOrganizationActivity {
    if (!('activity' in value) || value['activity'] === undefined) return false;
    if (!('lastLogin' in value) || value['lastLogin'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('orgId' in value) || value['orgId'] === undefined) return false;
    return true;
}

export function PlatformOrganizationActivityFromJSON(json: any): PlatformOrganizationActivity {
    return PlatformOrganizationActivityFromJSONTyped(json, false);
}

export function PlatformOrganizationActivityFromJSONTyped(json: any, ignoreDiscriminator: boolean): PlatformOrganizationActivity {
    if (json == null) {
        return json;
    }
    return {
        
        'activity': json['activity'],
        'lastLogin': (new Date(json['lastLogin'])),
        'name': json['name'],
        'orgId': json['orgId'],
    };
}

export function PlatformOrganizationActivityToJSON(json: any): PlatformOrganizationActivity {
    return PlatformOrganizationActivityToJSONTyped(json, false);
}

export function PlatformOrganizationActivityToJSONTyped(value?: PlatformOrganizationActivity | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'activity': value['activity'],
        'lastLogin': ((value['lastLogin']).toISOString()),
        'name': value['name'],
        'orgId': value['orgId'],
    };
}

