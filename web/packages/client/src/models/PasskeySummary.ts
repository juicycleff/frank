/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PasskeySummary
 */
export interface PasskeySummary {
    [key: string]: any | any;
    /**
     * Whether passkey is active
     * @type {boolean}
     * @memberof PasskeySummary
     */
    active: boolean;
    /**
     * Backup status
     * @type {boolean}
     * @memberof PasskeySummary
     */
    backupState: boolean;
    /**
     * Creation timestamp
     * @type {Date}
     * @memberof PasskeySummary
     */
    createdAt: Date;
    /**
     * Device type
     * @type {string}
     * @memberof PasskeySummary
     */
    deviceType?: string;
    /**
     * Passkey ID
     * @type {string}
     * @memberof PasskeySummary
     */
    id: string;
    /**
     * Last usage
     * @type {Date}
     * @memberof PasskeySummary
     */
    lastUsed?: Date;
    /**
     * Passkey name
     * @type {string}
     * @memberof PasskeySummary
     */
    name: string;
    /**
     * Usage count
     * @type {number}
     * @memberof PasskeySummary
     */
    signCount: number;
}

/**
 * Check if a given object implements the PasskeySummary interface.
 */
export function instanceOfPasskeySummary(value: object): value is PasskeySummary {
    if (!('active' in value) || value['active'] === undefined) return false;
    if (!('backupState' in value) || value['backupState'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('signCount' in value) || value['signCount'] === undefined) return false;
    return true;
}

export function PasskeySummaryFromJSON(json: any): PasskeySummary {
    return PasskeySummaryFromJSONTyped(json, false);
}

export function PasskeySummaryFromJSONTyped(json: any, ignoreDiscriminator: boolean): PasskeySummary {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        'active': json['active'],
        'backupState': json['backupState'],
        'createdAt': (new Date(json['createdAt'])),
        'deviceType': json['deviceType'] == null ? undefined : json['deviceType'],
        'id': json['id'],
        'lastUsed': json['lastUsed'] == null ? undefined : (new Date(json['lastUsed'])),
        'name': json['name'],
        'signCount': json['signCount'],
    };
}

export function PasskeySummaryToJSON(json: any): PasskeySummary {
    return PasskeySummaryToJSONTyped(json, false);
}

export function PasskeySummaryToJSONTyped(value?: PasskeySummary | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
            ...value,
        'active': value['active'],
        'backupState': value['backupState'],
        'createdAt': ((value['createdAt']).toISOString()),
        'deviceType': value['deviceType'],
        'id': value['id'],
        'lastUsed': value['lastUsed'] == null ? undefined : ((value['lastUsed']).toISOString()),
        'name': value['name'],
        'signCount': value['signCount'],
    };
}

