/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ComplianceTrendAnalysis } from './ComplianceTrendAnalysis';
import {
    ComplianceTrendAnalysisFromJSON,
    ComplianceTrendAnalysisFromJSONTyped,
    ComplianceTrendAnalysisToJSON,
    ComplianceTrendAnalysisToJSONTyped,
} from './ComplianceTrendAnalysis';
import type { ComplianceStatus } from './ComplianceStatus';
import {
    ComplianceStatusFromJSON,
    ComplianceStatusFromJSONTyped,
    ComplianceStatusToJSON,
    ComplianceStatusToJSONTyped,
} from './ComplianceStatus';
import type { RecentAssessment } from './RecentAssessment';
import {
    RecentAssessmentFromJSON,
    RecentAssessmentFromJSONTyped,
    RecentAssessmentToJSON,
    RecentAssessmentToJSONTyped,
} from './RecentAssessment';
import type { ComplianceDeadline } from './ComplianceDeadline';
import {
    ComplianceDeadlineFromJSON,
    ComplianceDeadlineFromJSONTyped,
    ComplianceDeadlineToJSON,
    ComplianceDeadlineToJSONTyped,
} from './ComplianceDeadline';

/**
 * 
 * @export
 * @interface ComplianceOverview
 */
export interface ComplianceOverview {
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof ComplianceOverview
     */
    readonly $schema?: string;
    /**
     * 
     * @type {number}
     * @memberof ComplianceOverview
     */
    criticalIssues: number;
    /**
     * 
     * @type {{ [key: string]: ComplianceStatus; }}
     * @memberof ComplianceOverview
     */
    frameworkStatus: { [key: string]: ComplianceStatus; };
    /**
     * 
     * @type {string}
     * @memberof ComplianceOverview
     */
    organizationId: string;
    /**
     * 
     * @type {number}
     * @memberof ComplianceOverview
     */
    overallScore: number;
    /**
     * 
     * @type {Array<RecentAssessment>}
     * @memberof ComplianceOverview
     */
    recentAssessments: Array<RecentAssessment> | null;
    /**
     * 
     * @type {number}
     * @memberof ComplianceOverview
     */
    totalViolations: number;
    /**
     * 
     * @type {ComplianceTrendAnalysis}
     * @memberof ComplianceOverview
     */
    trendAnalysis: ComplianceTrendAnalysis;
    /**
     * 
     * @type {Array<ComplianceDeadline>}
     * @memberof ComplianceOverview
     */
    upcomingDeadlines: Array<ComplianceDeadline> | null;
}

/**
 * Check if a given object implements the ComplianceOverview interface.
 */
export function instanceOfComplianceOverview(value: object): value is ComplianceOverview {
    if (!('criticalIssues' in value) || value['criticalIssues'] === undefined) return false;
    if (!('frameworkStatus' in value) || value['frameworkStatus'] === undefined) return false;
    if (!('organizationId' in value) || value['organizationId'] === undefined) return false;
    if (!('overallScore' in value) || value['overallScore'] === undefined) return false;
    if (!('recentAssessments' in value) || value['recentAssessments'] === undefined) return false;
    if (!('totalViolations' in value) || value['totalViolations'] === undefined) return false;
    if (!('trendAnalysis' in value) || value['trendAnalysis'] === undefined) return false;
    if (!('upcomingDeadlines' in value) || value['upcomingDeadlines'] === undefined) return false;
    return true;
}

export function ComplianceOverviewFromJSON(json: any): ComplianceOverview {
    return ComplianceOverviewFromJSONTyped(json, false);
}

export function ComplianceOverviewFromJSONTyped(json: any, ignoreDiscriminator: boolean): ComplianceOverview {
    if (json == null) {
        return json;
    }
    return {
        
        '$schema': json['$schema'] == null ? undefined : json['$schema'],
        'criticalIssues': json['criticalIssues'],
        'frameworkStatus': (mapValues(json['frameworkStatus'], ComplianceStatusFromJSON)),
        'organizationId': json['organizationId'],
        'overallScore': json['overallScore'],
        'recentAssessments': (json['recentAssessments'] == null ? null : (json['recentAssessments'] as Array<any>).map(RecentAssessmentFromJSON)),
        'totalViolations': json['totalViolations'],
        'trendAnalysis': ComplianceTrendAnalysisFromJSON(json['trendAnalysis']),
        'upcomingDeadlines': (json['upcomingDeadlines'] == null ? null : (json['upcomingDeadlines'] as Array<any>).map(ComplianceDeadlineFromJSON)),
    };
}

export function ComplianceOverviewToJSON(json: any): ComplianceOverview {
    return ComplianceOverviewToJSONTyped(json, false);
}

export function ComplianceOverviewToJSONTyped(value?: Omit<ComplianceOverview, '$schema'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'criticalIssues': value['criticalIssues'],
        'frameworkStatus': (mapValues(value['frameworkStatus'], ComplianceStatusToJSON)),
        'organizationId': value['organizationId'],
        'overallScore': value['overallScore'],
        'recentAssessments': (value['recentAssessments'] == null ? null : (value['recentAssessments'] as Array<any>).map(RecentAssessmentToJSON)),
        'totalViolations': value['totalViolations'],
        'trendAnalysis': ComplianceTrendAnalysisToJSON(value['trendAnalysis']),
        'upcomingDeadlines': (value['upcomingDeadlines'] == null ? null : (value['upcomingDeadlines'] as Array<any>).map(ComplianceDeadlineToJSON)),
    };
}

