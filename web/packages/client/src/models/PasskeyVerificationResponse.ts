/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PasskeyVerificationResponse
 */
export interface PasskeyVerificationResponse {
    [key: string]: any | any;
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof PasskeyVerificationResponse
     */
    readonly $schema?: string;
    /**
     * Error message if invalid
     * @type {string}
     * @memberof PasskeyVerificationResponse
     */
    error?: string;
    /**
     * Passkey ID if valid
     * @type {string}
     * @memberof PasskeyVerificationResponse
     */
    passkeyId?: string;
    /**
     * Updated sign count
     * @type {number}
     * @memberof PasskeyVerificationResponse
     */
    signCount?: number;
    /**
     * User ID if valid
     * @type {string}
     * @memberof PasskeyVerificationResponse
     */
    userId?: string;
    /**
     * Whether passkey is valid
     * @type {boolean}
     * @memberof PasskeyVerificationResponse
     */
    valid: boolean;
}

/**
 * Check if a given object implements the PasskeyVerificationResponse interface.
 */
export function instanceOfPasskeyVerificationResponse(value: object): value is PasskeyVerificationResponse {
    if (!('valid' in value) || value['valid'] === undefined) return false;
    return true;
}

export function PasskeyVerificationResponseFromJSON(json: any): PasskeyVerificationResponse {
    return PasskeyVerificationResponseFromJSONTyped(json, false);
}

export function PasskeyVerificationResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): PasskeyVerificationResponse {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        '$schema': json['$schema'] == null ? undefined : json['$schema'],
        'error': json['error'] == null ? undefined : json['error'],
        'passkeyId': json['passkeyId'] == null ? undefined : json['passkeyId'],
        'signCount': json['signCount'] == null ? undefined : json['signCount'],
        'userId': json['userId'] == null ? undefined : json['userId'],
        'valid': json['valid'],
    };
}

export function PasskeyVerificationResponseToJSON(json: any): PasskeyVerificationResponse {
    return PasskeyVerificationResponseToJSONTyped(json, false);
}

export function PasskeyVerificationResponseToJSONTyped(value?: Omit<PasskeyVerificationResponse, '$schema'> | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
            ...value,
        'error': value['error'],
        'passkeyId': value['passkeyId'],
        'signCount': value['signCount'],
        'userId': value['userId'],
        'valid': value['valid'],
    };
}

