/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SecurityScanRequest
 */
export interface SecurityScanRequest {
    [key: string]: any | any;
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof SecurityScanRequest
     */
    readonly $schema?: string;
    /**
     * 
     * @type {string}
     * @memberof SecurityScanRequest
     */
    depth: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof SecurityScanRequest
     */
    notifyUsers?: Array<string> | null;
    /**
     * 
     * @type {object}
     * @memberof SecurityScanRequest
     */
    options?: object;
    /**
     * 
     * @type {Date}
     * @memberof SecurityScanRequest
     */
    schedule?: Date;
    /**
     * 
     * @type {Array<string>}
     * @memberof SecurityScanRequest
     */
    scope?: Array<string> | null;
    /**
     * 
     * @type {string}
     * @memberof SecurityScanRequest
     */
    type: string;
}

/**
 * Check if a given object implements the SecurityScanRequest interface.
 */
export function instanceOfSecurityScanRequest(value: object): value is SecurityScanRequest {
    if (!('depth' in value) || value['depth'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    return true;
}

export function SecurityScanRequestFromJSON(json: any): SecurityScanRequest {
    return SecurityScanRequestFromJSONTyped(json, false);
}

export function SecurityScanRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): SecurityScanRequest {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        '$schema': json['$schema'] == null ? undefined : json['$schema'],
        'depth': json['depth'],
        'notifyUsers': json['notify_users'] == null ? undefined : json['notify_users'],
        'options': json['options'] == null ? undefined : json['options'],
        'schedule': json['schedule'] == null ? undefined : (new Date(json['schedule'])),
        'scope': json['scope'] == null ? undefined : json['scope'],
        'type': json['type'],
    };
}

export function SecurityScanRequestToJSON(json: any): SecurityScanRequest {
    return SecurityScanRequestToJSONTyped(json, false);
}

export function SecurityScanRequestToJSONTyped(value?: Omit<SecurityScanRequest, '$schema'> | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
            ...value,
        'depth': value['depth'],
        'notify_users': value['notifyUsers'],
        'options': value['options'],
        'schedule': value['schedule'] == null ? undefined : ((value['schedule']).toISOString()),
        'scope': value['scope'],
        'type': value['type'],
    };
}

