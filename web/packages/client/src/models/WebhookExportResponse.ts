/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface WebhookExportResponse
 */
export interface WebhookExportResponse {
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof WebhookExportResponse
     */
    readonly $schema?: string;
    /**
     * Download URL
     * @type {string}
     * @memberof WebhookExportResponse
     */
    downloadUrl: string;
    /**
     * Number of events exported
     * @type {number}
     * @memberof WebhookExportResponse
     */
    eventCount: number;
    /**
     * Download URL expiration
     * @type {Date}
     * @memberof WebhookExportResponse
     */
    expiresAt: Date;
    /**
     * File size in bytes
     * @type {number}
     * @memberof WebhookExportResponse
     */
    fileSize: number;
    /**
     * Export format
     * @type {string}
     * @memberof WebhookExportResponse
     */
    format: string;
    /**
     * Number of webhooks exported
     * @type {number}
     * @memberof WebhookExportResponse
     */
    webhookCount: number;
}

/**
 * Check if a given object implements the WebhookExportResponse interface.
 */
export function instanceOfWebhookExportResponse(value: object): value is WebhookExportResponse {
    if (!('downloadUrl' in value) || value['downloadUrl'] === undefined) return false;
    if (!('eventCount' in value) || value['eventCount'] === undefined) return false;
    if (!('expiresAt' in value) || value['expiresAt'] === undefined) return false;
    if (!('fileSize' in value) || value['fileSize'] === undefined) return false;
    if (!('format' in value) || value['format'] === undefined) return false;
    if (!('webhookCount' in value) || value['webhookCount'] === undefined) return false;
    return true;
}

export function WebhookExportResponseFromJSON(json: any): WebhookExportResponse {
    return WebhookExportResponseFromJSONTyped(json, false);
}

export function WebhookExportResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): WebhookExportResponse {
    if (json == null) {
        return json;
    }
    return {
        
        '$schema': json['$schema'] == null ? undefined : json['$schema'],
        'downloadUrl': json['downloadUrl'],
        'eventCount': json['eventCount'],
        'expiresAt': (new Date(json['expiresAt'])),
        'fileSize': json['fileSize'],
        'format': json['format'],
        'webhookCount': json['webhookCount'],
    };
}

export function WebhookExportResponseToJSON(json: any): WebhookExportResponse {
    return WebhookExportResponseToJSONTyped(json, false);
}

export function WebhookExportResponseToJSONTyped(value?: Omit<WebhookExportResponse, '$schema'> | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'downloadUrl': value['downloadUrl'],
        'eventCount': value['eventCount'],
        'expiresAt': ((value['expiresAt']).toISOString()),
        'fileSize': value['fileSize'],
        'format': value['format'],
        'webhookCount': value['webhookCount'],
    };
}

