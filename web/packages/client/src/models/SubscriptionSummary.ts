/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SubscriptionSummary
 */
export interface SubscriptionSummary {
    /**
     * 
     * @type {number}
     * @memberof SubscriptionSummary
     */
    amount: number;
    /**
     * 
     * @type {string}
     * @memberof SubscriptionSummary
     */
    billingCycle: string;
    /**
     * 
     * @type {Date}
     * @memberof SubscriptionSummary
     */
    cancelAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof SubscriptionSummary
     */
    createdAt: Date;
    /**
     * 
     * @type {string}
     * @memberof SubscriptionSummary
     */
    currency: string;
    /**
     * 
     * @type {Date}
     * @memberof SubscriptionSummary
     */
    currentPeriodEnd: Date;
    /**
     * 
     * @type {Date}
     * @memberof SubscriptionSummary
     */
    currentPeriodStart: Date;
    /**
     * 
     * @type {string}
     * @memberof SubscriptionSummary
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof SubscriptionSummary
     */
    organizationId: string;
    /**
     * 
     * @type {string}
     * @memberof SubscriptionSummary
     */
    organizationName: string;
    /**
     * 
     * @type {string}
     * @memberof SubscriptionSummary
     */
    plan: string;
    /**
     * 
     * @type {string}
     * @memberof SubscriptionSummary
     */
    status: string;
    /**
     * 
     * @type {Date}
     * @memberof SubscriptionSummary
     */
    trialEnd?: Date;
}

/**
 * Check if a given object implements the SubscriptionSummary interface.
 */
export function instanceOfSubscriptionSummary(value: object): value is SubscriptionSummary {
    if (!('amount' in value) || value['amount'] === undefined) return false;
    if (!('billingCycle' in value) || value['billingCycle'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('currency' in value) || value['currency'] === undefined) return false;
    if (!('currentPeriodEnd' in value) || value['currentPeriodEnd'] === undefined) return false;
    if (!('currentPeriodStart' in value) || value['currentPeriodStart'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('organizationId' in value) || value['organizationId'] === undefined) return false;
    if (!('organizationName' in value) || value['organizationName'] === undefined) return false;
    if (!('plan' in value) || value['plan'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    return true;
}

export function SubscriptionSummaryFromJSON(json: any): SubscriptionSummary {
    return SubscriptionSummaryFromJSONTyped(json, false);
}

export function SubscriptionSummaryFromJSONTyped(json: any, ignoreDiscriminator: boolean): SubscriptionSummary {
    if (json == null) {
        return json;
    }
    return {
        
        'amount': json['amount'],
        'billingCycle': json['billing_cycle'],
        'cancelAt': json['cancel_at'] == null ? undefined : (new Date(json['cancel_at'])),
        'createdAt': (new Date(json['created_at'])),
        'currency': json['currency'],
        'currentPeriodEnd': (new Date(json['current_period_end'])),
        'currentPeriodStart': (new Date(json['current_period_start'])),
        'id': json['id'],
        'organizationId': json['organization_id'],
        'organizationName': json['organization_name'],
        'plan': json['plan'],
        'status': json['status'],
        'trialEnd': json['trial_end'] == null ? undefined : (new Date(json['trial_end'])),
    };
}

export function SubscriptionSummaryToJSON(json: any): SubscriptionSummary {
    return SubscriptionSummaryToJSONTyped(json, false);
}

export function SubscriptionSummaryToJSONTyped(value?: SubscriptionSummary | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'amount': value['amount'],
        'billing_cycle': value['billingCycle'],
        'cancel_at': value['cancelAt'] == null ? undefined : ((value['cancelAt']).toISOString()),
        'created_at': ((value['createdAt']).toISOString()),
        'currency': value['currency'],
        'current_period_end': ((value['currentPeriodEnd']).toISOString()),
        'current_period_start': ((value['currentPeriodStart']).toISOString()),
        'id': value['id'],
        'organization_id': value['organizationId'],
        'organization_name': value['organizationName'],
        'plan': value['plan'],
        'status': value['status'],
        'trial_end': value['trialEnd'] == null ? undefined : ((value['trialEnd']).toISOString()),
    };
}

