/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface OrgTrends
 */
export interface OrgTrends {
    /**
     * 
     * @type {number}
     * @memberof OrgTrends
     */
    activityGrowthPercent: number;
    /**
     * 
     * @type {number}
     * @memberof OrgTrends
     */
    apiUsageGrowthPercent: number;
    /**
     * 
     * @type {number}
     * @memberof OrgTrends
     */
    errorRateChangePercent: number;
    /**
     * 
     * @type {number}
     * @memberof OrgTrends
     */
    revenueGrowthPercent: number;
    /**
     * 
     * @type {number}
     * @memberof OrgTrends
     */
    userGrowthPercent: number;
}

/**
 * Check if a given object implements the OrgTrends interface.
 */
export function instanceOfOrgTrends(value: object): value is OrgTrends {
    if (!('activityGrowthPercent' in value) || value['activityGrowthPercent'] === undefined) return false;
    if (!('apiUsageGrowthPercent' in value) || value['apiUsageGrowthPercent'] === undefined) return false;
    if (!('errorRateChangePercent' in value) || value['errorRateChangePercent'] === undefined) return false;
    if (!('revenueGrowthPercent' in value) || value['revenueGrowthPercent'] === undefined) return false;
    if (!('userGrowthPercent' in value) || value['userGrowthPercent'] === undefined) return false;
    return true;
}

export function OrgTrendsFromJSON(json: any): OrgTrends {
    return OrgTrendsFromJSONTyped(json, false);
}

export function OrgTrendsFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrgTrends {
    if (json == null) {
        return json;
    }
    return {
        
        'activityGrowthPercent': json['activityGrowthPercent'],
        'apiUsageGrowthPercent': json['apiUsageGrowthPercent'],
        'errorRateChangePercent': json['errorRateChangePercent'],
        'revenueGrowthPercent': json['revenueGrowthPercent'],
        'userGrowthPercent': json['userGrowthPercent'],
    };
}

export function OrgTrendsToJSON(json: any): OrgTrends {
    return OrgTrendsToJSONTyped(json, false);
}

export function OrgTrendsToJSONTyped(value?: OrgTrends | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'activityGrowthPercent': value['activityGrowthPercent'],
        'apiUsageGrowthPercent': value['apiUsageGrowthPercent'],
        'errorRateChangePercent': value['errorRateChangePercent'],
        'revenueGrowthPercent': value['revenueGrowthPercent'],
        'userGrowthPercent': value['userGrowthPercent'],
    };
}

