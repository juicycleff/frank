/* tslint:disable */
/* eslint-disable */
/**
 * My Project
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SessionSettings
 */
export interface SessionSettings {
    /**
     * Maximum concurrent sessions per user
     * @type {number}
     * @memberof SessionSettings
     */
    maxConcurrentSessions: number;
    /**
     * Remember me duration in seconds
     * @type {number}
     * @memberof SessionSettings
     */
    rememberMeDuration: number;
    /**
     * Actions requiring re-authentication
     * @type {Array<string>}
     * @memberof SessionSettings
     */
    requireReauth?: Array<string> | null;
    /**
     * Session timeout in seconds
     * @type {number}
     * @memberof SessionSettings
     */
    sessionTimeout: number;
}

export function SessionSettingsFromJSON(json: any): SessionSettings {
    return SessionSettingsFromJSONTyped(json, false);
}

export function SessionSettingsFromJSONTyped(json: any, ignoreDiscriminator: boolean): SessionSettings {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'maxConcurrentSessions': json['maxConcurrentSessions'],
        'rememberMeDuration': json['rememberMeDuration'],
        'requireReauth': !exists(json, 'requireReauth') ? undefined : json['requireReauth'],
        'sessionTimeout': json['sessionTimeout'],
    };
}

export function SessionSettingsToJSON(value?: SessionSettings | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'maxConcurrentSessions': value.maxConcurrentSessions,
        'rememberMeDuration': value.rememberMeDuration,
        'requireReauth': value.requireReauth,
        'sessionTimeout': value.sessionTimeout,
    };
}


