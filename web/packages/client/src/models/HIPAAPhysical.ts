/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ControlStatus } from './ControlStatus';
import {
    ControlStatusFromJSON,
    ControlStatusFromJSONTyped,
    ControlStatusToJSON,
    ControlStatusToJSONTyped,
} from './ControlStatus';

/**
 * 
 * @export
 * @interface HIPAAPhysical
 */
export interface HIPAAPhysical {
    /**
     * 
     * @type {ControlStatus}
     * @memberof HIPAAPhysical
     */
    deviceControls: ControlStatus;
    /**
     * 
     * @type {ControlStatus}
     * @memberof HIPAAPhysical
     */
    facilityAccess: ControlStatus;
    /**
     * 
     * @type {ControlStatus}
     * @memberof HIPAAPhysical
     */
    workstationSecurity: ControlStatus;
}

/**
 * Check if a given object implements the HIPAAPhysical interface.
 */
export function instanceOfHIPAAPhysical(value: object): value is HIPAAPhysical {
    if (!('deviceControls' in value) || value['deviceControls'] === undefined) return false;
    if (!('facilityAccess' in value) || value['facilityAccess'] === undefined) return false;
    if (!('workstationSecurity' in value) || value['workstationSecurity'] === undefined) return false;
    return true;
}

export function HIPAAPhysicalFromJSON(json: any): HIPAAPhysical {
    return HIPAAPhysicalFromJSONTyped(json, false);
}

export function HIPAAPhysicalFromJSONTyped(json: any, ignoreDiscriminator: boolean): HIPAAPhysical {
    if (json == null) {
        return json;
    }
    return {
        
        'deviceControls': ControlStatusFromJSON(json['device_controls']),
        'facilityAccess': ControlStatusFromJSON(json['facility_access']),
        'workstationSecurity': ControlStatusFromJSON(json['workstation_security']),
    };
}

export function HIPAAPhysicalToJSON(json: any): HIPAAPhysical {
    return HIPAAPhysicalToJSONTyped(json, false);
}

export function HIPAAPhysicalToJSONTyped(value?: HIPAAPhysical | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'device_controls': ControlStatusToJSON(value['deviceControls']),
        'facility_access': ControlStatusToJSON(value['facilityAccess']),
        'workstation_security': ControlStatusToJSON(value['workstationSecurity']),
    };
}

