/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PasskeyRegistrationBeginRequest
 */
export interface PasskeyRegistrationBeginRequest {
    [key: string]: any | any;
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof PasskeyRegistrationBeginRequest
     */
    readonly $schema?: string;
    /**
     * Attestation type
     * @type {string}
     * @memberof PasskeyRegistrationBeginRequest
     */
    attestationType?: string;
    /**
     * Authenticator type preference
     * @type {string}
     * @memberof PasskeyRegistrationBeginRequest
     */
    authenticatorType?: string;
    /**
     * Display name
     * @type {string}
     * @memberof PasskeyRegistrationBeginRequest
     */
    displayName?: string;
    /**
     * Require resident key
     * @type {boolean}
     * @memberof PasskeyRegistrationBeginRequest
     */
    requireResidentKey: boolean;
    /**
     * User verification requirement
     * @type {string}
     * @memberof PasskeyRegistrationBeginRequest
     */
    userVerification?: string;
    /**
     * Username for registration
     * @type {string}
     * @memberof PasskeyRegistrationBeginRequest
     */
    username?: string;
}

/**
 * Check if a given object implements the PasskeyRegistrationBeginRequest interface.
 */
export function instanceOfPasskeyRegistrationBeginRequest(value: object): value is PasskeyRegistrationBeginRequest {
    if (!('requireResidentKey' in value) || value['requireResidentKey'] === undefined) return false;
    return true;
}

export function PasskeyRegistrationBeginRequestFromJSON(json: any): PasskeyRegistrationBeginRequest {
    return PasskeyRegistrationBeginRequestFromJSONTyped(json, false);
}

export function PasskeyRegistrationBeginRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PasskeyRegistrationBeginRequest {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        '$schema': json['$schema'] == null ? undefined : json['$schema'],
        'attestationType': json['attestationType'] == null ? undefined : json['attestationType'],
        'authenticatorType': json['authenticatorType'] == null ? undefined : json['authenticatorType'],
        'displayName': json['displayName'] == null ? undefined : json['displayName'],
        'requireResidentKey': json['requireResidentKey'],
        'userVerification': json['userVerification'] == null ? undefined : json['userVerification'],
        'username': json['username'] == null ? undefined : json['username'],
    };
}

export function PasskeyRegistrationBeginRequestToJSON(json: any): PasskeyRegistrationBeginRequest {
    return PasskeyRegistrationBeginRequestToJSONTyped(json, false);
}

export function PasskeyRegistrationBeginRequestToJSONTyped(value?: Omit<PasskeyRegistrationBeginRequest, '$schema'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
            ...value,
        'attestationType': value['attestationType'],
        'authenticatorType': value['authenticatorType'],
        'displayName': value['displayName'],
        'requireResidentKey': value['requireResidentKey'],
        'userVerification': value['userVerification'],
        'username': value['username'],
    };
}

