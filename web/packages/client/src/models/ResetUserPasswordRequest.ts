/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ResetUserPasswordRequest
 */
export interface ResetUserPasswordRequest {
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof ResetUserPasswordRequest
     */
    readonly $schema?: string;
    /**
     * 
     * @type {boolean}
     * @memberof ResetUserPasswordRequest
     */
    generateTemporary: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ResetUserPasswordRequest
     */
    notifyUser: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ResetUserPasswordRequest
     */
    requireChange: boolean;
}

/**
 * Check if a given object implements the ResetUserPasswordRequest interface.
 */
export function instanceOfResetUserPasswordRequest(value: object): value is ResetUserPasswordRequest {
    if (!('generateTemporary' in value) || value['generateTemporary'] === undefined) return false;
    if (!('notifyUser' in value) || value['notifyUser'] === undefined) return false;
    if (!('requireChange' in value) || value['requireChange'] === undefined) return false;
    return true;
}

export function ResetUserPasswordRequestFromJSON(json: any): ResetUserPasswordRequest {
    return ResetUserPasswordRequestFromJSONTyped(json, false);
}

export function ResetUserPasswordRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ResetUserPasswordRequest {
    if (json == null) {
        return json;
    }
    return {
        
        '$schema': json['$schema'] == null ? undefined : json['$schema'],
        'generateTemporary': json['generate_temporary'],
        'notifyUser': json['notify_user'],
        'requireChange': json['require_change'],
    };
}

export function ResetUserPasswordRequestToJSON(json: any): ResetUserPasswordRequest {
    return ResetUserPasswordRequestToJSONTyped(json, false);
}

export function ResetUserPasswordRequestToJSONTyped(value?: Omit<ResetUserPasswordRequest, '$schema'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'generate_temporary': value['generateTemporary'],
        'notify_user': value['notifyUser'],
        'require_change': value['requireChange'],
    };
}

