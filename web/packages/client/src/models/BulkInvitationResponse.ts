/* tslint:disable */
/* eslint-disable */
/**
 * My Project
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    BulkInvitationError,
    BulkInvitationErrorFromJSON,
    BulkInvitationErrorFromJSONTyped,
    BulkInvitationErrorToJSON,
    InvitationSummary,
    InvitationSummaryFromJSON,
    InvitationSummaryFromJSONTyped,
    InvitationSummaryToJSON,
} from './';

/**
 * 
 * @export
 * @interface BulkInvitationResponse
 */
export interface BulkInvitationResponse {
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof BulkInvitationResponse
     */
    readonly $schema?: string;
    /**
     * Errors encountered during bulk operation
     * @type {Array<BulkInvitationError>}
     * @memberof BulkInvitationResponse
     */
    errors?: Array<BulkInvitationError> | null;
    /**
     * Number of failed operations
     * @type {number}
     * @memberof BulkInvitationResponse
     */
    failureCount: number;
    /**
     * Successfully created invitations
     * @type {Array<InvitationSummary>}
     * @memberof BulkInvitationResponse
     */
    invitations?: Array<InvitationSummary> | null;
    /**
     * When bulk operation was processed
     * @type {Date}
     * @memberof BulkInvitationResponse
     */
    processedAt: Date;
    /**
     * Number of successful operations
     * @type {number}
     * @memberof BulkInvitationResponse
     */
    successCount: number;
    /**
     * Total number of operations attempted
     * @type {number}
     * @memberof BulkInvitationResponse
     */
    totalCount: number;
}

export function BulkInvitationResponseFromJSON(json: any): BulkInvitationResponse {
    return BulkInvitationResponseFromJSONTyped(json, false);
}

export function BulkInvitationResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): BulkInvitationResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        '$schema': !exists(json, '$schema') ? undefined : json['$schema'],
        'errors': !exists(json, 'errors') ? undefined : (json['errors'] === null ? null : (json['errors'] as Array<any>).map(BulkInvitationErrorFromJSON)),
        'failureCount': json['failureCount'],
        'invitations': !exists(json, 'invitations') ? undefined : (json['invitations'] === null ? null : (json['invitations'] as Array<any>).map(InvitationSummaryFromJSON)),
        'processedAt': (new Date(json['processedAt'])),
        'successCount': json['successCount'],
        'totalCount': json['totalCount'],
    };
}

export function BulkInvitationResponseToJSON(value?: BulkInvitationResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'errors': value.errors === undefined ? undefined : (value.errors === null ? null : (value.errors as Array<any>).map(BulkInvitationErrorToJSON)),
        'failureCount': value.failureCount,
        'invitations': value.invitations === undefined ? undefined : (value.invitations === null ? null : (value.invitations as Array<any>).map(InvitationSummaryToJSON)),
        'processedAt': (value.processedAt.toISOString()),
        'successCount': value.successCount,
        'totalCount': value.totalCount,
    };
}


