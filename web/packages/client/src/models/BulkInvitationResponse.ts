/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { BulkInvitationError } from './BulkInvitationError';
import {
    BulkInvitationErrorFromJSON,
    BulkInvitationErrorFromJSONTyped,
    BulkInvitationErrorToJSON,
    BulkInvitationErrorToJSONTyped,
} from './BulkInvitationError';
import type { InvitationSummary } from './InvitationSummary';
import {
    InvitationSummaryFromJSON,
    InvitationSummaryFromJSONTyped,
    InvitationSummaryToJSON,
    InvitationSummaryToJSONTyped,
} from './InvitationSummary';

/**
 * 
 * @export
 * @interface BulkInvitationResponse
 */
export interface BulkInvitationResponse {
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof BulkInvitationResponse
     */
    readonly $schema?: string;
    /**
     * Errors encountered during bulk operation
     * @type {Array<BulkInvitationError>}
     * @memberof BulkInvitationResponse
     */
    errors?: Array<BulkInvitationError> | null;
    /**
     * Number of failed operations
     * @type {number}
     * @memberof BulkInvitationResponse
     */
    failureCount: number;
    /**
     * Successfully created invitations
     * @type {Array<InvitationSummary>}
     * @memberof BulkInvitationResponse
     */
    invitations?: Array<InvitationSummary> | null;
    /**
     * When bulk operation was processed
     * @type {Date}
     * @memberof BulkInvitationResponse
     */
    processedAt: Date;
    /**
     * Number of successful operations
     * @type {number}
     * @memberof BulkInvitationResponse
     */
    successCount: number;
    /**
     * Total number of operations attempted
     * @type {number}
     * @memberof BulkInvitationResponse
     */
    totalCount: number;
}

/**
 * Check if a given object implements the BulkInvitationResponse interface.
 */
export function instanceOfBulkInvitationResponse(value: object): value is BulkInvitationResponse {
    if (!('failureCount' in value) || value['failureCount'] === undefined) return false;
    if (!('processedAt' in value) || value['processedAt'] === undefined) return false;
    if (!('successCount' in value) || value['successCount'] === undefined) return false;
    if (!('totalCount' in value) || value['totalCount'] === undefined) return false;
    return true;
}

export function BulkInvitationResponseFromJSON(json: any): BulkInvitationResponse {
    return BulkInvitationResponseFromJSONTyped(json, false);
}

export function BulkInvitationResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): BulkInvitationResponse {
    if (json == null) {
        return json;
    }
    return {
        
        '$schema': json['$schema'] == null ? undefined : json['$schema'],
        'errors': json['errors'] == null ? undefined : ((json['errors'] as Array<any>).map(BulkInvitationErrorFromJSON)),
        'failureCount': json['failureCount'],
        'invitations': json['invitations'] == null ? undefined : ((json['invitations'] as Array<any>).map(InvitationSummaryFromJSON)),
        'processedAt': (new Date(json['processedAt'])),
        'successCount': json['successCount'],
        'totalCount': json['totalCount'],
    };
}

export function BulkInvitationResponseToJSON(json: any): BulkInvitationResponse {
    return BulkInvitationResponseToJSONTyped(json, false);
}

export function BulkInvitationResponseToJSONTyped(value?: Omit<BulkInvitationResponse, '$schema'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'errors': value['errors'] == null ? undefined : ((value['errors'] as Array<any>).map(BulkInvitationErrorToJSON)),
        'failureCount': value['failureCount'],
        'invitations': value['invitations'] == null ? undefined : ((value['invitations'] as Array<any>).map(InvitationSummaryToJSON)),
        'processedAt': ((value['processedAt']).toISOString()),
        'successCount': value['successCount'],
        'totalCount': value['totalCount'],
    };
}

