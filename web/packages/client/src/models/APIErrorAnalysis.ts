/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ErrorTrend } from './ErrorTrend';
import {
    ErrorTrendFromJSON,
    ErrorTrendFromJSONTyped,
    ErrorTrendToJSON,
    ErrorTrendToJSONTyped,
} from './ErrorTrend';
import type { ErrorBreakdown } from './ErrorBreakdown';
import {
    ErrorBreakdownFromJSON,
    ErrorBreakdownFromJSONTyped,
    ErrorBreakdownToJSON,
    ErrorBreakdownToJSONTyped,
} from './ErrorBreakdown';

/**
 * 
 * @export
 * @interface APIErrorAnalysis
 */
export interface APIErrorAnalysis {
    /**
     * 
     * @type {number}
     * @memberof APIErrorAnalysis
     */
    errorRatePercent: number;
    /**
     * 
     * @type {Array<ErrorTrend>}
     * @memberof APIErrorAnalysis
     */
    errorTrends: Array<ErrorTrend> | null;
    /**
     * 
     * @type {Array<ErrorBreakdown>}
     * @memberof APIErrorAnalysis
     */
    topErrors: Array<ErrorBreakdown> | null;
    /**
     * 
     * @type {number}
     * @memberof APIErrorAnalysis
     */
    totalErrors: number;
}

/**
 * Check if a given object implements the APIErrorAnalysis interface.
 */
export function instanceOfAPIErrorAnalysis(value: object): value is APIErrorAnalysis {
    if (!('errorRatePercent' in value) || value['errorRatePercent'] === undefined) return false;
    if (!('errorTrends' in value) || value['errorTrends'] === undefined) return false;
    if (!('topErrors' in value) || value['topErrors'] === undefined) return false;
    if (!('totalErrors' in value) || value['totalErrors'] === undefined) return false;
    return true;
}

export function APIErrorAnalysisFromJSON(json: any): APIErrorAnalysis {
    return APIErrorAnalysisFromJSONTyped(json, false);
}

export function APIErrorAnalysisFromJSONTyped(json: any, ignoreDiscriminator: boolean): APIErrorAnalysis {
    if (json == null) {
        return json;
    }
    return {
        
        'errorRatePercent': json['error_rate_percent'],
        'errorTrends': (json['error_trends'] == null ? null : (json['error_trends'] as Array<any>).map(ErrorTrendFromJSON)),
        'topErrors': (json['top_errors'] == null ? null : (json['top_errors'] as Array<any>).map(ErrorBreakdownFromJSON)),
        'totalErrors': json['total_errors'],
    };
}

export function APIErrorAnalysisToJSON(json: any): APIErrorAnalysis {
    return APIErrorAnalysisToJSONTyped(json, false);
}

export function APIErrorAnalysisToJSONTyped(value?: APIErrorAnalysis | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'error_rate_percent': value['errorRatePercent'],
        'error_trends': (value['errorTrends'] == null ? null : (value['errorTrends'] as Array<any>).map(ErrorTrendToJSON)),
        'top_errors': (value['topErrors'] == null ? null : (value['topErrors'] as Array<any>).map(ErrorBreakdownToJSON)),
        'total_errors': value['totalErrors'],
    };
}

