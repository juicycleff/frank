/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { FeatureVariationStats } from './FeatureVariationStats';
import {
    FeatureVariationStatsFromJSON,
    FeatureVariationStatsFromJSONTyped,
    FeatureVariationStatsToJSON,
    FeatureVariationStatsToJSONTyped,
} from './FeatureVariationStats';

/**
 * 
 * @export
 * @interface FeatureAnalytics
 */
export interface FeatureAnalytics {
    /**
     * 
     * @type {number}
     * @memberof FeatureAnalytics
     */
    evaluations: number;
    /**
     * 
     * @type {Date}
     * @memberof FeatureAnalytics
     */
    lastEvaluated?: Date;
    /**
     * 
     * @type {number}
     * @memberof FeatureAnalytics
     */
    usage: number;
    /**
     * 
     * @type {Array<FeatureVariationStats>}
     * @memberof FeatureAnalytics
     */
    variationStats: Array<FeatureVariationStats> | null;
}

/**
 * Check if a given object implements the FeatureAnalytics interface.
 */
export function instanceOfFeatureAnalytics(value: object): value is FeatureAnalytics {
    if (!('evaluations' in value) || value['evaluations'] === undefined) return false;
    if (!('usage' in value) || value['usage'] === undefined) return false;
    if (!('variationStats' in value) || value['variationStats'] === undefined) return false;
    return true;
}

export function FeatureAnalyticsFromJSON(json: any): FeatureAnalytics {
    return FeatureAnalyticsFromJSONTyped(json, false);
}

export function FeatureAnalyticsFromJSONTyped(json: any, ignoreDiscriminator: boolean): FeatureAnalytics {
    if (json == null) {
        return json;
    }
    return {
        
        'evaluations': json['evaluations'],
        'lastEvaluated': json['last_evaluated'] == null ? undefined : (new Date(json['last_evaluated'])),
        'usage': json['usage'],
        'variationStats': (json['variation_stats'] == null ? null : (json['variation_stats'] as Array<any>).map(FeatureVariationStatsFromJSON)),
    };
}

export function FeatureAnalyticsToJSON(json: any): FeatureAnalytics {
    return FeatureAnalyticsToJSONTyped(json, false);
}

export function FeatureAnalyticsToJSONTyped(value?: FeatureAnalytics | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'evaluations': value['evaluations'],
        'last_evaluated': value['lastEvaluated'] == null ? undefined : ((value['lastEvaluated']).toISOString()),
        'usage': value['usage'],
        'variation_stats': (value['variationStats'] == null ? null : (value['variationStats'] as Array<any>).map(FeatureVariationStatsToJSON)),
    };
}

