/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SystemEndpointPerformance } from './SystemEndpointPerformance';
import {
    SystemEndpointPerformanceFromJSON,
    SystemEndpointPerformanceFromJSONTyped,
    SystemEndpointPerformanceToJSON,
    SystemEndpointPerformanceToJSONTyped,
} from './SystemEndpointPerformance';

/**
 * 
 * @export
 * @interface PerformanceStatistics
 */
export interface PerformanceStatistics {
    /**
     * Average response time in ms
     * @type {number}
     * @memberof PerformanceStatistics
     */
    averageResponseTime: number;
    /**
     * Performance by endpoint
     * @type {{ [key: string]: SystemEndpointPerformance; }}
     * @memberof PerformanceStatistics
     */
    byEndpoint: { [key: string]: SystemEndpointPerformance; };
    /**
     * Error rate percentage
     * @type {number}
     * @memberof PerformanceStatistics
     */
    errorRate: number;
    /**
     * 95th percentile response time
     * @type {number}
     * @memberof PerformanceStatistics
     */
    p95ResponseTime: number;
    /**
     * 99th percentile response time
     * @type {number}
     * @memberof PerformanceStatistics
     */
    p99ResponseTime: number;
    /**
     * Requests per second
     * @type {number}
     * @memberof PerformanceStatistics
     */
    throughput: number;
    /**
     * Uptime percentage
     * @type {number}
     * @memberof PerformanceStatistics
     */
    uptime: number;
}

/**
 * Check if a given object implements the PerformanceStatistics interface.
 */
export function instanceOfPerformanceStatistics(value: object): value is PerformanceStatistics {
    if (!('averageResponseTime' in value) || value['averageResponseTime'] === undefined) return false;
    if (!('byEndpoint' in value) || value['byEndpoint'] === undefined) return false;
    if (!('errorRate' in value) || value['errorRate'] === undefined) return false;
    if (!('p95ResponseTime' in value) || value['p95ResponseTime'] === undefined) return false;
    if (!('p99ResponseTime' in value) || value['p99ResponseTime'] === undefined) return false;
    if (!('throughput' in value) || value['throughput'] === undefined) return false;
    if (!('uptime' in value) || value['uptime'] === undefined) return false;
    return true;
}

export function PerformanceStatisticsFromJSON(json: any): PerformanceStatistics {
    return PerformanceStatisticsFromJSONTyped(json, false);
}

export function PerformanceStatisticsFromJSONTyped(json: any, ignoreDiscriminator: boolean): PerformanceStatistics {
    if (json == null) {
        return json;
    }
    return {
        
        'averageResponseTime': json['averageResponseTime'],
        'byEndpoint': (mapValues(json['byEndpoint'], SystemEndpointPerformanceFromJSON)),
        'errorRate': json['errorRate'],
        'p95ResponseTime': json['p95ResponseTime'],
        'p99ResponseTime': json['p99ResponseTime'],
        'throughput': json['throughput'],
        'uptime': json['uptime'],
    };
}

export function PerformanceStatisticsToJSON(json: any): PerformanceStatistics {
    return PerformanceStatisticsToJSONTyped(json, false);
}

export function PerformanceStatisticsToJSONTyped(value?: PerformanceStatistics | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'averageResponseTime': value['averageResponseTime'],
        'byEndpoint': (mapValues(value['byEndpoint'], SystemEndpointPerformanceToJSON)),
        'errorRate': value['errorRate'],
        'p95ResponseTime': value['p95ResponseTime'],
        'p99ResponseTime': value['p99ResponseTime'],
        'throughput': value['throughput'],
        'uptime': value['uptime'],
    };
}

