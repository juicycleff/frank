/* tslint:disable */
/* eslint-disable */
/**
 * My Project
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface MembershipActivity
 */
export interface MembershipActivity {
    /**
     * Action performed
     * @type {string}
     * @memberof MembershipActivity
     */
    action: string;
    /**
     * Who performed the action
     * @type {string}
     * @memberof MembershipActivity
     */
    actorEmail: string;
    /**
     * Action description
     * @type {string}
     * @memberof MembershipActivity
     */
    description: string;
    /**
     * Activity ID
     * @type {string}
     * @memberof MembershipActivity
     */
    id: string;
    /**
     * Membership ID
     * @type {string}
     * @memberof MembershipActivity
     */
    membershipId: string;
    /**
     * Additional metadata
     * @type {{ [key: string]: string; }}
     * @memberof MembershipActivity
     */
    metadata?: { [key: string]: string; };
    /**
     * Activity timestamp
     * @type {Date}
     * @memberof MembershipActivity
     */
    timestamp: Date;
    /**
     * User email
     * @type {string}
     * @memberof MembershipActivity
     */
    userEmail: string;
    /**
     * Member ID
     * @type {string}
     * @memberof MembershipActivity
     */
    userId: string;
}

export function MembershipActivityFromJSON(json: any): MembershipActivity {
    return MembershipActivityFromJSONTyped(json, false);
}

export function MembershipActivityFromJSONTyped(json: any, ignoreDiscriminator: boolean): MembershipActivity {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'action': json['action'],
        'actorEmail': json['actorEmail'],
        'description': json['description'],
        'id': json['id'],
        'membershipId': json['membershipId'],
        'metadata': !exists(json, 'metadata') ? undefined : json['metadata'],
        'timestamp': (new Date(json['timestamp'])),
        'userEmail': json['userEmail'],
        'userId': json['userId'],
    };
}

export function MembershipActivityToJSON(value?: MembershipActivity | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'action': value.action,
        'actorEmail': value.actorEmail,
        'description': value.description,
        'id': value.id,
        'membershipId': value.membershipId,
        'metadata': value.metadata,
        'timestamp': (value.timestamp.toISOString()),
        'userEmail': value.userEmail,
        'userId': value.userId,
    };
}


