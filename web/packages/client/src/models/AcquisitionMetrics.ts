/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AcquisitionChannel } from './AcquisitionChannel';
import {
    AcquisitionChannelFromJSON,
    AcquisitionChannelFromJSONTyped,
    AcquisitionChannelToJSON,
    AcquisitionChannelToJSONTyped,
} from './AcquisitionChannel';

/**
 * 
 * @export
 * @interface AcquisitionMetrics
 */
export interface AcquisitionMetrics {
    /**
     * 
     * @type {Array<AcquisitionChannel>}
     * @memberof AcquisitionMetrics
     */
    channels: Array<AcquisitionChannel> | null;
    /**
     * 
     * @type {number}
     * @memberof AcquisitionMetrics
     */
    conversionRatePercent: number;
    /**
     * 
     * @type {number}
     * @memberof AcquisitionMetrics
     */
    costPerUser: number;
    /**
     * 
     * @type {number}
     * @memberof AcquisitionMetrics
     */
    lifetimeValue: number;
    /**
     * 
     * @type {number}
     * @memberof AcquisitionMetrics
     */
    paybackPeriodDays: number;
}

/**
 * Check if a given object implements the AcquisitionMetrics interface.
 */
export function instanceOfAcquisitionMetrics(value: object): value is AcquisitionMetrics {
    if (!('channels' in value) || value['channels'] === undefined) return false;
    if (!('conversionRatePercent' in value) || value['conversionRatePercent'] === undefined) return false;
    if (!('costPerUser' in value) || value['costPerUser'] === undefined) return false;
    if (!('lifetimeValue' in value) || value['lifetimeValue'] === undefined) return false;
    if (!('paybackPeriodDays' in value) || value['paybackPeriodDays'] === undefined) return false;
    return true;
}

export function AcquisitionMetricsFromJSON(json: any): AcquisitionMetrics {
    return AcquisitionMetricsFromJSONTyped(json, false);
}

export function AcquisitionMetricsFromJSONTyped(json: any, ignoreDiscriminator: boolean): AcquisitionMetrics {
    if (json == null) {
        return json;
    }
    return {
        
        'channels': (json['channels'] == null ? null : (json['channels'] as Array<any>).map(AcquisitionChannelFromJSON)),
        'conversionRatePercent': json['conversion_rate_percent'],
        'costPerUser': json['cost_per_user'],
        'lifetimeValue': json['lifetime_value'],
        'paybackPeriodDays': json['payback_period_days'],
    };
}

export function AcquisitionMetricsToJSON(json: any): AcquisitionMetrics {
    return AcquisitionMetricsToJSONTyped(json, false);
}

export function AcquisitionMetricsToJSONTyped(value?: AcquisitionMetrics | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'channels': (value['channels'] == null ? null : (value['channels'] as Array<any>).map(AcquisitionChannelToJSON)),
        'conversion_rate_percent': value['conversionRatePercent'],
        'cost_per_user': value['costPerUser'],
        'lifetime_value': value['lifetimeValue'],
        'payback_period_days': value['paybackPeriodDays'],
    };
}

