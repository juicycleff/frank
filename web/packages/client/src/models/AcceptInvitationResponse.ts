/* tslint:disable */
/* eslint-disable */
/**
 * My Project
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Membership,
    MembershipFromJSON,
    MembershipFromJSONTyped,
    MembershipToJSON,
    OrganizationSummary,
    OrganizationSummaryFromJSON,
    OrganizationSummaryFromJSONTyped,
    OrganizationSummaryToJSON,
    User,
    UserFromJSON,
    UserFromJSONTyped,
    UserToJSON,
} from './';

/**
 * 
 * @export
 * @interface AcceptInvitationResponse
 */
export interface AcceptInvitationResponse {
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof AcceptInvitationResponse
     */
    readonly $schema?: string;
    /**
     * Access token for auto-login
     * @type {string}
     * @memberof AcceptInvitationResponse
     */
    accessToken?: string;
    /**
     * 
     * @type {Membership}
     * @memberof AcceptInvitationResponse
     */
    membership: Membership;
    /**
     * 
     * @type {OrganizationSummary}
     * @memberof AcceptInvitationResponse
     */
    organization: OrganizationSummary;
    /**
     * Refresh token
     * @type {string}
     * @memberof AcceptInvitationResponse
     */
    refreshToken?: string;
    /**
     * Whether invitation was accepted
     * @type {boolean}
     * @memberof AcceptInvitationResponse
     */
    success: boolean;
    /**
     * 
     * @type {User}
     * @memberof AcceptInvitationResponse
     */
    user: User;
}

export function AcceptInvitationResponseFromJSON(json: any): AcceptInvitationResponse {
    return AcceptInvitationResponseFromJSONTyped(json, false);
}

export function AcceptInvitationResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): AcceptInvitationResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        '$schema': !exists(json, '$schema') ? undefined : json['$schema'],
        'accessToken': !exists(json, 'accessToken') ? undefined : json['accessToken'],
        'membership': MembershipFromJSON(json['membership']),
        'organization': OrganizationSummaryFromJSON(json['organization']),
        'refreshToken': !exists(json, 'refreshToken') ? undefined : json['refreshToken'],
        'success': json['success'],
        'user': UserFromJSON(json['user']),
    };
}

export function AcceptInvitationResponseToJSON(value?: AcceptInvitationResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'accessToken': value.accessToken,
        'membership': MembershipToJSON(value.membership),
        'organization': OrganizationSummaryToJSON(value.organization),
        'refreshToken': value.refreshToken,
        'success': value.success,
        'user': UserToJSON(value.user),
    };
}


