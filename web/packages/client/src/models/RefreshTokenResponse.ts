/* tslint:disable */
/* eslint-disable */
/**
 * My Project
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface RefreshTokenResponse
 */
export interface RefreshTokenResponse {
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof RefreshTokenResponse
     */
    readonly $schema?: string;
    /**
     * New JWT access token
     * @type {string}
     * @memberof RefreshTokenResponse
     */
    accessToken: string;
    /**
     * Token expiration timestamp
     * @type {Date}
     * @memberof RefreshTokenResponse
     */
    expiresAt: Date;
    /**
     * Token expiration in seconds
     * @type {number}
     * @memberof RefreshTokenResponse
     */
    expiresIn: number;
    /**
     * New refresh token (if rotation enabled)
     * @type {string}
     * @memberof RefreshTokenResponse
     */
    refreshToken?: string;
    /**
     * Token type
     * @type {string}
     * @memberof RefreshTokenResponse
     */
    tokenType: string;
}

export function RefreshTokenResponseFromJSON(json: any): RefreshTokenResponse {
    return RefreshTokenResponseFromJSONTyped(json, false);
}

export function RefreshTokenResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): RefreshTokenResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        '$schema': !exists(json, '$schema') ? undefined : json['$schema'],
        'accessToken': json['accessToken'],
        'expiresAt': (new Date(json['expiresAt'])),
        'expiresIn': json['expiresIn'],
        'refreshToken': !exists(json, 'refreshToken') ? undefined : json['refreshToken'],
        'tokenType': json['tokenType'],
    };
}

export function RefreshTokenResponseToJSON(value?: RefreshTokenResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'accessToken': value.accessToken,
        'expiresAt': (value.expiresAt.toISOString()),
        'expiresIn': value.expiresIn,
        'refreshToken': value.refreshToken,
        'tokenType': value.tokenType,
    };
}


