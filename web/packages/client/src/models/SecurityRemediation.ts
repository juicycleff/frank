/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RemediationStep } from './RemediationStep';
import {
    RemediationStepFromJSON,
    RemediationStepFromJSONTyped,
    RemediationStepToJSON,
    RemediationStepToJSONTyped,
} from './RemediationStep';

/**
 * 
 * @export
 * @interface SecurityRemediation
 */
export interface SecurityRemediation {
    /**
     * 
     * @type {Date}
     * @memberof SecurityRemediation
     */
    completedAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof SecurityRemediation
     */
    notes?: string;
    /**
     * 
     * @type {Date}
     * @memberof SecurityRemediation
     */
    startedAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof SecurityRemediation
     */
    status: string;
    /**
     * 
     * @type {Array<RemediationStep>}
     * @memberof SecurityRemediation
     */
    steps: Array<RemediationStep> | null;
}

/**
 * Check if a given object implements the SecurityRemediation interface.
 */
export function instanceOfSecurityRemediation(value: object): value is SecurityRemediation {
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('steps' in value) || value['steps'] === undefined) return false;
    return true;
}

export function SecurityRemediationFromJSON(json: any): SecurityRemediation {
    return SecurityRemediationFromJSONTyped(json, false);
}

export function SecurityRemediationFromJSONTyped(json: any, ignoreDiscriminator: boolean): SecurityRemediation {
    if (json == null) {
        return json;
    }
    return {
        
        'completedAt': json['completed_at'] == null ? undefined : (new Date(json['completed_at'])),
        'notes': json['notes'] == null ? undefined : json['notes'],
        'startedAt': json['started_at'] == null ? undefined : (new Date(json['started_at'])),
        'status': json['status'],
        'steps': (json['steps'] == null ? null : (json['steps'] as Array<any>).map(RemediationStepFromJSON)),
    };
}

export function SecurityRemediationToJSON(json: any): SecurityRemediation {
    return SecurityRemediationToJSONTyped(json, false);
}

export function SecurityRemediationToJSONTyped(value?: SecurityRemediation | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'completed_at': value['completedAt'] == null ? undefined : ((value['completedAt']).toISOString()),
        'notes': value['notes'],
        'started_at': value['startedAt'] == null ? undefined : ((value['startedAt']).toISOString()),
        'status': value['status'],
        'steps': (value['steps'] == null ? null : (value['steps'] as Array<any>).map(RemediationStepToJSON)),
    };
}

