/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface RevokeTokenRequest
 */
export interface RevokeTokenRequest {
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof RevokeTokenRequest
     */
    readonly $schema?: string;
    /**
     * OAuth client ID
     * @type {string}
     * @memberof RevokeTokenRequest
     */
    clientId: string;
    /**
     * OAuth client secret
     * @type {string}
     * @memberof RevokeTokenRequest
     */
    clientSecret?: string;
    /**
     * Token to revoke
     * @type {string}
     * @memberof RevokeTokenRequest
     */
    token: string;
    /**
     * Token type hint
     * @type {string}
     * @memberof RevokeTokenRequest
     */
    tokenTypeHint?: string;
}

/**
 * Check if a given object implements the RevokeTokenRequest interface.
 */
export function instanceOfRevokeTokenRequest(value: object): value is RevokeTokenRequest {
    if (!('clientId' in value) || value['clientId'] === undefined) return false;
    if (!('token' in value) || value['token'] === undefined) return false;
    return true;
}

export function RevokeTokenRequestFromJSON(json: any): RevokeTokenRequest {
    return RevokeTokenRequestFromJSONTyped(json, false);
}

export function RevokeTokenRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): RevokeTokenRequest {
    if (json == null) {
        return json;
    }
    return {
        
        '$schema': json['$schema'] == null ? undefined : json['$schema'],
        'clientId': json['clientId'],
        'clientSecret': json['clientSecret'] == null ? undefined : json['clientSecret'],
        'token': json['token'],
        'tokenTypeHint': json['tokenTypeHint'] == null ? undefined : json['tokenTypeHint'],
    };
}

export function RevokeTokenRequestToJSON(json: any): RevokeTokenRequest {
    return RevokeTokenRequestToJSONTyped(json, false);
}

export function RevokeTokenRequestToJSONTyped(value?: Omit<RevokeTokenRequest, '$schema'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'clientId': value['clientId'],
        'clientSecret': value['clientSecret'],
        'token': value['token'],
        'tokenTypeHint': value['tokenTypeHint'],
    };
}

