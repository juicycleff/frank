/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PasskeyStats
 */
export interface PasskeyStats {
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof PasskeyStats
     */
    readonly $schema?: string;
    /**
     * Active passkeys
     * @type {number}
     * @memberof PasskeyStats
     */
    activePasskeys: number;
    /**
     * Average passkeys per user
     * @type {number}
     * @memberof PasskeyStats
     */
    averagePerUser: number;
    /**
     * Backed up passkeys
     * @type {number}
     * @memberof PasskeyStats
     */
    backedUpPasskeys: number;
    /**
     * Passkeys created this month
     * @type {number}
     * @memberof PasskeyStats
     */
    passkeysThisMonth: number;
    /**
     * Passkeys used today
     * @type {number}
     * @memberof PasskeyStats
     */
    passkeysUsedToday: number;
    /**
     * Passkeys used this week
     * @type {number}
     * @memberof PasskeyStats
     */
    passkeysUsedWeek: number;
    /**
     * Platform passkeys
     * @type {number}
     * @memberof PasskeyStats
     */
    platformPasskeys: number;
    /**
     * Roaming passkeys
     * @type {number}
     * @memberof PasskeyStats
     */
    roamingPasskeys: number;
    /**
     * Total passkeys
     * @type {number}
     * @memberof PasskeyStats
     */
    totalPasskeys: number;
    /**
     * Users with passkeys
     * @type {number}
     * @memberof PasskeyStats
     */
    uniqueUsers: number;
}

/**
 * Check if a given object implements the PasskeyStats interface.
 */
export function instanceOfPasskeyStats(value: object): value is PasskeyStats {
    if (!('activePasskeys' in value) || value['activePasskeys'] === undefined) return false;
    if (!('averagePerUser' in value) || value['averagePerUser'] === undefined) return false;
    if (!('backedUpPasskeys' in value) || value['backedUpPasskeys'] === undefined) return false;
    if (!('passkeysThisMonth' in value) || value['passkeysThisMonth'] === undefined) return false;
    if (!('passkeysUsedToday' in value) || value['passkeysUsedToday'] === undefined) return false;
    if (!('passkeysUsedWeek' in value) || value['passkeysUsedWeek'] === undefined) return false;
    if (!('platformPasskeys' in value) || value['platformPasskeys'] === undefined) return false;
    if (!('roamingPasskeys' in value) || value['roamingPasskeys'] === undefined) return false;
    if (!('totalPasskeys' in value) || value['totalPasskeys'] === undefined) return false;
    if (!('uniqueUsers' in value) || value['uniqueUsers'] === undefined) return false;
    return true;
}

export function PasskeyStatsFromJSON(json: any): PasskeyStats {
    return PasskeyStatsFromJSONTyped(json, false);
}

export function PasskeyStatsFromJSONTyped(json: any, ignoreDiscriminator: boolean): PasskeyStats {
    if (json == null) {
        return json;
    }
    return {
        
        '$schema': json['$schema'] == null ? undefined : json['$schema'],
        'activePasskeys': json['activePasskeys'],
        'averagePerUser': json['averagePerUser'],
        'backedUpPasskeys': json['backedUpPasskeys'],
        'passkeysThisMonth': json['passkeysThisMonth'],
        'passkeysUsedToday': json['passkeysUsedToday'],
        'passkeysUsedWeek': json['passkeysUsedWeek'],
        'platformPasskeys': json['platformPasskeys'],
        'roamingPasskeys': json['roamingPasskeys'],
        'totalPasskeys': json['totalPasskeys'],
        'uniqueUsers': json['uniqueUsers'],
    };
}

export function PasskeyStatsToJSON(json: any): PasskeyStats {
    return PasskeyStatsToJSONTyped(json, false);
}

export function PasskeyStatsToJSONTyped(value?: Omit<PasskeyStats, '$schema'> | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'activePasskeys': value['activePasskeys'],
        'averagePerUser': value['averagePerUser'],
        'backedUpPasskeys': value['backedUpPasskeys'],
        'passkeysThisMonth': value['passkeysThisMonth'],
        'passkeysUsedToday': value['passkeysUsedToday'],
        'passkeysUsedWeek': value['passkeysUsedWeek'],
        'platformPasskeys': value['platformPasskeys'],
        'roamingPasskeys': value['roamingPasskeys'],
        'totalPasskeys': value['totalPasskeys'],
        'uniqueUsers': value['uniqueUsers'],
    };
}

