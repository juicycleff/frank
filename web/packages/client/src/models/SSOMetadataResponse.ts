/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SSOMetadataResponse
 */
export interface SSOMetadataResponse {
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof SSOMetadataResponse
     */
    readonly $schema?: string;
    /**
     * Content type
     * @type {string}
     * @memberof SSOMetadataResponse
     */
    contentType: string;
    /**
     * Download URL
     * @type {string}
     * @memberof SSOMetadataResponse
     */
    downloadUrl?: string;
    /**
     * Metadata format
     * @type {string}
     * @memberof SSOMetadataResponse
     */
    format: string;
    /**
     * SSO metadata content
     * @type {string}
     * @memberof SSOMetadataResponse
     */
    metadata: string;
}

/**
 * Check if a given object implements the SSOMetadataResponse interface.
 */
export function instanceOfSSOMetadataResponse(value: object): value is SSOMetadataResponse {
    if (!('contentType' in value) || value['contentType'] === undefined) return false;
    if (!('format' in value) || value['format'] === undefined) return false;
    if (!('metadata' in value) || value['metadata'] === undefined) return false;
    return true;
}

export function SSOMetadataResponseFromJSON(json: any): SSOMetadataResponse {
    return SSOMetadataResponseFromJSONTyped(json, false);
}

export function SSOMetadataResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): SSOMetadataResponse {
    if (json == null) {
        return json;
    }
    return {
        
        '$schema': json['$schema'] == null ? undefined : json['$schema'],
        'contentType': json['contentType'],
        'downloadUrl': json['downloadUrl'] == null ? undefined : json['downloadUrl'],
        'format': json['format'],
        'metadata': json['metadata'],
    };
}

export function SSOMetadataResponseToJSON(json: any): SSOMetadataResponse {
    return SSOMetadataResponseToJSONTyped(json, false);
}

export function SSOMetadataResponseToJSONTyped(value?: Omit<SSOMetadataResponse, '$schema'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'contentType': value['contentType'],
        'downloadUrl': value['downloadUrl'],
        'format': value['format'],
        'metadata': value['metadata'],
    };
}

