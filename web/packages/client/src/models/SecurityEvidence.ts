/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SecurityEvidence
 */
export interface SecurityEvidence {
    /**
     * 
     * @type {Date}
     * @memberof SecurityEvidence
     */
    collectedAt: Date;
    /**
     * 
     * @type {string}
     * @memberof SecurityEvidence
     */
    collectedBy: string;
    /**
     * 
     * @type {string}
     * @memberof SecurityEvidence
     */
    description: string;
    /**
     * 
     * @type {string}
     * @memberof SecurityEvidence
     */
    hash?: string;
    /**
     * 
     * @type {string}
     * @memberof SecurityEvidence
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof SecurityEvidence
     */
    type: string;
    /**
     * 
     * @type {string}
     * @memberof SecurityEvidence
     */
    url?: string;
}

/**
 * Check if a given object implements the SecurityEvidence interface.
 */
export function instanceOfSecurityEvidence(value: object): value is SecurityEvidence {
    if (!('collectedAt' in value) || value['collectedAt'] === undefined) return false;
    if (!('collectedBy' in value) || value['collectedBy'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    return true;
}

export function SecurityEvidenceFromJSON(json: any): SecurityEvidence {
    return SecurityEvidenceFromJSONTyped(json, false);
}

export function SecurityEvidenceFromJSONTyped(json: any, ignoreDiscriminator: boolean): SecurityEvidence {
    if (json == null) {
        return json;
    }
    return {
        
        'collectedAt': (new Date(json['collected_at'])),
        'collectedBy': json['collected_by'],
        'description': json['description'],
        'hash': json['hash'] == null ? undefined : json['hash'],
        'id': json['id'],
        'type': json['type'],
        'url': json['url'] == null ? undefined : json['url'],
    };
}

export function SecurityEvidenceToJSON(json: any): SecurityEvidence {
    return SecurityEvidenceToJSONTyped(json, false);
}

export function SecurityEvidenceToJSONTyped(value?: SecurityEvidence | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'collected_at': ((value['collectedAt']).toISOString()),
        'collected_by': value['collectedBy'],
        'description': value['description'],
        'hash': value['hash'],
        'id': value['id'],
        'type': value['type'],
        'url': value['url'],
    };
}

