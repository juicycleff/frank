/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { APIKeyRateLimits } from './APIKeyRateLimits';
import {
    APIKeyRateLimitsFromJSON,
    APIKeyRateLimitsFromJSONTyped,
    APIKeyRateLimitsToJSON,
    APIKeyRateLimitsToJSONTyped,
} from './APIKeyRateLimits';

/**
 * 
 * @export
 * @interface UpdateAPIKeyRequest
 */
export interface UpdateAPIKeyRequest {
    [key: string]: any | any;
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof UpdateAPIKeyRequest
     */
    readonly $schema?: string;
    /**
     * Updated active status
     * @type {boolean}
     * @memberof UpdateAPIKeyRequest
     */
    active?: boolean;
    /**
     * Updated expiration
     * @type {Date}
     * @memberof UpdateAPIKeyRequest
     */
    expiresAt?: Date;
    /**
     * Updated IP whitelist
     * @type {Array<string>}
     * @memberof UpdateAPIKeyRequest
     */
    ipWhitelist?: Array<string>;
    /**
     * Updated metadata
     * @type {object}
     * @memberof UpdateAPIKeyRequest
     */
    metadata?: object;
    /**
     * Updated name
     * @type {string}
     * @memberof UpdateAPIKeyRequest
     */
    name?: string;
    /**
     * Updated permissions
     * @type {Array<string>}
     * @memberof UpdateAPIKeyRequest
     */
    permissions?: Array<string>;
    /**
     * Updated rate limits
     * @type {APIKeyRateLimits}
     * @memberof UpdateAPIKeyRequest
     */
    rateLimits?: APIKeyRateLimits;
    /**
     * Updated scopes
     * @type {Array<string>}
     * @memberof UpdateAPIKeyRequest
     */
    scopes?: Array<string>;
}

/**
 * Check if a given object implements the UpdateAPIKeyRequest interface.
 */
export function instanceOfUpdateAPIKeyRequest(value: object): value is UpdateAPIKeyRequest {
    return true;
}

export function UpdateAPIKeyRequestFromJSON(json: any): UpdateAPIKeyRequest {
    return UpdateAPIKeyRequestFromJSONTyped(json, false);
}

export function UpdateAPIKeyRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateAPIKeyRequest {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        '$schema': json['$schema'] == null ? undefined : json['$schema'],
        'active': json['active'] == null ? undefined : json['active'],
        'expiresAt': json['expiresAt'] == null ? undefined : (new Date(json['expiresAt'])),
        'ipWhitelist': json['ipWhitelist'] == null ? undefined : json['ipWhitelist'],
        'metadata': json['metadata'] == null ? undefined : json['metadata'],
        'name': json['name'] == null ? undefined : json['name'],
        'permissions': json['permissions'] == null ? undefined : json['permissions'],
        'rateLimits': json['rateLimits'] == null ? undefined : APIKeyRateLimitsFromJSON(json['rateLimits']),
        'scopes': json['scopes'] == null ? undefined : json['scopes'],
    };
}

export function UpdateAPIKeyRequestToJSON(json: any): UpdateAPIKeyRequest {
    return UpdateAPIKeyRequestToJSONTyped(json, false);
}

export function UpdateAPIKeyRequestToJSONTyped(value?: Omit<UpdateAPIKeyRequest, '$schema'> | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
            ...value,
        'active': value['active'],
        'expiresAt': value['expiresAt'] == null ? undefined : ((value['expiresAt']).toISOString()),
        'ipWhitelist': value['ipWhitelist'],
        'metadata': value['metadata'],
        'name': value['name'],
        'permissions': value['permissions'],
        'rateLimits': APIKeyRateLimitsToJSON(value['rateLimits']),
        'scopes': value['scopes'],
    };
}

