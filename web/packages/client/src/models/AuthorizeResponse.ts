/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AuthorizeResponse
 */
export interface AuthorizeResponse {
    /**
     * A URL to the JSON Schema for this object.
     * @type {string}
     * @memberof AuthorizeResponse
     */
    readonly $schema?: string;
    /**
     * Authorization code
     * @type {string}
     * @memberof AuthorizeResponse
     */
    code?: string;
    /**
     * Code expiry in seconds
     * @type {number}
     * @memberof AuthorizeResponse
     */
    expiresIn: number;
    /**
     * Full redirect URI
     * @type {string}
     * @memberof AuthorizeResponse
     */
    redirectUri: string;
    /**
     * OAuth state parameter
     * @type {string}
     * @memberof AuthorizeResponse
     */
    state?: string;
}

/**
 * Check if a given object implements the AuthorizeResponse interface.
 */
export function instanceOfAuthorizeResponse(value: object): value is AuthorizeResponse {
    if (!('expiresIn' in value) || value['expiresIn'] === undefined) return false;
    if (!('redirectUri' in value) || value['redirectUri'] === undefined) return false;
    return true;
}

export function AuthorizeResponseFromJSON(json: any): AuthorizeResponse {
    return AuthorizeResponseFromJSONTyped(json, false);
}

export function AuthorizeResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): AuthorizeResponse {
    if (json == null) {
        return json;
    }
    return {
        
        '$schema': json['$schema'] == null ? undefined : json['$schema'],
        'code': json['code'] == null ? undefined : json['code'],
        'expiresIn': json['expiresIn'],
        'redirectUri': json['redirectUri'],
        'state': json['state'] == null ? undefined : json['state'],
    };
}

export function AuthorizeResponseToJSON(json: any): AuthorizeResponse {
    return AuthorizeResponseToJSONTyped(json, false);
}

export function AuthorizeResponseToJSONTyped(value?: Omit<AuthorizeResponse, '$schema'> | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'code': value['code'],
        'expiresIn': value['expiresIn'],
        'redirectUri': value['redirectUri'],
        'state': value['state'],
    };
}

