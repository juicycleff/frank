/* tslint:disable */
/* eslint-disable */
/**
 * Frank Authentication API
 * Multi-tenant authentication SaaS platform API with Clerk.js compatibility
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@frankauth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Discount } from './Discount';
import {
    DiscountFromJSON,
    DiscountFromJSONTyped,
    DiscountToJSON,
    DiscountToJSONTyped,
} from './Discount';
import type { TaxInfo } from './TaxInfo';
import {
    TaxInfoFromJSON,
    TaxInfoFromJSONTyped,
    TaxInfoToJSON,
    TaxInfoToJSONTyped,
} from './TaxInfo';
import type { PaymentMethod } from './PaymentMethod';
import {
    PaymentMethodFromJSON,
    PaymentMethodFromJSONTyped,
    PaymentMethodToJSON,
    PaymentMethodToJSONTyped,
} from './PaymentMethod';

/**
 * 
 * @export
 * @interface SubscriptionBilling
 */
export interface SubscriptionBilling {
    /**
     * 
     * @type {number}
     * @memberof SubscriptionBilling
     */
    amount: number;
    /**
     * 
     * @type {string}
     * @memberof SubscriptionBilling
     */
    billingCycle: string;
    /**
     * 
     * @type {string}
     * @memberof SubscriptionBilling
     */
    currency: string;
    /**
     * 
     * @type {Array<Discount>}
     * @memberof SubscriptionBilling
     */
    discounts: Array<Discount> | null;
    /**
     * 
     * @type {Date}
     * @memberof SubscriptionBilling
     */
    nextBilling: Date;
    /**
     * 
     * @type {PaymentMethod}
     * @memberof SubscriptionBilling
     */
    paymentMethod: PaymentMethod;
    /**
     * 
     * @type {TaxInfo}
     * @memberof SubscriptionBilling
     */
    tax: TaxInfo;
}

/**
 * Check if a given object implements the SubscriptionBilling interface.
 */
export function instanceOfSubscriptionBilling(value: object): value is SubscriptionBilling {
    if (!('amount' in value) || value['amount'] === undefined) return false;
    if (!('billingCycle' in value) || value['billingCycle'] === undefined) return false;
    if (!('currency' in value) || value['currency'] === undefined) return false;
    if (!('discounts' in value) || value['discounts'] === undefined) return false;
    if (!('nextBilling' in value) || value['nextBilling'] === undefined) return false;
    if (!('paymentMethod' in value) || value['paymentMethod'] === undefined) return false;
    if (!('tax' in value) || value['tax'] === undefined) return false;
    return true;
}

export function SubscriptionBillingFromJSON(json: any): SubscriptionBilling {
    return SubscriptionBillingFromJSONTyped(json, false);
}

export function SubscriptionBillingFromJSONTyped(json: any, ignoreDiscriminator: boolean): SubscriptionBilling {
    if (json == null) {
        return json;
    }
    return {
        
        'amount': json['amount'],
        'billingCycle': json['billing_cycle'],
        'currency': json['currency'],
        'discounts': (json['discounts'] == null ? null : (json['discounts'] as Array<any>).map(DiscountFromJSON)),
        'nextBilling': (new Date(json['next_billing'])),
        'paymentMethod': PaymentMethodFromJSON(json['payment_method']),
        'tax': TaxInfoFromJSON(json['tax']),
    };
}

export function SubscriptionBillingToJSON(json: any): SubscriptionBilling {
    return SubscriptionBillingToJSONTyped(json, false);
}

export function SubscriptionBillingToJSONTyped(value?: SubscriptionBilling | null, ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'amount': value['amount'],
        'billing_cycle': value['billingCycle'],
        'currency': value['currency'],
        'discounts': (value['discounts'] == null ? null : (value['discounts'] as Array<any>).map(DiscountToJSON)),
        'next_billing': ((value['nextBilling']).toISOString()),
        'payment_method': PaymentMethodToJSON(value['paymentMethod']),
        'tax': TaxInfoToJSON(value['tax']),
    };
}

