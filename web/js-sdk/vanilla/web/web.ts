/**
 * Generated by orval v7.7.0 🍺
 * Do not edit manually.
 * Frank Authentication Server
 * A comprehensive authentication server with OAuth2, MFA, Passkeys, SSO, and more
 * OpenAPI spec version: 1.0.0
 */
import { customInstance } from "../../mutator/custom-instance";

/**
 * Render the home page
 * @summary home web
 */
export type webHomeResponse301 = {
  data: void;
  status: 301;
};

export type webHomeResponseComposite = webHomeResponse301;

export type webHomeResponse = webHomeResponseComposite & {
  headers: Headers;
};

export const getWebHomeUrl = () => {
  return `/`;
};

export const webHome = async (
  options?: RequestInit,
): Promise<webHomeResponse> => {
  return customInstance<webHomeResponse>(getWebHomeUrl(), {
    ...options,
    method: "GET",
  });
};

/**
 * Render the home page
 * @summary home web
 */
export type webHome1Response301 = {
  data: void;
  status: 301;
};

export type webHome1ResponseComposite = webHome1Response301;

export type webHome1Response = webHome1ResponseComposite & {
  headers: Headers;
};

export const getWebHome1Url = () => {
  return `/ui`;
};

export const webHome1 = async (
  options?: RequestInit,
): Promise<webHome1Response> => {
  return customInstance<webHome1Response>(getWebHome1Url(), {
    ...options,
    method: "GET",
  });
};

/**
 * @summary Download ./web/client/dist
 */
export type webUiFilepathResponse200 = {
  data: void;
  status: 200;
};

export type webUiFilepathResponse404 = {
  data: void;
  status: 404;
};

export type webUiFilepathResponseComposite =
  | webUiFilepathResponse200
  | webUiFilepathResponse404;

export type webUiFilepathResponse = webUiFilepathResponseComposite & {
  headers: Headers;
};

export const getWebUiFilepathUrl = (filepath: unknown) => {
  return `/ui/${filepath}`;
};

export const webUiFilepath = async (
  filepath: unknown,
  options?: RequestInit,
): Promise<webUiFilepathResponse> => {
  return customInstance<webUiFilepathResponse>(getWebUiFilepathUrl(filepath), {
    ...options,
    method: "GET",
  });
};
