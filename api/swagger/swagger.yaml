basePath: /
definitions:
  ApiKey:
    properties:
      active:
        description: Active holds the value of the "active" field.
        type: boolean
      created_at:
        description: CreatedAt holds the value of the "created_at" field.
        type: string
      edges:
        allOf:
        - $ref: '#/definitions/ent.ApiKeyEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the ApiKeyQuery when eager-loading is set.
      expires_at:
        description: ExpiresAt holds the value of the "expires_at" field.
        type: string
      hashed_key:
        description: HashedKey holds the value of the "hashed_key" field.
        type: string
      id:
        description: ID of the ent.
        type: string
      last_used:
        description: LastUsed holds the value of the "last_used" field.
        type: string
      metadata:
        additionalProperties: true
        description: Metadata holds the value of the "metadata" field.
        type: object
      name:
        description: Name holds the value of the "name" field.
        type: string
      organization_id:
        description: OrganizationID holds the value of the "organization_id" field.
        type: string
      permissions:
        description: Permissions holds the value of the "permissions" field.
        items:
          type: string
        type: array
      scopes:
        description: Scopes holds the value of the "scopes" field.
        items:
          type: string
        type: array
      type:
        description: Type holds the value of the "type" field.
        type: string
      updated_at:
        description: UpdatedAt holds the value of the "updated_at" field.
        type: string
      user_id:
        description: UserID holds the value of the "user_id" field.
        type: string
    type: object
  FeatureFlag:
    properties:
      component:
        allOf:
        - $ref: '#/definitions/github_com_juicycleff_frank_ent_featureflag.Component'
        description: Which component of the auth system this feature belongs to
      created_at:
        description: CreatedAt holds the value of the "created_at" field.
        type: string
      description:
        description: Description holds the value of the "description" field.
        type: string
      edges:
        allOf:
        - $ref: '#/definitions/ent.FeatureFlagEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the FeatureFlagQuery when eager-loading is set.
      enabled:
        description: Enabled holds the value of the "enabled" field.
        type: boolean
      id:
        description: ID of the ent.
        type: string
      is_premium:
        description: Whether this feature is only available for premium plans
        type: boolean
      key:
        description: Key holds the value of the "key" field.
        type: string
      name:
        description: Name holds the value of the "name" field.
        type: string
      updated_at:
        description: UpdatedAt holds the value of the "updated_at" field.
        type: string
    type: object
  FrankError:
    properties:
      code:
        type: string
      data:
        additionalProperties: true
        type: object
      message:
        type: string
    type: object
  IdentityProvider:
    properties:
      active:
        description: Active holds the value of the "active" field.
        type: boolean
      attributes_mapping:
        additionalProperties:
          type: string
        description: AttributesMapping holds the value of the "attributes_mapping"
          field.
        type: object
      authorization_endpoint:
        description: AuthorizationEndpoint holds the value of the "authorization_endpoint"
          field.
        type: string
      client_id:
        description: ClientID holds the value of the "client_id" field.
        type: string
      created_at:
        description: CreatedAt holds the value of the "created_at" field.
        type: string
      domains:
        description: Domains holds the value of the "domains" field.
        items:
          type: string
        type: array
      edges:
        allOf:
        - $ref: '#/definitions/ent.IdentityProviderEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the IdentityProviderQuery when eager-loading is set.
      id:
        description: ID of the ent.
        type: string
      issuer:
        description: Issuer holds the value of the "issuer" field.
        type: string
      jwks_uri:
        description: JwksURI holds the value of the "jwks_uri" field.
        type: string
      metadata:
        additionalProperties: true
        description: Metadata holds the value of the "metadata" field.
        type: object
      metadata_url:
        description: MetadataURL holds the value of the "metadata_url" field.
        type: string
      name:
        description: Name holds the value of the "name" field.
        type: string
      organization_id:
        description: OrganizationID holds the value of the "organization_id" field.
        type: string
      primary:
        description: Primary holds the value of the "primary" field.
        type: boolean
      provider_type:
        description: 'Type of IdP: ''oauth2'', ''oidc'', ''saml'''
        type: string
      redirect_uri:
        description: RedirectURI holds the value of the "redirect_uri" field.
        type: string
      token_endpoint:
        description: TokenEndpoint holds the value of the "token_endpoint" field.
        type: string
      updated_at:
        description: UpdatedAt holds the value of the "updated_at" field.
        type: string
      userinfo_endpoint:
        description: UserinfoEndpoint holds the value of the "userinfo_endpoint" field.
        type: string
    type: object
  LoginResponse:
    properties:
      expires_at:
        type: integer
      mfa_required:
        type: boolean
      mfa_types:
        items:
          type: string
        type: array
      refresh_token:
        type: string
      token:
        type: string
      user:
        $ref: '#/definitions/User'
    type: object
  MFA:
    properties:
      active:
        description: Active holds the value of the "active" field.
        type: boolean
      backup_codes:
        description: BackupCodes holds the value of the "backup_codes" field.
        items:
          type: string
        type: array
      created_at:
        description: CreatedAt holds the value of the "created_at" field.
        type: string
      edges:
        allOf:
        - $ref: '#/definitions/ent.MFAEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the MFAQuery when eager-loading is set.
      email:
        description: Email holds the value of the "email" field.
        type: string
      id:
        description: ID of the ent.
        type: string
      last_used:
        description: LastUsed holds the value of the "last_used" field.
        type: string
      metadata:
        additionalProperties: true
        description: Metadata holds the value of the "metadata" field.
        type: object
      method:
        description: 'The MFA method type: ''totp'', ''sms'', ''email'', ''backup_codes'''
        type: string
      phone_number:
        description: PhoneNumber holds the value of the "phone_number" field.
        type: string
      updated_at:
        description: UpdatedAt holds the value of the "updated_at" field.
        type: string
      user_id:
        description: UserID holds the value of the "user_id" field.
        type: string
      verified:
        description: Verified holds the value of the "verified" field.
        type: boolean
    type: object
  OAuthAuthorization:
    properties:
      client_id:
        description: ClientID holds the value of the "client_id" field.
        type: string
      code_challenge:
        description: CodeChallenge holds the value of the "code_challenge" field.
        type: string
      code_challenge_method:
        description: CodeChallengeMethod holds the value of the "code_challenge_method"
          field.
        type: string
      created_at:
        description: CreatedAt holds the value of the "created_at" field.
        type: string
      edges:
        allOf:
        - $ref: '#/definitions/ent.OAuthAuthorizationEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the OAuthAuthorizationQuery when eager-loading is set.
      expires_at:
        description: ExpiresAt holds the value of the "expires_at" field.
        type: string
      id:
        description: ID of the ent.
        type: string
      nonce:
        description: Nonce holds the value of the "nonce" field.
        type: string
      organization_id:
        description: OrganizationID holds the value of the "organization_id" field.
        type: string
      redirect_uri:
        description: RedirectURI holds the value of the "redirect_uri" field.
        type: string
      scope_names:
        description: Scope names as strings for quick access
        items:
          type: string
        type: array
      state:
        description: State holds the value of the "state" field.
        type: string
      updated_at:
        description: UpdatedAt holds the value of the "updated_at" field.
        type: string
      used:
        description: Used holds the value of the "used" field.
        type: boolean
      used_at:
        description: UsedAt holds the value of the "used_at" field.
        type: string
      user_id:
        description: UserID holds the value of the "user_id" field.
        type: string
    type: object
  OAuthClient:
    properties:
      active:
        description: Active holds the value of the "active" field.
        type: boolean
      allowed_cors_origins:
        description: AllowedCorsOrigins holds the value of the "allowed_cors_origins"
          field.
        items:
          type: string
        type: array
      allowed_grant_types:
        description: AllowedGrantTypes holds the value of the "allowed_grant_types"
          field.
        items:
          type: string
        type: array
      auth_code_expiry_seconds:
        description: AuthCodeExpirySeconds holds the value of the "auth_code_expiry_seconds"
          field.
        type: integer
      client_description:
        description: ClientDescription holds the value of the "client_description"
          field.
        type: string
      client_id:
        description: ClientID holds the value of the "client_id" field.
        type: string
      client_name:
        description: ClientName holds the value of the "client_name" field.
        type: string
      client_uri:
        description: ClientURI holds the value of the "client_uri" field.
        type: string
      created_at:
        description: CreatedAt holds the value of the "created_at" field.
        type: string
      edges:
        allOf:
        - $ref: '#/definitions/ent.OAuthClientEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the OAuthClientQuery when eager-loading is set.
      id:
        description: ID of the ent.
        type: string
      logo_uri:
        description: LogoURI holds the value of the "logo_uri" field.
        type: string
      organization_id:
        description: OrganizationID holds the value of the "organization_id" field.
        type: string
      post_logout_redirect_uris:
        description: PostLogoutRedirectUris holds the value of the "post_logout_redirect_uris"
          field.
        items:
          type: string
        type: array
      public:
        description: Public clients operate without a client secret
        type: boolean
      redirect_uris:
        description: RedirectUris holds the value of the "redirect_uris" field.
        items:
          type: string
        type: array
      refresh_token_expiry_seconds:
        description: RefreshTokenExpirySeconds holds the value of the "refresh_token_expiry_seconds"
          field.
        type: integer
      requires_consent:
        description: Require user consent before authorization
        type: boolean
      requires_pkce:
        description: Enforce PKCE (Proof Key for Code Exchange)
        type: boolean
      token_expiry_seconds:
        description: TokenExpirySeconds holds the value of the "token_expiry_seconds"
          field.
        type: integer
      updated_at:
        description: UpdatedAt holds the value of the "updated_at" field.
        type: string
    type: object
  OAuthScope:
    properties:
      created_at:
        description: CreatedAt holds the value of the "created_at" field.
        type: string
      default_scope:
        description: Whether this scope is included by default
        type: boolean
      description:
        description: Description holds the value of the "description" field.
        type: string
      edges:
        allOf:
        - $ref: '#/definitions/ent.OAuthScopeEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the OAuthScopeQuery when eager-loading is set.
      id:
        description: ID of the ent.
        type: string
      name:
        description: Name holds the value of the "name" field.
        type: string
      public:
        description: Whether this scope can be requested by any client
        type: boolean
      updated_at:
        description: UpdatedAt holds the value of the "updated_at" field.
        type: string
    type: object
  OAuthToken:
    properties:
      client_id:
        description: ClientID holds the value of the "client_id" field.
        type: string
      created_at:
        description: CreatedAt holds the value of the "created_at" field.
        type: string
      edges:
        allOf:
        - $ref: '#/definitions/ent.OAuthTokenEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the OAuthTokenQuery when eager-loading is set.
      expires_at:
        description: ExpiresAt holds the value of the "expires_at" field.
        type: string
      expires_in:
        description: ExpiresIn holds the value of the "expires_in" field.
        type: integer
      id:
        description: ID of the ent.
        type: string
      ip_address:
        description: IPAddress holds the value of the "ip_address" field.
        type: string
      organization_id:
        description: OrganizationID holds the value of the "organization_id" field.
        type: string
      refresh_token_expires_at:
        description: RefreshTokenExpiresAt holds the value of the "refresh_token_expires_at"
          field.
        type: string
      revoked:
        description: Revoked holds the value of the "revoked" field.
        type: boolean
      revoked_at:
        description: RevokedAt holds the value of the "revoked_at" field.
        type: string
      scope_names:
        description: Scope names as strings for quick access
        items:
          type: string
        type: array
      token_type:
        description: TokenType holds the value of the "token_type" field.
        type: string
      updated_at:
        description: UpdatedAt holds the value of the "updated_at" field.
        type: string
      user_agent:
        description: UserAgent holds the value of the "user_agent" field.
        type: string
      user_id:
        description: UserID holds the value of the "user_id" field.
        type: string
    type: object
  Organization:
    properties:
      active:
        description: Active holds the value of the "active" field.
        type: boolean
      created_at:
        description: CreatedAt holds the value of the "created_at" field.
        type: string
      domain:
        description: Domain holds the value of the "domain" field.
        type: string
      edges:
        allOf:
        - $ref: '#/definitions/ent.OrganizationEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the OrganizationQuery when eager-loading is set.
      id:
        description: ID of the ent.
        type: string
      logo_url:
        description: LogoURL holds the value of the "logo_url" field.
        type: string
      metadata:
        additionalProperties: true
        description: Metadata holds the value of the "metadata" field.
        type: object
      name:
        description: Name holds the value of the "name" field.
        type: string
      plan:
        description: Plan holds the value of the "plan" field.
        type: string
      slug:
        description: Slug holds the value of the "slug" field.
        type: string
      trial_ends_at:
        description: TrialEndsAt holds the value of the "trial_ends_at" field.
        type: string
      trial_used:
        description: TrialUsed holds the value of the "trial_used" field.
        type: boolean
      updated_at:
        description: UpdatedAt holds the value of the "updated_at" field.
        type: string
    type: object
  OrganizationFeature:
    properties:
      created_at:
        description: CreatedAt holds the value of the "created_at" field.
        type: string
      edges:
        allOf:
        - $ref: '#/definitions/ent.OrganizationFeatureEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the OrganizationFeatureQuery when eager-loading is set.
      enabled:
        description: Enabled holds the value of the "enabled" field.
        type: boolean
      feature_id:
        description: FeatureID holds the value of the "feature_id" field.
        type: string
      id:
        description: ID of the ent.
        type: string
      organization_id:
        description: OrganizationID holds the value of the "organization_id" field.
        type: string
      settings:
        additionalProperties: true
        description: Settings holds the value of the "settings" field.
        type: object
      updated_at:
        description: UpdatedAt holds the value of the "updated_at" field.
        type: string
    type: object
  Passkey:
    properties:
      aaguid:
        description: Aaguid holds the value of the "aaguid" field.
        type: string
      active:
        description: Active holds the value of the "active" field.
        type: boolean
      attestation:
        additionalProperties: true
        description: Attestation holds the value of the "attestation" field.
        type: object
      created_at:
        description: CreatedAt holds the value of the "created_at" field.
        type: string
      credential_id:
        description: CredentialID holds the value of the "credential_id" field.
        type: string
      device_type:
        description: DeviceType holds the value of the "device_type" field.
        type: string
      edges:
        allOf:
        - $ref: '#/definitions/ent.PasskeyEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the PasskeyQuery when eager-loading is set.
      id:
        description: ID of the ent.
        type: string
      last_used:
        description: LastUsed holds the value of the "last_used" field.
        type: string
      name:
        description: Name holds the value of the "name" field.
        type: string
      public_key:
        description: PublicKey holds the value of the "public_key" field.
        items:
          type: integer
        type: array
      sign_count:
        description: SignCount holds the value of the "sign_count" field.
        type: integer
      transports:
        description: Transports holds the value of the "transports" field.
        items:
          type: string
        type: array
      updated_at:
        description: UpdatedAt holds the value of the "updated_at" field.
        type: string
      user_id:
        description: UserID holds the value of the "user_id" field.
        type: string
    type: object
  Permission:
    properties:
      action:
        description: The action this permission allows (create, read, update, delete,
          etc.)
        type: string
      conditions:
        description: JSON expression for conditional access
        type: string
      created_at:
        description: CreatedAt holds the value of the "created_at" field.
        type: string
      description:
        description: Description holds the value of the "description" field.
        type: string
      edges:
        allOf:
        - $ref: '#/definitions/ent.PermissionEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the PermissionQuery when eager-loading is set.
      id:
        description: ID of the ent.
        type: string
      name:
        description: Name holds the value of the "name" field.
        type: string
      resource:
        description: The resource this permission applies to
        type: string
      system:
        description: System permissions cannot be modified
        type: boolean
      updated_at:
        description: UpdatedAt holds the value of the "updated_at" field.
        type: string
    type: object
  Role:
    properties:
      created_at:
        description: CreatedAt holds the value of the "created_at" field.
        type: string
      description:
        description: Description holds the value of the "description" field.
        type: string
      edges:
        allOf:
        - $ref: '#/definitions/ent.RoleEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the RoleQuery when eager-loading is set.
      id:
        description: ID of the ent.
        type: string
      is_default:
        description: Default role assigned to new users
        type: boolean
      name:
        description: Name holds the value of the "name" field.
        type: string
      organization_id:
        description: OrganizationID holds the value of the "organization_id" field.
        type: string
      system:
        description: System roles cannot be modified
        type: boolean
      updated_at:
        description: UpdatedAt holds the value of the "updated_at" field.
        type: string
    type: object
  Session:
    properties:
      active:
        description: Active holds the value of the "active" field.
        type: boolean
      created_at:
        description: CreatedAt holds the value of the "created_at" field.
        type: string
      device_id:
        description: DeviceID holds the value of the "device_id" field.
        type: string
      edges:
        allOf:
        - $ref: '#/definitions/ent.SessionEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the SessionQuery when eager-loading is set.
      expires_at:
        description: ExpiresAt holds the value of the "expires_at" field.
        type: string
      id:
        description: ID of the ent.
        type: string
      ip_address:
        description: IPAddress holds the value of the "ip_address" field.
        type: string
      last_active_at:
        description: LastActiveAt holds the value of the "last_active_at" field.
        type: string
      location:
        description: Location holds the value of the "location" field.
        type: string
      organization_id:
        description: OrganizationID holds the value of the "organization_id" field.
        type: string
      updated_at:
        description: UpdatedAt holds the value of the "updated_at" field.
        type: string
      user_agent:
        description: UserAgent holds the value of the "user_agent" field.
        type: string
      user_id:
        description: UserID holds the value of the "user_id" field.
        type: string
    type: object
  User:
    properties:
      active:
        description: Active holds the value of the "active" field.
        type: boolean
      created_at:
        description: CreatedAt holds the value of the "created_at" field.
        type: string
      edges:
        allOf:
        - $ref: '#/definitions/ent.UserEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the UserQuery when eager-loading is set.
      email:
        description: Email holds the value of the "email" field.
        type: string
      email_verified:
        description: EmailVerified holds the value of the "email_verified" field.
        type: boolean
      first_name:
        description: FirstName holds the value of the "first_name" field.
        type: string
      id:
        description: ID of the ent.
        type: string
      last_login:
        description: LastLogin holds the value of the "last_login" field.
        type: string
      last_name:
        description: LastName holds the value of the "last_name" field.
        type: string
      last_password_change:
        description: LastPasswordChange holds the value of the "last_password_change"
          field.
        type: string
      locale:
        description: Locale holds the value of the "locale" field.
        type: string
      metadata:
        additionalProperties: true
        description: Metadata holds the value of the "metadata" field.
        type: object
      phone_number:
        description: PhoneNumber holds the value of the "phone_number" field.
        type: string
      phone_verified:
        description: PhoneVerified holds the value of the "phone_verified" field.
        type: boolean
      primary_organization_id:
        description: PrimaryOrganizationID holds the value of the "primary_organization_id"
          field.
        type: string
      profile_image_url:
        description: ProfileImageURL holds the value of the "profile_image_url" field.
        type: string
      updated_at:
        description: UpdatedAt holds the value of the "updated_at" field.
        type: string
    type: object
  Verification:
    properties:
      attempts:
        description: Attempts holds the value of the "attempts" field.
        type: integer
      attestation:
        additionalProperties: true
        description: Attestation holds the value of the "attestation" field.
        type: object
      created_at:
        description: CreatedAt holds the value of the "created_at" field.
        type: string
      edges:
        allOf:
        - $ref: '#/definitions/ent.VerificationEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the VerificationQuery when eager-loading is set.
      email:
        description: Email holds the value of the "email" field.
        type: string
      expires_at:
        description: ExpiresAt holds the value of the "expires_at" field.
        type: string
      id:
        description: ID of the ent.
        type: string
      ip_address:
        description: IPAddress holds the value of the "ip_address" field.
        type: string
      phone_number:
        description: PhoneNumber holds the value of the "phone_number" field.
        type: string
      redirect_url:
        description: RedirectURL holds the value of the "redirect_url" field.
        type: string
      type:
        description: 'Verification type: email, phone, password_reset, magic_link'
        type: string
      updated_at:
        description: UpdatedAt holds the value of the "updated_at" field.
        type: string
      used:
        description: Used holds the value of the "used" field.
        type: boolean
      used_at:
        description: UsedAt holds the value of the "used_at" field.
        type: string
      user_agent:
        description: UserAgent holds the value of the "user_agent" field.
        type: string
      user_id:
        description: UserID holds the value of the "user_id" field.
        type: string
    type: object
  Webhook:
    properties:
      active:
        description: Active holds the value of the "active" field.
        type: boolean
      created_at:
        description: CreatedAt holds the value of the "created_at" field.
        type: string
      edges:
        allOf:
        - $ref: '#/definitions/ent.WebhookEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the WebhookQuery when eager-loading is set.
      event_types:
        description: EventTypes holds the value of the "event_types" field.
        items:
          type: string
        type: array
      format:
        allOf:
        - $ref: '#/definitions/github_com_juicycleff_frank_ent_webhook.Format'
        description: Format holds the value of the "format" field.
      id:
        description: ID of the ent.
        type: string
      metadata:
        additionalProperties: true
        description: Metadata holds the value of the "metadata" field.
        type: object
      name:
        description: Name holds the value of the "name" field.
        type: string
      organization_id:
        description: OrganizationID holds the value of the "organization_id" field.
        type: string
      retry_count:
        description: RetryCount holds the value of the "retry_count" field.
        type: integer
      timeout_ms:
        description: TimeoutMs holds the value of the "timeout_ms" field.
        type: integer
      updated_at:
        description: UpdatedAt holds the value of the "updated_at" field.
        type: string
      url:
        description: URL holds the value of the "url" field.
        type: string
      version:
        description: Version holds the value of the "version" field.
        type: string
    type: object
  WebhookEvent:
    properties:
      attempts:
        description: Attempts holds the value of the "attempts" field.
        type: integer
      created_at:
        description: CreatedAt holds the value of the "created_at" field.
        type: string
      delivered:
        description: Delivered holds the value of the "delivered" field.
        type: boolean
      delivered_at:
        description: DeliveredAt holds the value of the "delivered_at" field.
        type: string
      edges:
        allOf:
        - $ref: '#/definitions/ent.WebhookEventEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the WebhookEventQuery when eager-loading is set.
      error:
        description: Error holds the value of the "error" field.
        type: string
      event_type:
        description: EventType holds the value of the "event_type" field.
        type: string
      headers:
        additionalProperties:
          type: string
        description: Headers holds the value of the "headers" field.
        type: object
      id:
        description: ID of the ent.
        type: string
      next_retry:
        description: NextRetry holds the value of the "next_retry" field.
        type: string
      payload:
        additionalProperties: true
        description: Payload holds the value of the "payload" field.
        type: object
      response_body:
        description: ResponseBody holds the value of the "response_body" field.
        type: string
      status_code:
        description: StatusCode holds the value of the "status_code" field.
        type: integer
      updated_at:
        description: UpdatedAt holds the value of the "updated_at" field.
        type: string
      webhook_id:
        description: WebhookID holds the value of the "webhook_id" field.
        type: string
    type: object
  ent.ApiKeyEdges:
    properties:
      organization:
        allOf:
        - $ref: '#/definitions/Organization'
        description: Organization holds the value of the organization edge.
      user:
        allOf:
        - $ref: '#/definitions/User'
        description: User holds the value of the user edge.
    type: object
  ent.FeatureFlagEdges:
    properties:
      organizations:
        description: Organizations holds the value of the organizations edge.
        items:
          $ref: '#/definitions/OrganizationFeature'
        type: array
    type: object
  ent.IdentityProviderEdges:
    properties:
      organization:
        allOf:
        - $ref: '#/definitions/Organization'
        description: Organization holds the value of the organization edge.
    type: object
  ent.MFAEdges:
    properties:
      user:
        allOf:
        - $ref: '#/definitions/User'
        description: User holds the value of the user edge.
    type: object
  ent.OAuthAuthorizationEdges:
    properties:
      client:
        allOf:
        - $ref: '#/definitions/OAuthClient'
        description: Client holds the value of the client edge.
      scopes:
        description: Scopes holds the value of the scopes edge.
        items:
          $ref: '#/definitions/OAuthScope'
        type: array
      user:
        allOf:
        - $ref: '#/definitions/User'
        description: User holds the value of the user edge.
    type: object
  ent.OAuthClientEdges:
    properties:
      authorizations:
        description: Authorizations holds the value of the authorizations edge.
        items:
          $ref: '#/definitions/OAuthAuthorization'
        type: array
      organization:
        allOf:
        - $ref: '#/definitions/Organization'
        description: Organization holds the value of the organization edge.
      scopes:
        description: Scopes holds the value of the scopes edge.
        items:
          $ref: '#/definitions/OAuthScope'
        type: array
      tokens:
        description: Tokens holds the value of the tokens edge.
        items:
          $ref: '#/definitions/OAuthToken'
        type: array
    type: object
  ent.OAuthScopeEdges:
    properties:
      authorizations:
        description: Authorizations holds the value of the authorizations edge.
        items:
          $ref: '#/definitions/OAuthAuthorization'
        type: array
      clients:
        description: Clients holds the value of the clients edge.
        items:
          $ref: '#/definitions/OAuthClient'
        type: array
      tokens:
        description: Tokens holds the value of the tokens edge.
        items:
          $ref: '#/definitions/OAuthToken'
        type: array
    type: object
  ent.OAuthTokenEdges:
    properties:
      client:
        allOf:
        - $ref: '#/definitions/OAuthClient'
        description: Client holds the value of the client edge.
      scopes:
        description: Scopes holds the value of the scopes edge.
        items:
          $ref: '#/definitions/OAuthScope'
        type: array
      user:
        allOf:
        - $ref: '#/definitions/User'
        description: User holds the value of the user edge.
    type: object
  ent.OrganizationEdges:
    properties:
      api_keys:
        description: APIKeys holds the value of the api_keys edge.
        items:
          $ref: '#/definitions/ApiKey'
        type: array
      feature_flags:
        description: FeatureFlags holds the value of the feature_flags edge.
        items:
          $ref: '#/definitions/OrganizationFeature'
        type: array
      identity_providers:
        description: IdentityProviders holds the value of the identity_providers edge.
        items:
          $ref: '#/definitions/IdentityProvider'
        type: array
      oauth_clients:
        description: OauthClients holds the value of the oauth_clients edge.
        items:
          $ref: '#/definitions/OAuthClient'
        type: array
      users:
        description: Users holds the value of the users edge.
        items:
          $ref: '#/definitions/User'
        type: array
      webhooks:
        description: Webhooks holds the value of the webhooks edge.
        items:
          $ref: '#/definitions/Webhook'
        type: array
    type: object
  ent.OrganizationFeatureEdges:
    properties:
      feature:
        allOf:
        - $ref: '#/definitions/FeatureFlag'
        description: Feature holds the value of the feature edge.
      organization:
        allOf:
        - $ref: '#/definitions/Organization'
        description: Organization holds the value of the organization edge.
    type: object
  ent.PasskeyEdges:
    properties:
      user:
        allOf:
        - $ref: '#/definitions/User'
        description: User holds the value of the user edge.
    type: object
  ent.PermissionEdges:
    properties:
      roles:
        description: Roles holds the value of the roles edge.
        items:
          $ref: '#/definitions/Role'
        type: array
    type: object
  ent.RoleEdges:
    properties:
      permissions:
        description: Permissions holds the value of the permissions edge.
        items:
          $ref: '#/definitions/Permission'
        type: array
      users:
        description: Users holds the value of the users edge.
        items:
          $ref: '#/definitions/User'
        type: array
    type: object
  ent.SessionEdges:
    properties:
      user:
        allOf:
        - $ref: '#/definitions/User'
        description: User holds the value of the user edge.
    type: object
  ent.UserEdges:
    properties:
      api_keys:
        description: APIKeys holds the value of the api_keys edge.
        items:
          $ref: '#/definitions/ApiKey'
        type: array
      mfa_methods:
        description: MfaMethods holds the value of the mfa_methods edge.
        items:
          $ref: '#/definitions/MFA'
        type: array
      oauth_authorizations:
        description: OauthAuthorizations holds the value of the oauth_authorizations
          edge.
        items:
          $ref: '#/definitions/OAuthAuthorization'
        type: array
      oauth_tokens:
        description: OauthTokens holds the value of the oauth_tokens edge.
        items:
          $ref: '#/definitions/OAuthToken'
        type: array
      organizations:
        description: Organizations holds the value of the organizations edge.
        items:
          $ref: '#/definitions/Organization'
        type: array
      passkeys:
        description: Passkeys holds the value of the passkeys edge.
        items:
          $ref: '#/definitions/Passkey'
        type: array
      roles:
        description: Roles holds the value of the roles edge.
        items:
          $ref: '#/definitions/Role'
        type: array
      sessions:
        description: Sessions holds the value of the sessions edge.
        items:
          $ref: '#/definitions/Session'
        type: array
      verifications:
        description: Verifications holds the value of the verifications edge.
        items:
          $ref: '#/definitions/Verification'
        type: array
    type: object
  ent.VerificationEdges:
    properties:
      user:
        allOf:
        - $ref: '#/definitions/User'
        description: User holds the value of the user edge.
    type: object
  ent.WebhookEdges:
    properties:
      events:
        description: Events holds the value of the events edge.
        items:
          $ref: '#/definitions/WebhookEvent'
        type: array
      organization:
        allOf:
        - $ref: '#/definitions/Organization'
        description: Organization holds the value of the organization edge.
    type: object
  ent.WebhookEventEdges:
    properties:
      webhook:
        allOf:
        - $ref: '#/definitions/Webhook'
        description: Webhook holds the value of the webhook edge.
    type: object
  github_com_juicycleff_frank_ent_featureflag.Component:
    enum:
    - oauth2
    - passwordless
    - mfa
    - passkeys
    - sso
    - enterprise
    - webhooks
    - api_keys
    type: string
    x-enum-varnames:
    - ComponentOauth2
    - ComponentPasswordless
    - ComponentMfa
    - ComponentPasskeys
    - ComponentSSO
    - ComponentEnterprise
    - ComponentWebhooks
    - ComponentAPIKeys
  github_com_juicycleff_frank_ent_webhook.Format:
    enum:
    - json
    - json
    - form
    type: string
    x-enum-varnames:
    - DefaultFormat
    - FormatJSON
    - FormatForm
  internal_handlers.CreateOrganizationRequest:
    properties:
      domain:
        type: string
      features:
        items:
          type: string
        type: array
      logo_url:
        type: string
      metadata:
        additionalProperties: true
        type: object
      name:
        type: string
      plan:
        type: string
      slug:
        type: string
      trial_days:
        type: integer
    required:
    - name
    type: object
  internal_handlers.EnableTOTPResponse:
    properties:
      qr_code_data:
        type: string
      secret:
        type: string
      uri:
        type: string
    type: object
  internal_handlers.ForgotPasswordInput:
    properties:
      email:
        type: string
    required:
    - email
    type: object
  internal_handlers.HealthResponse:
    properties:
      services:
        items:
          $ref: '#/definitions/internal_handlers.HealthStatus'
        type: array
      status:
        type: string
      timestamp:
        type: string
    type: object
  internal_handlers.HealthStatus:
    properties:
      message:
        type: string
      service:
        type: string
      status:
        type: string
    type: object
  internal_handlers.LoginInput:
    properties:
      captcha_response:
        type: string
      email:
        type: string
      organization_id:
        type: string
      password:
        type: string
      remember_me:
        type: boolean
    required:
    - email
    - password
    type: object
  internal_handlers.MFAEnrollRequest:
    properties:
      email:
        type: string
      method:
        type: string
      phone_number:
        type: string
    required:
    - method
    type: object
  internal_handlers.MFAUnEnrollInput:
    properties:
      method:
        type: string
    required:
    - method
    type: object
  internal_handlers.MFAVerifyRequest:
    properties:
      code:
        type: string
      method:
        type: string
      phone_number:
        type: string
    required:
    - code
    - method
    type: object
  internal_handlers.RefreshTokenInput:
    properties:
      refresh_token:
        type: string
    required:
    - refresh_token
    type: object
  internal_handlers.RegisterInput:
    properties:
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      metadata:
        additionalProperties: true
        type: object
      organization_id:
        type: string
      password:
        minLength: 8
        type: string
    required:
    - email
    - password
    type: object
  internal_handlers.ResetPasswordInput:
    properties:
      new_password:
        minLength: 8
        type: string
      token:
        type: string
    required:
    - new_password
    - token
    type: object
  internal_handlers.UpdateOrganizationRequest:
    properties:
      active:
        type: boolean
      domain:
        type: string
      logo_url:
        type: string
      metadata:
        additionalProperties: true
        type: object
      name:
        type: string
      plan:
        type: string
    type: object
  internal_handlers.VerifyEmailInput:
    properties:
      token:
        type: string
    required:
    - token
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a sample server using Chi router with Swagger documentation.
  title: Frank API with Swagger
  version: "1.0"
paths:
  /.well-known/jwks.json:
    get:
      description: Returns the JSON Web Key Set (JWKS) for token verification.
      produces:
      - application/json
      responses:
        "200":
          description: JWKS response
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: JWKS Endpoint
      tags:
      - OAuth2
  /.well-known/openid-configuration:
    get:
      consumes:
      - application/json
      description: Provides the OpenID Connect well-known configuration.
      produces:
      - application/json
      responses:
        "200":
          description: OpenID Connect configuration
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: OpenID Connect Configuration
      tags:
      - OAuth2
  /__health:
    get:
      description: Returns the health status of the application and its services
      produces:
      - application/json
      responses:
        "200":
          description: Healthy status
          schema:
            $ref: '#/definitions/internal_handlers.HealthResponse'
        "503":
          description: Unhealthy status
          schema:
            $ref: '#/definitions/internal_handlers.HealthResponse'
      summary: Perform health check
      tags:
      - Health
  /__ready:
    post:
      description: Indicates if the application is ready to receive traffic
      produces:
      - application/json
      responses:
        "200":
          description: Ready status
          schema:
            $ref: '#/definitions/internal_handlers.HealthResponse'
      summary: Perform readiness check
      tags:
      - Readiness
  /api/v1/auth/forgot-password:
    post:
      consumes:
      - application/json
      description: Initiates the password reset process for a user
      parameters:
      - description: User email
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/internal_handlers.ForgotPasswordInput'
      - description: URL to redirect to after password reset
        in: query
        name: redirect_url
        type: string
      produces:
      - application/json
      responses:
        "202":
          description: Password reset initiated
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid input
          schema:
            $ref: '#/definitions/FrankError'
      summary: Request password reset
      tags:
      - Auth
  /api/v1/auth/login:
    post:
      consumes:
      - application/json
      description: Logs in a user with email and password
      parameters:
      - description: Login credentials
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/internal_handlers.LoginInput'
      produces:
      - application/json
      responses:
        "200":
          description: Login successful
          schema:
            $ref: '#/definitions/LoginResponse'
        "400":
          description: Invalid input
          schema:
            $ref: '#/definitions/FrankError'
        "401":
          description: Authentication failed
          schema:
            $ref: '#/definitions/FrankError'
        "403":
          description: Email not verified
          schema:
            $ref: '#/definitions/FrankError'
      summary: Authenticate a user
      tags:
      - Auth
  /api/v1/auth/logout:
    post:
      description: Logs out the current user and invalidates their session
      produces:
      - application/json
      responses:
        "200":
          description: Logout successful
          schema:
            additionalProperties: true
            type: object
      summary: Log out a user
      tags:
      - Auth
  /api/v1/auth/mfa/enroll:
    post:
      consumes:
      - application/json
      description: Enrolls the user in the specified MFA method
      parameters:
      - description: MFAEnrollRequest
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/internal_handlers.MFAEnrollRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Response for enabling SMS/Email/Backup Codes
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/FrankError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/FrankError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/FrankError'
      summary: Enroll in MFA
      tags:
      - Auth
      - MFA
  /api/v1/auth/mfa/methods:
    get:
      consumes:
      - application/json
      description: Retrieves a list of enabled multi-factor authentication methods
        for the authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: Enabled MFA methods
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid input or missing required field
          schema:
            $ref: '#/definitions/FrankError'
        "401":
          description: Unauthorized access
          schema:
            $ref: '#/definitions/FrankError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/FrankError'
      summary: Retrieve enabled MFA methods
      tags:
      - Auth
      - MFA
  /api/v1/auth/mfa/send-code:
    post:
      consumes:
      - application/json
      description: Sends a verification code to the user for the specified MFA method
      parameters:
      - description: Input for specifying MFA method
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/internal_handlers.MFAUnEnrollInput'
      produces:
      - application/json
      responses:
        "200":
          description: Success message and expiration time
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid input or missing required field
          schema:
            $ref: '#/definitions/FrankError'
        "401":
          description: Unauthorized access
          schema:
            $ref: '#/definitions/FrankError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/FrankError'
      summary: Send MFA Verification Code
      tags:
      - Auth
      - MFA
  /api/v1/auth/mfa/unenroll:
    post:
      consumes:
      - application/json
      description: Disables a specific MFA method or all methods for the user
      parameters:
      - description: Input for disabled MFA method
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/internal_handlers.MFAUnEnrollInput'
      produces:
      - application/json
      responses:
        "200":
          description: Success response with message
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid input or missing required field
          schema:
            $ref: '#/definitions/FrankError'
        "401":
          description: Unauthorized access
          schema:
            $ref: '#/definitions/FrankError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/FrankError'
      summary: Unenroll from MFA
      tags:
      - Auth
      - MFA
  /api/v1/auth/mfa/verify:
    post:
      consumes:
      - application/json
      description: Verifies a MFA code for the user using the specified method
      parameters:
      - description: MFAVerifyRequest
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/internal_handlers.MFAVerifyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/FrankError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/FrankError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/FrankError'
      summary: Verify MFA
      tags:
      - Auth
      - MFA
  /api/v1/auth/refresh:
    post:
      consumes:
      - application/json
      description: Generates a new access token using a refresh token
      parameters:
      - description: Refresh token
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/internal_handlers.RefreshTokenInput'
      produces:
      - application/json
      responses:
        "200":
          description: Token refresh successful
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid input
          schema:
            $ref: '#/definitions/FrankError'
        "401":
          description: Invalid refresh token
          schema:
            $ref: '#/definitions/FrankError'
      summary: Refresh access token
      tags:
      - Auth
  /api/v1/auth/register:
    post:
      consumes:
      - application/json
      description: Creates a new user account
      parameters:
      - description: Registration information
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/internal_handlers.RegisterInput'
      produces:
      - application/json
      responses:
        "201":
          description: Registration successful
          schema:
            $ref: '#/definitions/LoginResponse'
        "400":
          description: Invalid input
          schema:
            $ref: '#/definitions/FrankError'
        "409":
          description: Email already exists
          schema:
            $ref: '#/definitions/FrankError'
      summary: Register a new user
      tags:
      - Auth
  /api/v1/auth/reset-password:
    post:
      consumes:
      - application/json
      description: Resets a user's password using a token received by email
      parameters:
      - description: Reset password information
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/internal_handlers.ResetPasswordInput'
      produces:
      - application/json
      responses:
        "200":
          description: Password reset successful
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid input
          schema:
            $ref: '#/definitions/FrankError'
        "401":
          description: Invalid token
          schema:
            $ref: '#/definitions/FrankError'
      summary: Reset password
      tags:
      - Auth
  /api/v1/auth/verify-email:
    post:
      consumes:
      - application/json
      description: Verifies a user's email address using a token
      parameters:
      - description: Email verification token
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/internal_handlers.VerifyEmailInput'
      produces:
      - application/json
      responses:
        "200":
          description: Email verification successful
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid input
          schema:
            $ref: '#/definitions/FrankError'
        "401":
          description: Invalid token
          schema:
            $ref: '#/definitions/FrankError'
      summary: Verify email
      tags:
      - Auth
  /api/v1/organizations:
    get:
      consumes:
      - application/json
      description: Get a paginated list of organizations with optional search
      parameters:
      - default: 0
        description: Pagination offset
        in: query
        name: offset
        type: integer
      - default: 20
        description: Pagination limit
        in: query
        name: limit
        type: integer
      - description: Search term
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Returns organizations with pagination
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid input
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: List organizations
      tags:
      - organizations
    post:
      consumes:
      - application/json
      description: Create a new organization with the provided details
      parameters:
      - description: Create organization payload
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/internal_handlers.CreateOrganizationRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Returns the created organization
          schema:
            $ref: '#/definitions/Organization'
        "400":
          description: Invalid input
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Create an organization
      tags:
      - organizations
  /api/v1/organizations/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an organization by its ID
      parameters:
      - description: Organization ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid organization ID
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Organization not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Delete an organization
      tags:
      - organizations
    get:
      consumes:
      - application/json
      description: Retrieve an organization by its ID
      parameters:
      - description: Organization ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Returns the organization
          schema:
            $ref: '#/definitions/Organization'
        "400":
          description: Invalid organization ID
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Organization not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get an organization
      tags:
      - organizations
    put:
      consumes:
      - application/json
      description: Update an organization's details
      parameters:
      - description: Organization ID
        in: path
        name: id
        required: true
        type: string
      - description: Update organization payload
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/internal_handlers.UpdateOrganizationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Returns the updated organization
          schema:
            $ref: '#/definitions/Organization'
        "400":
          description: Invalid input
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Organization not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Update an organization
      tags:
      - organizations
  /api/v1/organizations/{id}/members:
    get:
      consumes:
      - application/json
      description: Get a list of members for a specific organization
      parameters:
      - description: Organization ID
        in: path
        name: id
        required: true
        type: string
      - default: 0
        description: Pagination offset
        in: query
        name: offset
        type: integer
      - default: 20
        description: Pagination limit
        in: query
        name: limit
        type: integer
      - description: Search term
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Returns the list of members with pagination
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid organization ID
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Organization not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: List organization members
      tags:
      - organizations
  /oauth/auth/{provider}:
    get:
      consumes:
      - application/json
      description: This endpoint initiates OAuth authentication with a configured
        provider.
      parameters:
      - description: OAuth Provider
        example: '"google"'
        in: path
        name: provider
        required: true
        type: string
      - description: Redirect URI
        example: '"https://your-app.com/oauth/callback"'
        in: query
        name: redirect_uri
        type: string
      produces:
      - application/json
      responses:
        "302":
          description: Redirects to the provider login
          schema:
            type: string
        "400":
          description: Invalid Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Initiate OAuth Authentication
      tags:
      - OAuth2
  /oauth/authorize:
    get:
      consumes:
      - application/json
      description: This endpoint handles OAuth2 authorization. It can act as both
        a provider (to authorize third-party clients) or as a client (to redirect
        users to third-party providers).
      parameters:
      - description: OAuth Provider
        example: '"google"'
        in: query
        name: provider
        type: string
      - description: Redirect URI
        example: '"https://your-app.com/oauth/callback"'
        in: query
        name: redirect_uri
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully handled OAuth2 authorization
          schema:
            type: string
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: OAuth2 Authorization
      tags:
      - OAuth2
  /oauth/callback/{provider}:
    get:
      consumes:
      - application/json
      description: Handles the callback from the OAuth provider after user authentication.
      parameters:
      - description: OAuth Provider
        example: '"google"'
        in: path
        name: provider
        required: true
        type: string
      - description: Authorization Code
        example: '"12345"'
        in: query
        name: code
        required: true
        type: string
      - description: OAuth State
        example: '"state_token"'
        in: query
        name: state
        required: true
        type: string
      produces:
      - application/json
      responses:
        "302":
          description: Redirects to the client application
          schema:
            type: string
        "400":
          description: Invalid Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Handle OAuth Callback
      tags:
      - OAuth2
  /oauth/consent:
    post:
      consumes:
      - application/json
      description: Handles user consent for OAuth2 authorization.
      parameters:
      - description: Client ID of the requesting application
        in: formData
        name: client_id
        required: true
        type: string
      - description: Scopes being requested, separated by spaces
        in: formData
        name: scope
        required: true
        type: string
      - description: State parameter to maintain state between request and callback
        in: formData
        name: state
        type: string
      - description: Redirect URI to redirect the user after consent
        in: formData
        name: redirect_uri
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Consent granted
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Handle OAuth2 Consent
      tags:
      - OAuth2
  /oauth/introspect:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Handles the OAuth2 token introspection endpoint to validate and
        retrieve metadata about an access token.
      parameters:
      - description: Access Token to introspect
        in: formData
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Token introspection result
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: OAuth2 Token Introspection
      tags:
      - OAuth2
  /oauth/providers:
    get:
      description: This endpoint lists the available OAuth2 providers.
      produces:
      - application/json
      responses:
        "200":
          description: List of configured providers
          schema:
            additionalProperties: true
            type: object
      summary: List OAuth2 Providers
      tags:
      - OAuth2
  /oauth/revoke:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Handles the OAuth2 token revocation endpoint to revoke an access
        token.
      parameters:
      - description: Access Token to revoke
        in: formData
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Token revocation successful
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: OAuth2 Token Revocation
      tags:
      - OAuth2
  /oauth/token:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Handles the OAuth2 token endpoint for token exchange.
      parameters:
      - description: Grant type
        enum:
        - '"authorization_code"'
        - '"client_credentials"'
        - '"refresh_token"'
        - '"password"'
        in: formData
        name: grant_type
        required: true
        type: string
      - description: Client ID
        in: formData
        name: client_id
        type: string
      - description: Client Secret
        in: formData
        name: client_secret
        type: string
      - description: Authorization code (required for authorization_code grant type)
        in: formData
        name: code
        type: string
      - description: Refresh token (required for refresh_token grant type)
        in: formData
        name: refresh_token
        type: string
      - description: Redirect URI
        in: formData
        name: redirect_uri
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Token response
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: OAuth2 Token
      tags:
      - OAuth2
  /oauth/userinfo:
    get:
      consumes:
      - application/json
      description: Retrieves user information based on the provided access token.
      parameters:
      - description: Bearer {access_token}
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Userinfo response
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: OAuth2 UserInfo
      tags:
      - OAuth2
schemes:
- http
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
