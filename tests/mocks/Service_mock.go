// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/juicycleff/frank/internal/apikeys (interfaces: Service)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	ent "github.com/juicycleff/frank/ent"
	apikeys "github.com/juicycleff/frank/internal/apikeys"
)

// MockApikeysService is a mock of Service interface.
type MockApikeysService struct {
	ctrl     *gomock.Controller
	recorder *MockApikeysServiceMockRecorder
}

// MockApikeysServiceMockRecorder is the mock recorder for MockApikeysService.
type MockApikeysServiceMockRecorder struct {
	mock *MockApikeysService
}

// NewMockApikeysService creates a new mock instance.
func NewMockApikeysService(ctrl *gomock.Controller) *MockApikeysService {
	mock := &MockApikeysService{ctrl: ctrl}
	mock.recorder = &MockApikeysServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockApikeysService) EXPECT() *MockApikeysServiceMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockApikeysService) Create(arg0 context.Context, arg1 apikeys.CreateAPIKeyRequest) (*apikeys.APIKeyWithKeyResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0, arg1)
	ret0, _ := ret[0].(*apikeys.APIKeyWithKeyResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockApikeysServiceMockRecorder) Create(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockApikeysService)(nil).Create), arg0, arg1)
}

// Delete mocks base method.
func (m *MockApikeysService) Delete(arg0 context.Context, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockApikeysServiceMockRecorder) Delete(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockApikeysService)(nil).Delete), arg0, arg1)
}

// Get mocks base method.
func (m *MockApikeysService) Get(arg0 context.Context, arg1 string) (*ent.ApiKey, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0, arg1)
	ret0, _ := ret[0].(*ent.ApiKey)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockApikeysServiceMockRecorder) Get(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockApikeysService)(nil).Get), arg0, arg1)
}

// List mocks base method.
func (m *MockApikeysService) List(arg0 context.Context, arg1 apikeys.ListParams) ([]*ent.ApiKey, int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "List", arg0, arg1)
	ret0, _ := ret[0].([]*ent.ApiKey)
	ret1, _ := ret[1].(int)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// List indicates an expected call of List.
func (mr *MockApikeysServiceMockRecorder) List(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockApikeysService)(nil).List), arg0, arg1)
}

// Update mocks base method.
func (m *MockApikeysService) Update(arg0 context.Context, arg1 string, arg2 apikeys.UpdateAPIKeyRequest) (*ent.ApiKey, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", arg0, arg1, arg2)
	ret0, _ := ret[0].(*ent.ApiKey)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Update indicates an expected call of Update.
func (mr *MockApikeysServiceMockRecorder) Update(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockApikeysService)(nil).Update), arg0, arg1, arg2)
}

// UpdateLastUsed mocks base method.
func (m *MockApikeysService) UpdateLastUsed(arg0 context.Context, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateLastUsed", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateLastUsed indicates an expected call of UpdateLastUsed.
func (mr *MockApikeysServiceMockRecorder) UpdateLastUsed(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateLastUsed", reflect.TypeOf((*MockApikeysService)(nil).UpdateLastUsed), arg0, arg1)
}

// Validate mocks base method.
func (m *MockApikeysService) Validate(arg0 context.Context, arg1 string) (*ent.ApiKey, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Validate", arg0, arg1)
	ret0, _ := ret[0].(*ent.ApiKey)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Validate indicates an expected call of Validate.
func (mr *MockApikeysServiceMockRecorder) Validate(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Validate", reflect.TypeOf((*MockApikeysService)(nil).Validate), arg0, arg1)
}
