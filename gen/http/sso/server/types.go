// Code generated by goa v3.20.0, DO NOT EDIT.
//
// sso HTTP server types
//
// Command:
// $ goa gen github.com/juicycleff/frank/design -o .

package server

import (
	sso "github.com/juicycleff/frank/gen/sso"
	goa "goa.design/goa/v3/pkg"
)

// CreateIdentityProviderRequestBody is the type of the "sso" service
// "create_identity_provider" endpoint HTTP request body.
type CreateIdentityProviderRequestBody struct {
	// Organization ID
	OrganizationID *string                                   `form:"organization_id,omitempty" json:"organization_id,omitempty" xml:"organization_id,omitempty"`
	Provider       *CreateIdentityProviderRequestRequestBody `form:"provider,omitempty" json:"provider,omitempty" xml:"provider,omitempty"`
}

// UpdateIdentityProviderRequestBody is the type of the "sso" service
// "update_identity_provider" endpoint HTTP request body.
type UpdateIdentityProviderRequestBody struct {
	Provider *UpdateIdentityProviderRequestRequestBody `form:"provider,omitempty" json:"provider,omitempty" xml:"provider,omitempty"`
}

// ListProvidersResponseBody is the type of the "sso" service "list_providers"
// endpoint HTTP response body.
type ListProvidersResponseBody struct {
	Providers []*SSOProviderResponseBody `form:"providers" json:"providers" xml:"providers"`
}

// ProviderCallbackResponseBody is the type of the "sso" service
// "provider_callback" endpoint HTTP response body.
type ProviderCallbackResponseBody struct {
	// Whether authentication was successful
	Authenticated bool `form:"authenticated" json:"authenticated" xml:"authenticated"`
	// User data if authentication successful
	User *UserResponseBody `form:"user,omitempty" json:"user,omitempty" xml:"user,omitempty"`
	// Message to display to the user
	Message string `form:"message" json:"message" xml:"message"`
}

// ListIdentityProvidersResponseBody is the type of the "sso" service
// "list_identity_providers" endpoint HTTP response body.
type ListIdentityProvidersResponseBody struct {
	Providers []*IdentityProviderResponseResponseBody `form:"providers" json:"providers" xml:"providers"`
}

// CreateIdentityProviderResponseBody is the type of the "sso" service
// "create_identity_provider" endpoint HTTP response body.
type CreateIdentityProviderResponseBody struct {
	// Provider ID
	ID string `form:"id" json:"id" xml:"id"`
	// Provider name
	Name string `form:"name" json:"name" xml:"name"`
	// Organization ID
	OrganizationID string `form:"organization_id" json:"organization_id" xml:"organization_id"`
	// Provider type (oauth2, oidc, saml)
	ProviderType string `form:"provider_type" json:"provider_type" xml:"provider_type"`
	// OAuth/OIDC client ID
	ClientID *string `form:"client_id,omitempty" json:"client_id,omitempty" xml:"client_id,omitempty"`
	// OIDC issuer URL
	Issuer *string `form:"issuer,omitempty" json:"issuer,omitempty" xml:"issuer,omitempty"`
	// OAuth/OIDC authorization endpoint
	AuthorizationEndpoint *string `form:"authorization_endpoint,omitempty" json:"authorization_endpoint,omitempty" xml:"authorization_endpoint,omitempty"`
	// OAuth/OIDC token endpoint
	TokenEndpoint *string `form:"token_endpoint,omitempty" json:"token_endpoint,omitempty" xml:"token_endpoint,omitempty"`
	// OIDC userinfo endpoint
	UserinfoEndpoint *string `form:"userinfo_endpoint,omitempty" json:"userinfo_endpoint,omitempty" xml:"userinfo_endpoint,omitempty"`
	// OIDC JWKS URI
	JwksURI *string `form:"jwks_uri,omitempty" json:"jwks_uri,omitempty" xml:"jwks_uri,omitempty"`
	// SAML metadata URL
	MetadataURL *string `form:"metadata_url,omitempty" json:"metadata_url,omitempty" xml:"metadata_url,omitempty"`
	// OAuth/OIDC redirect URI
	RedirectURI *string `form:"redirect_uri,omitempty" json:"redirect_uri,omitempty" xml:"redirect_uri,omitempty"`
	// Whether provider is active
	Active bool `form:"active" json:"active" xml:"active"`
	// Whether this is the primary provider
	Primary *bool `form:"primary,omitempty" json:"primary,omitempty" xml:"primary,omitempty"`
	// Allowed email domains
	Domains []string `form:"domains,omitempty" json:"domains,omitempty" xml:"domains,omitempty"`
	// Attributes mapping
	AttributesMapping map[string]string `form:"attributes_mapping,omitempty" json:"attributes_mapping,omitempty" xml:"attributes_mapping,omitempty"`
	// Creation timestamp
	CreatedAt string `form:"created_at" json:"created_at" xml:"created_at"`
	// Last update timestamp
	UpdatedAt *string `form:"updated_at,omitempty" json:"updated_at,omitempty" xml:"updated_at,omitempty"`
}

// GetIdentityProviderResponseBody is the type of the "sso" service
// "get_identity_provider" endpoint HTTP response body.
type GetIdentityProviderResponseBody struct {
	// Provider ID
	ID string `form:"id" json:"id" xml:"id"`
	// Provider name
	Name string `form:"name" json:"name" xml:"name"`
	// Organization ID
	OrganizationID string `form:"organization_id" json:"organization_id" xml:"organization_id"`
	// Provider type (oauth2, oidc, saml)
	ProviderType string `form:"provider_type" json:"provider_type" xml:"provider_type"`
	// OAuth/OIDC client ID
	ClientID *string `form:"client_id,omitempty" json:"client_id,omitempty" xml:"client_id,omitempty"`
	// OIDC issuer URL
	Issuer *string `form:"issuer,omitempty" json:"issuer,omitempty" xml:"issuer,omitempty"`
	// OAuth/OIDC authorization endpoint
	AuthorizationEndpoint *string `form:"authorization_endpoint,omitempty" json:"authorization_endpoint,omitempty" xml:"authorization_endpoint,omitempty"`
	// OAuth/OIDC token endpoint
	TokenEndpoint *string `form:"token_endpoint,omitempty" json:"token_endpoint,omitempty" xml:"token_endpoint,omitempty"`
	// OIDC userinfo endpoint
	UserinfoEndpoint *string `form:"userinfo_endpoint,omitempty" json:"userinfo_endpoint,omitempty" xml:"userinfo_endpoint,omitempty"`
	// OIDC JWKS URI
	JwksURI *string `form:"jwks_uri,omitempty" json:"jwks_uri,omitempty" xml:"jwks_uri,omitempty"`
	// SAML metadata URL
	MetadataURL *string `form:"metadata_url,omitempty" json:"metadata_url,omitempty" xml:"metadata_url,omitempty"`
	// OAuth/OIDC redirect URI
	RedirectURI *string `form:"redirect_uri,omitempty" json:"redirect_uri,omitempty" xml:"redirect_uri,omitempty"`
	// Whether provider is active
	Active bool `form:"active" json:"active" xml:"active"`
	// Whether this is the primary provider
	Primary *bool `form:"primary,omitempty" json:"primary,omitempty" xml:"primary,omitempty"`
	// Allowed email domains
	Domains []string `form:"domains,omitempty" json:"domains,omitempty" xml:"domains,omitempty"`
	// Attributes mapping
	AttributesMapping map[string]string `form:"attributes_mapping,omitempty" json:"attributes_mapping,omitempty" xml:"attributes_mapping,omitempty"`
	// Creation timestamp
	CreatedAt string `form:"created_at" json:"created_at" xml:"created_at"`
	// Last update timestamp
	UpdatedAt *string `form:"updated_at,omitempty" json:"updated_at,omitempty" xml:"updated_at,omitempty"`
}

// UpdateIdentityProviderResponseBody is the type of the "sso" service
// "update_identity_provider" endpoint HTTP response body.
type UpdateIdentityProviderResponseBody struct {
	// Provider ID
	ID string `form:"id" json:"id" xml:"id"`
	// Provider name
	Name string `form:"name" json:"name" xml:"name"`
	// Organization ID
	OrganizationID string `form:"organization_id" json:"organization_id" xml:"organization_id"`
	// Provider type (oauth2, oidc, saml)
	ProviderType string `form:"provider_type" json:"provider_type" xml:"provider_type"`
	// OAuth/OIDC client ID
	ClientID *string `form:"client_id,omitempty" json:"client_id,omitempty" xml:"client_id,omitempty"`
	// OIDC issuer URL
	Issuer *string `form:"issuer,omitempty" json:"issuer,omitempty" xml:"issuer,omitempty"`
	// OAuth/OIDC authorization endpoint
	AuthorizationEndpoint *string `form:"authorization_endpoint,omitempty" json:"authorization_endpoint,omitempty" xml:"authorization_endpoint,omitempty"`
	// OAuth/OIDC token endpoint
	TokenEndpoint *string `form:"token_endpoint,omitempty" json:"token_endpoint,omitempty" xml:"token_endpoint,omitempty"`
	// OIDC userinfo endpoint
	UserinfoEndpoint *string `form:"userinfo_endpoint,omitempty" json:"userinfo_endpoint,omitempty" xml:"userinfo_endpoint,omitempty"`
	// OIDC JWKS URI
	JwksURI *string `form:"jwks_uri,omitempty" json:"jwks_uri,omitempty" xml:"jwks_uri,omitempty"`
	// SAML metadata URL
	MetadataURL *string `form:"metadata_url,omitempty" json:"metadata_url,omitempty" xml:"metadata_url,omitempty"`
	// OAuth/OIDC redirect URI
	RedirectURI *string `form:"redirect_uri,omitempty" json:"redirect_uri,omitempty" xml:"redirect_uri,omitempty"`
	// Whether provider is active
	Active bool `form:"active" json:"active" xml:"active"`
	// Whether this is the primary provider
	Primary *bool `form:"primary,omitempty" json:"primary,omitempty" xml:"primary,omitempty"`
	// Allowed email domains
	Domains []string `form:"domains,omitempty" json:"domains,omitempty" xml:"domains,omitempty"`
	// Attributes mapping
	AttributesMapping map[string]string `form:"attributes_mapping,omitempty" json:"attributes_mapping,omitempty" xml:"attributes_mapping,omitempty"`
	// Creation timestamp
	CreatedAt string `form:"created_at" json:"created_at" xml:"created_at"`
	// Last update timestamp
	UpdatedAt *string `form:"updated_at,omitempty" json:"updated_at,omitempty" xml:"updated_at,omitempty"`
}

// SamlMetadataResponseBody is the type of the "sso" service "saml_metadata"
// endpoint HTTP response body.
type SamlMetadataResponseBody struct {
	// SAML metadata XML
	Metadata string `form:"metadata" json:"metadata" xml:"metadata"`
}

// ListProvidersBadRequestResponseBody is the type of the "sso" service
// "list_providers" endpoint HTTP response body for the "bad_request" error.
type ListProvidersBadRequestResponseBody struct {
	// Error code
	Code string `form:"code" json:"code" xml:"code"`
	// Error message
	Message string `form:"message" json:"message" xml:"message"`
	// Additional error details
	Details any `form:"details,omitempty" json:"details,omitempty" xml:"details,omitempty"`
	// Unique error ID
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
}

// ListProvidersConflictResponseBody is the type of the "sso" service
// "list_providers" endpoint HTTP response body for the "conflict" error.
type ListProvidersConflictResponseBody struct {
	// Error code
	Code string `form:"code" json:"code" xml:"code"`
	// Error message
	Message string `form:"message" json:"message" xml:"message"`
	// Additional error details
	Details any `form:"details,omitempty" json:"details,omitempty" xml:"details,omitempty"`
	// Unique error ID
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
}

// ListProvidersForbiddenResponseBody is the type of the "sso" service
// "list_providers" endpoint HTTP response body for the "forbidden" error.
type ListProvidersForbiddenResponseBody struct {
	// Error code
	Code string `form:"code" json:"code" xml:"code"`
	// Error message
	Message string `form:"message" json:"message" xml:"message"`
	// Additional error details
	Details any `form:"details,omitempty" json:"details,omitempty" xml:"details,omitempty"`
	// Unique error ID
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
}

// ListProvidersInternalErrorResponseBody is the type of the "sso" service
// "list_providers" endpoint HTTP response body for the "internal_error" error.
type ListProvidersInternalErrorResponseBody struct {
	// Error code
	Code string `form:"code" json:"code" xml:"code"`
	// Error message
	Message string `form:"message" json:"message" xml:"message"`
	// Additional error details
	Details any `form:"details,omitempty" json:"details,omitempty" xml:"details,omitempty"`
	// Unique error ID
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
}

// ListProvidersNotFoundResponseBody is the type of the "sso" service
// "list_providers" endpoint HTTP response body for the "not_found" error.
type ListProvidersNotFoundResponseBody struct {
	// Error code
	Code string `form:"code" json:"code" xml:"code"`
	// Error message
	Message string `form:"message" json:"message" xml:"message"`
	// Additional error details
	Details any `form:"details,omitempty" json:"details,omitempty" xml:"details,omitempty"`
	// Unique error ID
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
}

// ListProvidersUnauthorizedResponseBody is the type of the "sso" service
// "list_providers" endpoint HTTP response body for the "unauthorized" error.
type ListProvidersUnauthorizedResponseBody struct {
	// Error code
	Code string `form:"code" json:"code" xml:"code"`
	// Error message
	Message string `form:"message" json:"message" xml:"message"`
	// Additional error details
	Details any `form:"details,omitempty" json:"details,omitempty" xml:"details,omitempty"`
	// Unique error ID
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
}

// ProviderAuthBadRequestResponseBody is the type of the "sso" service
// "provider_auth" endpoint HTTP response body for the "bad_request" error.
type ProviderAuthBadRequestResponseBody struct {
	// Error code
	Code string `form:"code" json:"code" xml:"code"`
	// Error message
	Message string `form:"message" json:"message" xml:"message"`
	// Additional error details
	Details any `form:"details,omitempty" json:"details,omitempty" xml:"details,omitempty"`
	// Unique error ID
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
}

// ProviderAuthConflictResponseBody is the type of the "sso" service
// "provider_auth" endpoint HTTP response body for the "conflict" error.
type ProviderAuthConflictResponseBody struct {
	// Error code
	Code string `form:"code" json:"code" xml:"code"`
	// Error message
	Message string `form:"message" json:"message" xml:"message"`
	// Additional error details
	Details any `form:"details,omitempty" json:"details,omitempty" xml:"details,omitempty"`
	// Unique error ID
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
}

// ProviderAuthForbiddenResponseBody is the type of the "sso" service
// "provider_auth" endpoint HTTP response body for the "forbidden" error.
type ProviderAuthForbiddenResponseBody struct {
	// Error code
	Code string `form:"code" json:"code" xml:"code"`
	// Error message
	Message string `form:"message" json:"message" xml:"message"`
	// Additional error details
	Details any `form:"details,omitempty" json:"details,omitempty" xml:"details,omitempty"`
	// Unique error ID
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
}

// ProviderAuthInternalErrorResponseBody is the type of the "sso" service
// "provider_auth" endpoint HTTP response body for the "internal_error" error.
type ProviderAuthInternalErrorResponseBody struct {
	// Error code
	Code string `form:"code" json:"code" xml:"code"`
	// Error message
	Message string `form:"message" json:"message" xml:"message"`
	// Additional error details
	Details any `form:"details,omitempty" json:"details,omitempty" xml:"details,omitempty"`
	// Unique error ID
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
}

// ProviderAuthNotFoundResponseBody is the type of the "sso" service
// "provider_auth" endpoint HTTP response body for the "not_found" error.
type ProviderAuthNotFoundResponseBody struct {
	// Error code
	Code string `form:"code" json:"code" xml:"code"`
	// Error message
	Message string `form:"message" json:"message" xml:"message"`
	// Additional error details
	Details any `form:"details,omitempty" json:"details,omitempty" xml:"details,omitempty"`
	// Unique error ID
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
}

// ProviderAuthUnauthorizedResponseBody is the type of the "sso" service
// "provider_auth" endpoint HTTP response body for the "unauthorized" error.
type ProviderAuthUnauthorizedResponseBody struct {
	// Error code
	Code string `form:"code" json:"code" xml:"code"`
	// Error message
	Message string `form:"message" json:"message" xml:"message"`
	// Additional error details
	Details any `form:"details,omitempty" json:"details,omitempty" xml:"details,omitempty"`
	// Unique error ID
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
}

// ProviderCallbackBadRequestResponseBody is the type of the "sso" service
// "provider_callback" endpoint HTTP response body for the "bad_request" error.
type ProviderCallbackBadRequestResponseBody struct {
	// Error code
	Code string `form:"code" json:"code" xml:"code"`
	// Error message
	Message string `form:"message" json:"message" xml:"message"`
	// Additional error details
	Details any `form:"details,omitempty" json:"details,omitempty" xml:"details,omitempty"`
	// Unique error ID
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
}

// ProviderCallbackConflictResponseBody is the type of the "sso" service
// "provider_callback" endpoint HTTP response body for the "conflict" error.
type ProviderCallbackConflictResponseBody struct {
	// Error code
	Code string `form:"code" json:"code" xml:"code"`
	// Error message
	Message string `form:"message" json:"message" xml:"message"`
	// Additional error details
	Details any `form:"details,omitempty" json:"details,omitempty" xml:"details,omitempty"`
	// Unique error ID
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
}

// ProviderCallbackForbiddenResponseBody is the type of the "sso" service
// "provider_callback" endpoint HTTP response body for the "forbidden" error.
type ProviderCallbackForbiddenResponseBody struct {
	// Error code
	Code string `form:"code" json:"code" xml:"code"`
	// Error message
	Message string `form:"message" json:"message" xml:"message"`
	// Additional error details
	Details any `form:"details,omitempty" json:"details,omitempty" xml:"details,omitempty"`
	// Unique error ID
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
}

// ProviderCallbackInternalErrorResponseBody is the type of the "sso" service
// "provider_callback" endpoint HTTP response body for the "internal_error"
// error.
type ProviderCallbackInternalErrorResponseBody struct {
	// Error code
	Code string `form:"code" json:"code" xml:"code"`
	// Error message
	Message string `form:"message" json:"message" xml:"message"`
	// Additional error details
	Details any `form:"details,omitempty" json:"details,omitempty" xml:"details,omitempty"`
	// Unique error ID
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
}

// ProviderCallbackNotFoundResponseBody is the type of the "sso" service
// "provider_callback" endpoint HTTP response body for the "not_found" error.
type ProviderCallbackNotFoundResponseBody struct {
	// Error code
	Code string `form:"code" json:"code" xml:"code"`
	// Error message
	Message string `form:"message" json:"message" xml:"message"`
	// Additional error details
	Details any `form:"details,omitempty" json:"details,omitempty" xml:"details,omitempty"`
	// Unique error ID
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
}

// ProviderCallbackUnauthorizedResponseBody is the type of the "sso" service
// "provider_callback" endpoint HTTP response body for the "unauthorized" error.
type ProviderCallbackUnauthorizedResponseBody struct {
	// Error code
	Code string `form:"code" json:"code" xml:"code"`
	// Error message
	Message string `form:"message" json:"message" xml:"message"`
	// Additional error details
	Details any `form:"details,omitempty" json:"details,omitempty" xml:"details,omitempty"`
	// Unique error ID
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
}

// ListIdentityProvidersBadRequestResponseBody is the type of the "sso" service
// "list_identity_providers" endpoint HTTP response body for the "bad_request"
// error.
type ListIdentityProvidersBadRequestResponseBody struct {
	// Error code
	Code string `form:"code" json:"code" xml:"code"`
	// Error message
	Message string `form:"message" json:"message" xml:"message"`
	// Additional error details
	Details any `form:"details,omitempty" json:"details,omitempty" xml:"details,omitempty"`
	// Unique error ID
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
}

// ListIdentityProvidersConflictResponseBody is the type of the "sso" service
// "list_identity_providers" endpoint HTTP response body for the "conflict"
// error.
type ListIdentityProvidersConflictResponseBody struct {
	// Error code
	Code string `form:"code" json:"code" xml:"code"`
	// Error message
	Message string `form:"message" json:"message" xml:"message"`
	// Additional error details
	Details any `form:"details,omitempty" json:"details,omitempty" xml:"details,omitempty"`
	// Unique error ID
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
}

// ListIdentityProvidersForbiddenResponseBody is the type of the "sso" service
// "list_identity_providers" endpoint HTTP response body for the "forbidden"
// error.
type ListIdentityProvidersForbiddenResponseBody struct {
	// Error code
	Code string `form:"code" json:"code" xml:"code"`
	// Error message
	Message string `form:"message" json:"message" xml:"message"`
	// Additional error details
	Details any `form:"details,omitempty" json:"details,omitempty" xml:"details,omitempty"`
	// Unique error ID
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
}

// ListIdentityProvidersInternalErrorResponseBody is the type of the "sso"
// service "list_identity_providers" endpoint HTTP response body for the
// "internal_error" error.
type ListIdentityProvidersInternalErrorResponseBody struct {
	// Error code
	Code string `form:"code" json:"code" xml:"code"`
	// Error message
	Message string `form:"message" json:"message" xml:"message"`
	// Additional error details
	Details any `form:"details,omitempty" json:"details,omitempty" xml:"details,omitempty"`
	// Unique error ID
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
}

// ListIdentityProvidersNotFoundResponseBody is the type of the "sso" service
// "list_identity_providers" endpoint HTTP response body for the "not_found"
// error.
type ListIdentityProvidersNotFoundResponseBody struct {
	// Error code
	Code string `form:"code" json:"code" xml:"code"`
	// Error message
	Message string `form:"message" json:"message" xml:"message"`
	// Additional error details
	Details any `form:"details,omitempty" json:"details,omitempty" xml:"details,omitempty"`
	// Unique error ID
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
}

// ListIdentityProvidersUnauthorizedResponseBody is the type of the "sso"
// service "list_identity_providers" endpoint HTTP response body for the
// "unauthorized" error.
type ListIdentityProvidersUnauthorizedResponseBody struct {
	// Error code
	Code string `form:"code" json:"code" xml:"code"`
	// Error message
	Message string `form:"message" json:"message" xml:"message"`
	// Additional error details
	Details any `form:"details,omitempty" json:"details,omitempty" xml:"details,omitempty"`
	// Unique error ID
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
}

// CreateIdentityProviderBadRequestResponseBody is the type of the "sso"
// service "create_identity_provider" endpoint HTTP response body for the
// "bad_request" error.
type CreateIdentityProviderBadRequestResponseBody struct {
	// Error code
	Code string `form:"code" json:"code" xml:"code"`
	// Error message
	Message string `form:"message" json:"message" xml:"message"`
	// Additional error details
	Details any `form:"details,omitempty" json:"details,omitempty" xml:"details,omitempty"`
	// Unique error ID
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
}

// CreateIdentityProviderConflictResponseBody is the type of the "sso" service
// "create_identity_provider" endpoint HTTP response body for the "conflict"
// error.
type CreateIdentityProviderConflictResponseBody struct {
	// Error code
	Code string `form:"code" json:"code" xml:"code"`
	// Error message
	Message string `form:"message" json:"message" xml:"message"`
	// Additional error details
	Details any `form:"details,omitempty" json:"details,omitempty" xml:"details,omitempty"`
	// Unique error ID
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
}

// CreateIdentityProviderForbiddenResponseBody is the type of the "sso" service
// "create_identity_provider" endpoint HTTP response body for the "forbidden"
// error.
type CreateIdentityProviderForbiddenResponseBody struct {
	// Error code
	Code string `form:"code" json:"code" xml:"code"`
	// Error message
	Message string `form:"message" json:"message" xml:"message"`
	// Additional error details
	Details any `form:"details,omitempty" json:"details,omitempty" xml:"details,omitempty"`
	// Unique error ID
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
}

// CreateIdentityProviderInternalErrorResponseBody is the type of the "sso"
// service "create_identity_provider" endpoint HTTP response body for the
// "internal_error" error.
type CreateIdentityProviderInternalErrorResponseBody struct {
	// Error code
	Code string `form:"code" json:"code" xml:"code"`
	// Error message
	Message string `form:"message" json:"message" xml:"message"`
	// Additional error details
	Details any `form:"details,omitempty" json:"details,omitempty" xml:"details,omitempty"`
	// Unique error ID
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
}

// CreateIdentityProviderNotFoundResponseBody is the type of the "sso" service
// "create_identity_provider" endpoint HTTP response body for the "not_found"
// error.
type CreateIdentityProviderNotFoundResponseBody struct {
	// Error code
	Code string `form:"code" json:"code" xml:"code"`
	// Error message
	Message string `form:"message" json:"message" xml:"message"`
	// Additional error details
	Details any `form:"details,omitempty" json:"details,omitempty" xml:"details,omitempty"`
	// Unique error ID
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
}

// CreateIdentityProviderUnauthorizedResponseBody is the type of the "sso"
// service "create_identity_provider" endpoint HTTP response body for the
// "unauthorized" error.
type CreateIdentityProviderUnauthorizedResponseBody struct {
	// Error code
	Code string `form:"code" json:"code" xml:"code"`
	// Error message
	Message string `form:"message" json:"message" xml:"message"`
	// Additional error details
	Details any `form:"details,omitempty" json:"details,omitempty" xml:"details,omitempty"`
	// Unique error ID
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
}

// GetIdentityProviderBadRequestResponseBody is the type of the "sso" service
// "get_identity_provider" endpoint HTTP response body for the "bad_request"
// error.
type GetIdentityProviderBadRequestResponseBody struct {
	// Error code
	Code string `form:"code" json:"code" xml:"code"`
	// Error message
	Message string `form:"message" json:"message" xml:"message"`
	// Additional error details
	Details any `form:"details,omitempty" json:"details,omitempty" xml:"details,omitempty"`
	// Unique error ID
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
}

// GetIdentityProviderConflictResponseBody is the type of the "sso" service
// "get_identity_provider" endpoint HTTP response body for the "conflict" error.
type GetIdentityProviderConflictResponseBody struct {
	// Error code
	Code string `form:"code" json:"code" xml:"code"`
	// Error message
	Message string `form:"message" json:"message" xml:"message"`
	// Additional error details
	Details any `form:"details,omitempty" json:"details,omitempty" xml:"details,omitempty"`
	// Unique error ID
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
}

// GetIdentityProviderForbiddenResponseBody is the type of the "sso" service
// "get_identity_provider" endpoint HTTP response body for the "forbidden"
// error.
type GetIdentityProviderForbiddenResponseBody struct {
	// Error code
	Code string `form:"code" json:"code" xml:"code"`
	// Error message
	Message string `form:"message" json:"message" xml:"message"`
	// Additional error details
	Details any `form:"details,omitempty" json:"details,omitempty" xml:"details,omitempty"`
	// Unique error ID
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
}

// GetIdentityProviderInternalErrorResponseBody is the type of the "sso"
// service "get_identity_provider" endpoint HTTP response body for the
// "internal_error" error.
type GetIdentityProviderInternalErrorResponseBody struct {
	// Error code
	Code string `form:"code" json:"code" xml:"code"`
	// Error message
	Message string `form:"message" json:"message" xml:"message"`
	// Additional error details
	Details any `form:"details,omitempty" json:"details,omitempty" xml:"details,omitempty"`
	// Unique error ID
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
}

// GetIdentityProviderNotFoundResponseBody is the type of the "sso" service
// "get_identity_provider" endpoint HTTP response body for the "not_found"
// error.
type GetIdentityProviderNotFoundResponseBody struct {
	// Error code
	Code string `form:"code" json:"code" xml:"code"`
	// Error message
	Message string `form:"message" json:"message" xml:"message"`
	// Additional error details
	Details any `form:"details,omitempty" json:"details,omitempty" xml:"details,omitempty"`
	// Unique error ID
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
}

// GetIdentityProviderUnauthorizedResponseBody is the type of the "sso" service
// "get_identity_provider" endpoint HTTP response body for the "unauthorized"
// error.
type GetIdentityProviderUnauthorizedResponseBody struct {
	// Error code
	Code string `form:"code" json:"code" xml:"code"`
	// Error message
	Message string `form:"message" json:"message" xml:"message"`
	// Additional error details
	Details any `form:"details,omitempty" json:"details,omitempty" xml:"details,omitempty"`
	// Unique error ID
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
}

// UpdateIdentityProviderBadRequestResponseBody is the type of the "sso"
// service "update_identity_provider" endpoint HTTP response body for the
// "bad_request" error.
type UpdateIdentityProviderBadRequestResponseBody struct {
	// Error code
	Code string `form:"code" json:"code" xml:"code"`
	// Error message
	Message string `form:"message" json:"message" xml:"message"`
	// Additional error details
	Details any `form:"details,omitempty" json:"details,omitempty" xml:"details,omitempty"`
	// Unique error ID
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
}

// UpdateIdentityProviderConflictResponseBody is the type of the "sso" service
// "update_identity_provider" endpoint HTTP response body for the "conflict"
// error.
type UpdateIdentityProviderConflictResponseBody struct {
	// Error code
	Code string `form:"code" json:"code" xml:"code"`
	// Error message
	Message string `form:"message" json:"message" xml:"message"`
	// Additional error details
	Details any `form:"details,omitempty" json:"details,omitempty" xml:"details,omitempty"`
	// Unique error ID
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
}

// UpdateIdentityProviderForbiddenResponseBody is the type of the "sso" service
// "update_identity_provider" endpoint HTTP response body for the "forbidden"
// error.
type UpdateIdentityProviderForbiddenResponseBody struct {
	// Error code
	Code string `form:"code" json:"code" xml:"code"`
	// Error message
	Message string `form:"message" json:"message" xml:"message"`
	// Additional error details
	Details any `form:"details,omitempty" json:"details,omitempty" xml:"details,omitempty"`
	// Unique error ID
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
}

// UpdateIdentityProviderInternalErrorResponseBody is the type of the "sso"
// service "update_identity_provider" endpoint HTTP response body for the
// "internal_error" error.
type UpdateIdentityProviderInternalErrorResponseBody struct {
	// Error code
	Code string `form:"code" json:"code" xml:"code"`
	// Error message
	Message string `form:"message" json:"message" xml:"message"`
	// Additional error details
	Details any `form:"details,omitempty" json:"details,omitempty" xml:"details,omitempty"`
	// Unique error ID
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
}

// UpdateIdentityProviderNotFoundResponseBody is the type of the "sso" service
// "update_identity_provider" endpoint HTTP response body for the "not_found"
// error.
type UpdateIdentityProviderNotFoundResponseBody struct {
	// Error code
	Code string `form:"code" json:"code" xml:"code"`
	// Error message
	Message string `form:"message" json:"message" xml:"message"`
	// Additional error details
	Details any `form:"details,omitempty" json:"details,omitempty" xml:"details,omitempty"`
	// Unique error ID
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
}

// UpdateIdentityProviderUnauthorizedResponseBody is the type of the "sso"
// service "update_identity_provider" endpoint HTTP response body for the
// "unauthorized" error.
type UpdateIdentityProviderUnauthorizedResponseBody struct {
	// Error code
	Code string `form:"code" json:"code" xml:"code"`
	// Error message
	Message string `form:"message" json:"message" xml:"message"`
	// Additional error details
	Details any `form:"details,omitempty" json:"details,omitempty" xml:"details,omitempty"`
	// Unique error ID
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
}

// DeleteIdentityProviderBadRequestResponseBody is the type of the "sso"
// service "delete_identity_provider" endpoint HTTP response body for the
// "bad_request" error.
type DeleteIdentityProviderBadRequestResponseBody struct {
	// Error code
	Code string `form:"code" json:"code" xml:"code"`
	// Error message
	Message string `form:"message" json:"message" xml:"message"`
	// Additional error details
	Details any `form:"details,omitempty" json:"details,omitempty" xml:"details,omitempty"`
	// Unique error ID
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
}

// DeleteIdentityProviderConflictResponseBody is the type of the "sso" service
// "delete_identity_provider" endpoint HTTP response body for the "conflict"
// error.
type DeleteIdentityProviderConflictResponseBody struct {
	// Error code
	Code string `form:"code" json:"code" xml:"code"`
	// Error message
	Message string `form:"message" json:"message" xml:"message"`
	// Additional error details
	Details any `form:"details,omitempty" json:"details,omitempty" xml:"details,omitempty"`
	// Unique error ID
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
}

// DeleteIdentityProviderForbiddenResponseBody is the type of the "sso" service
// "delete_identity_provider" endpoint HTTP response body for the "forbidden"
// error.
type DeleteIdentityProviderForbiddenResponseBody struct {
	// Error code
	Code string `form:"code" json:"code" xml:"code"`
	// Error message
	Message string `form:"message" json:"message" xml:"message"`
	// Additional error details
	Details any `form:"details,omitempty" json:"details,omitempty" xml:"details,omitempty"`
	// Unique error ID
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
}

// DeleteIdentityProviderInternalErrorResponseBody is the type of the "sso"
// service "delete_identity_provider" endpoint HTTP response body for the
// "internal_error" error.
type DeleteIdentityProviderInternalErrorResponseBody struct {
	// Error code
	Code string `form:"code" json:"code" xml:"code"`
	// Error message
	Message string `form:"message" json:"message" xml:"message"`
	// Additional error details
	Details any `form:"details,omitempty" json:"details,omitempty" xml:"details,omitempty"`
	// Unique error ID
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
}

// DeleteIdentityProviderNotFoundResponseBody is the type of the "sso" service
// "delete_identity_provider" endpoint HTTP response body for the "not_found"
// error.
type DeleteIdentityProviderNotFoundResponseBody struct {
	// Error code
	Code string `form:"code" json:"code" xml:"code"`
	// Error message
	Message string `form:"message" json:"message" xml:"message"`
	// Additional error details
	Details any `form:"details,omitempty" json:"details,omitempty" xml:"details,omitempty"`
	// Unique error ID
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
}

// DeleteIdentityProviderUnauthorizedResponseBody is the type of the "sso"
// service "delete_identity_provider" endpoint HTTP response body for the
// "unauthorized" error.
type DeleteIdentityProviderUnauthorizedResponseBody struct {
	// Error code
	Code string `form:"code" json:"code" xml:"code"`
	// Error message
	Message string `form:"message" json:"message" xml:"message"`
	// Additional error details
	Details any `form:"details,omitempty" json:"details,omitempty" xml:"details,omitempty"`
	// Unique error ID
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
}

// SamlMetadataBadRequestResponseBody is the type of the "sso" service
// "saml_metadata" endpoint HTTP response body for the "bad_request" error.
type SamlMetadataBadRequestResponseBody struct {
	// Error code
	Code string `form:"code" json:"code" xml:"code"`
	// Error message
	Message string `form:"message" json:"message" xml:"message"`
	// Additional error details
	Details any `form:"details,omitempty" json:"details,omitempty" xml:"details,omitempty"`
	// Unique error ID
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
}

// SamlMetadataConflictResponseBody is the type of the "sso" service
// "saml_metadata" endpoint HTTP response body for the "conflict" error.
type SamlMetadataConflictResponseBody struct {
	// Error code
	Code string `form:"code" json:"code" xml:"code"`
	// Error message
	Message string `form:"message" json:"message" xml:"message"`
	// Additional error details
	Details any `form:"details,omitempty" json:"details,omitempty" xml:"details,omitempty"`
	// Unique error ID
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
}

// SamlMetadataForbiddenResponseBody is the type of the "sso" service
// "saml_metadata" endpoint HTTP response body for the "forbidden" error.
type SamlMetadataForbiddenResponseBody struct {
	// Error code
	Code string `form:"code" json:"code" xml:"code"`
	// Error message
	Message string `form:"message" json:"message" xml:"message"`
	// Additional error details
	Details any `form:"details,omitempty" json:"details,omitempty" xml:"details,omitempty"`
	// Unique error ID
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
}

// SamlMetadataInternalErrorResponseBody is the type of the "sso" service
// "saml_metadata" endpoint HTTP response body for the "internal_error" error.
type SamlMetadataInternalErrorResponseBody struct {
	// Error code
	Code string `form:"code" json:"code" xml:"code"`
	// Error message
	Message string `form:"message" json:"message" xml:"message"`
	// Additional error details
	Details any `form:"details,omitempty" json:"details,omitempty" xml:"details,omitempty"`
	// Unique error ID
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
}

// SamlMetadataNotFoundResponseBody is the type of the "sso" service
// "saml_metadata" endpoint HTTP response body for the "not_found" error.
type SamlMetadataNotFoundResponseBody struct {
	// Error code
	Code string `form:"code" json:"code" xml:"code"`
	// Error message
	Message string `form:"message" json:"message" xml:"message"`
	// Additional error details
	Details any `form:"details,omitempty" json:"details,omitempty" xml:"details,omitempty"`
	// Unique error ID
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
}

// SamlMetadataUnauthorizedResponseBody is the type of the "sso" service
// "saml_metadata" endpoint HTTP response body for the "unauthorized" error.
type SamlMetadataUnauthorizedResponseBody struct {
	// Error code
	Code string `form:"code" json:"code" xml:"code"`
	// Error message
	Message string `form:"message" json:"message" xml:"message"`
	// Additional error details
	Details any `form:"details,omitempty" json:"details,omitempty" xml:"details,omitempty"`
	// Unique error ID
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
}

// SamlAcsBadRequestResponseBody is the type of the "sso" service "saml_acs"
// endpoint HTTP response body for the "bad_request" error.
type SamlAcsBadRequestResponseBody struct {
	// Error code
	Code string `form:"code" json:"code" xml:"code"`
	// Error message
	Message string `form:"message" json:"message" xml:"message"`
	// Additional error details
	Details any `form:"details,omitempty" json:"details,omitempty" xml:"details,omitempty"`
	// Unique error ID
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
}

// SamlAcsConflictResponseBody is the type of the "sso" service "saml_acs"
// endpoint HTTP response body for the "conflict" error.
type SamlAcsConflictResponseBody struct {
	// Error code
	Code string `form:"code" json:"code" xml:"code"`
	// Error message
	Message string `form:"message" json:"message" xml:"message"`
	// Additional error details
	Details any `form:"details,omitempty" json:"details,omitempty" xml:"details,omitempty"`
	// Unique error ID
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
}

// SamlAcsForbiddenResponseBody is the type of the "sso" service "saml_acs"
// endpoint HTTP response body for the "forbidden" error.
type SamlAcsForbiddenResponseBody struct {
	// Error code
	Code string `form:"code" json:"code" xml:"code"`
	// Error message
	Message string `form:"message" json:"message" xml:"message"`
	// Additional error details
	Details any `form:"details,omitempty" json:"details,omitempty" xml:"details,omitempty"`
	// Unique error ID
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
}

// SamlAcsInternalErrorResponseBody is the type of the "sso" service "saml_acs"
// endpoint HTTP response body for the "internal_error" error.
type SamlAcsInternalErrorResponseBody struct {
	// Error code
	Code string `form:"code" json:"code" xml:"code"`
	// Error message
	Message string `form:"message" json:"message" xml:"message"`
	// Additional error details
	Details any `form:"details,omitempty" json:"details,omitempty" xml:"details,omitempty"`
	// Unique error ID
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
}

// SamlAcsNotFoundResponseBody is the type of the "sso" service "saml_acs"
// endpoint HTTP response body for the "not_found" error.
type SamlAcsNotFoundResponseBody struct {
	// Error code
	Code string `form:"code" json:"code" xml:"code"`
	// Error message
	Message string `form:"message" json:"message" xml:"message"`
	// Additional error details
	Details any `form:"details,omitempty" json:"details,omitempty" xml:"details,omitempty"`
	// Unique error ID
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
}

// SamlAcsUnauthorizedResponseBody is the type of the "sso" service "saml_acs"
// endpoint HTTP response body for the "unauthorized" error.
type SamlAcsUnauthorizedResponseBody struct {
	// Error code
	Code string `form:"code" json:"code" xml:"code"`
	// Error message
	Message string `form:"message" json:"message" xml:"message"`
	// Additional error details
	Details any `form:"details,omitempty" json:"details,omitempty" xml:"details,omitempty"`
	// Unique error ID
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
}

// SSOProviderResponseBody is used to define fields on response body types.
type SSOProviderResponseBody struct {
	// Provider ID
	ID string `form:"id" json:"id" xml:"id"`
	// Provider name
	Name string `form:"name" json:"name" xml:"name"`
	// Provider type (oauth2, oidc, saml)
	Type string `form:"type" json:"type" xml:"type"`
	// Provider icon URL
	IconURL *string `form:"icon_url,omitempty" json:"icon_url,omitempty" xml:"icon_url,omitempty"`
}

// UserResponseBody is used to define fields on response body types.
type UserResponseBody struct {
	// Whether account is active
	Active bool `form:"active" json:"active" xml:"active"`
	// Whether email is verified
	EmailVerified bool `json:"email_verified,emailVerified"`
	// Whether phone is verified
	PhoneVerified *bool `json:"phone_verified,phoneVerified"`
	// URL to user's profile image
	ProfileImageURL *string `json:"profile_image_url,profileImageUrl"`
	// User first name
	FirstName *string `json:"first_name,firstName"`
	// User last name
	LastName *string `json:"last_name,lastName"`
	// ID of the entity
	ID *string `json:"id"`
	// User phone number
	PhoneNumber *string `json:"phone_number,phoneNumber"`
	// User metadata
	Metadata map[string]any `json:"metadata"`
	// User locale
	Locale string `json:"locale"`
	// Email address
	Email string `json:"email"`
}

// IdentityProviderResponseResponseBody is used to define fields on response
// body types.
type IdentityProviderResponseResponseBody struct {
	// Provider ID
	ID string `form:"id" json:"id" xml:"id"`
	// Provider name
	Name string `form:"name" json:"name" xml:"name"`
	// Organization ID
	OrganizationID string `form:"organization_id" json:"organization_id" xml:"organization_id"`
	// Provider type (oauth2, oidc, saml)
	ProviderType string `form:"provider_type" json:"provider_type" xml:"provider_type"`
	// OAuth/OIDC client ID
	ClientID *string `form:"client_id,omitempty" json:"client_id,omitempty" xml:"client_id,omitempty"`
	// OIDC issuer URL
	Issuer *string `form:"issuer,omitempty" json:"issuer,omitempty" xml:"issuer,omitempty"`
	// OAuth/OIDC authorization endpoint
	AuthorizationEndpoint *string `form:"authorization_endpoint,omitempty" json:"authorization_endpoint,omitempty" xml:"authorization_endpoint,omitempty"`
	// OAuth/OIDC token endpoint
	TokenEndpoint *string `form:"token_endpoint,omitempty" json:"token_endpoint,omitempty" xml:"token_endpoint,omitempty"`
	// OIDC userinfo endpoint
	UserinfoEndpoint *string `form:"userinfo_endpoint,omitempty" json:"userinfo_endpoint,omitempty" xml:"userinfo_endpoint,omitempty"`
	// OIDC JWKS URI
	JwksURI *string `form:"jwks_uri,omitempty" json:"jwks_uri,omitempty" xml:"jwks_uri,omitempty"`
	// SAML metadata URL
	MetadataURL *string `form:"metadata_url,omitempty" json:"metadata_url,omitempty" xml:"metadata_url,omitempty"`
	// OAuth/OIDC redirect URI
	RedirectURI *string `form:"redirect_uri,omitempty" json:"redirect_uri,omitempty" xml:"redirect_uri,omitempty"`
	// Whether provider is active
	Active bool `form:"active" json:"active" xml:"active"`
	// Whether this is the primary provider
	Primary *bool `form:"primary,omitempty" json:"primary,omitempty" xml:"primary,omitempty"`
	// Allowed email domains
	Domains []string `form:"domains,omitempty" json:"domains,omitempty" xml:"domains,omitempty"`
	// Attributes mapping
	AttributesMapping map[string]string `form:"attributes_mapping,omitempty" json:"attributes_mapping,omitempty" xml:"attributes_mapping,omitempty"`
	// Creation timestamp
	CreatedAt string `form:"created_at" json:"created_at" xml:"created_at"`
	// Last update timestamp
	UpdatedAt *string `form:"updated_at,omitempty" json:"updated_at,omitempty" xml:"updated_at,omitempty"`
}

// CreateIdentityProviderRequestRequestBody is used to define fields on request
// body types.
type CreateIdentityProviderRequestRequestBody struct {
	// Provider name
	Name *string `form:"name,omitempty" json:"name,omitempty" xml:"name,omitempty"`
	// Provider type
	ProviderType *string `form:"provider_type,omitempty" json:"provider_type,omitempty" xml:"provider_type,omitempty"`
	// OAuth/OIDC client ID
	ClientID *string `form:"client_id,omitempty" json:"client_id,omitempty" xml:"client_id,omitempty"`
	// OAuth/OIDC client secret
	ClientSecret *string `form:"client_secret,omitempty" json:"client_secret,omitempty" xml:"client_secret,omitempty"`
	// OIDC issuer URL
	Issuer *string `form:"issuer,omitempty" json:"issuer,omitempty" xml:"issuer,omitempty"`
	// OAuth/OIDC authorization endpoint
	AuthorizationEndpoint *string `form:"authorization_endpoint,omitempty" json:"authorization_endpoint,omitempty" xml:"authorization_endpoint,omitempty"`
	// OAuth/OIDC token endpoint
	TokenEndpoint *string `form:"token_endpoint,omitempty" json:"token_endpoint,omitempty" xml:"token_endpoint,omitempty"`
	// OIDC userinfo endpoint
	UserinfoEndpoint *string `form:"userinfo_endpoint,omitempty" json:"userinfo_endpoint,omitempty" xml:"userinfo_endpoint,omitempty"`
	// OIDC JWKS URI
	JwksURI *string `form:"jwks_uri,omitempty" json:"jwks_uri,omitempty" xml:"jwks_uri,omitempty"`
	// SAML metadata URL
	MetadataURL *string `form:"metadata_url,omitempty" json:"metadata_url,omitempty" xml:"metadata_url,omitempty"`
	// OAuth/OIDC redirect URI
	RedirectURI *string `form:"redirect_uri,omitempty" json:"redirect_uri,omitempty" xml:"redirect_uri,omitempty"`
	// SAML certificate
	Certificate *string `form:"certificate,omitempty" json:"certificate,omitempty" xml:"certificate,omitempty"`
	// SAML private key
	PrivateKey *string `form:"private_key,omitempty" json:"private_key,omitempty" xml:"private_key,omitempty"`
	// Whether provider is active
	Active *bool `form:"active,omitempty" json:"active,omitempty" xml:"active,omitempty"`
	// Whether this is the primary provider
	Primary *bool `form:"primary,omitempty" json:"primary,omitempty" xml:"primary,omitempty"`
	// Allowed email domains
	Domains []string `form:"domains,omitempty" json:"domains,omitempty" xml:"domains,omitempty"`
	// Attributes mapping
	AttributesMapping map[string]string `form:"attributes_mapping,omitempty" json:"attributes_mapping,omitempty" xml:"attributes_mapping,omitempty"`
}

// UpdateIdentityProviderRequestRequestBody is used to define fields on request
// body types.
type UpdateIdentityProviderRequestRequestBody struct {
	// Provider name
	Name *string `form:"name,omitempty" json:"name,omitempty" xml:"name,omitempty"`
	// OAuth/OIDC client ID
	ClientID *string `form:"client_id,omitempty" json:"client_id,omitempty" xml:"client_id,omitempty"`
	// OAuth/OIDC client secret
	ClientSecret *string `form:"client_secret,omitempty" json:"client_secret,omitempty" xml:"client_secret,omitempty"`
	// OIDC issuer URL
	Issuer *string `form:"issuer,omitempty" json:"issuer,omitempty" xml:"issuer,omitempty"`
	// OAuth/OIDC authorization endpoint
	AuthorizationEndpoint *string `form:"authorization_endpoint,omitempty" json:"authorization_endpoint,omitempty" xml:"authorization_endpoint,omitempty"`
	// OAuth/OIDC token endpoint
	TokenEndpoint *string `form:"token_endpoint,omitempty" json:"token_endpoint,omitempty" xml:"token_endpoint,omitempty"`
	// OIDC userinfo endpoint
	UserinfoEndpoint *string `form:"userinfo_endpoint,omitempty" json:"userinfo_endpoint,omitempty" xml:"userinfo_endpoint,omitempty"`
	// OIDC JWKS URI
	JwksURI *string `form:"jwks_uri,omitempty" json:"jwks_uri,omitempty" xml:"jwks_uri,omitempty"`
	// SAML metadata URL
	MetadataURL *string `form:"metadata_url,omitempty" json:"metadata_url,omitempty" xml:"metadata_url,omitempty"`
	// OAuth/OIDC redirect URI
	RedirectURI *string `form:"redirect_uri,omitempty" json:"redirect_uri,omitempty" xml:"redirect_uri,omitempty"`
	// SAML certificate
	Certificate *string `form:"certificate,omitempty" json:"certificate,omitempty" xml:"certificate,omitempty"`
	// SAML private key
	PrivateKey *string `form:"private_key,omitempty" json:"private_key,omitempty" xml:"private_key,omitempty"`
	// Whether provider is active
	Active *bool `form:"active,omitempty" json:"active,omitempty" xml:"active,omitempty"`
	// Whether this is the primary provider
	Primary *bool `form:"primary,omitempty" json:"primary,omitempty" xml:"primary,omitempty"`
	// Allowed email domains
	Domains []string `form:"domains,omitempty" json:"domains,omitempty" xml:"domains,omitempty"`
	// Attributes mapping
	AttributesMapping map[string]string `form:"attributes_mapping,omitempty" json:"attributes_mapping,omitempty" xml:"attributes_mapping,omitempty"`
}

// NewListProvidersResponseBody builds the HTTP response body from the result
// of the "list_providers" endpoint of the "sso" service.
func NewListProvidersResponseBody(res *sso.ListProvidersResult) *ListProvidersResponseBody {
	body := &ListProvidersResponseBody{}
	if res.Providers != nil {
		body.Providers = make([]*SSOProviderResponseBody, len(res.Providers))
		for i, val := range res.Providers {
			body.Providers[i] = marshalSsoSSOProviderToSSOProviderResponseBody(val)
		}
	} else {
		body.Providers = []*SSOProviderResponseBody{}
	}
	return body
}

// NewProviderCallbackResponseBody builds the HTTP response body from the
// result of the "provider_callback" endpoint of the "sso" service.
func NewProviderCallbackResponseBody(res *sso.ProviderCallbackResult) *ProviderCallbackResponseBody {
	body := &ProviderCallbackResponseBody{
		Authenticated: res.Authenticated,
		Message:       res.Message,
	}
	if res.User != nil {
		body.User = marshalDesigntypesUserToUserResponseBody(res.User)
	}
	return body
}

// NewListIdentityProvidersResponseBody builds the HTTP response body from the
// result of the "list_identity_providers" endpoint of the "sso" service.
func NewListIdentityProvidersResponseBody(res *sso.ListIdentityProvidersResult) *ListIdentityProvidersResponseBody {
	body := &ListIdentityProvidersResponseBody{}
	if res.Providers != nil {
		body.Providers = make([]*IdentityProviderResponseResponseBody, len(res.Providers))
		for i, val := range res.Providers {
			body.Providers[i] = marshalSsoIdentityProviderResponseToIdentityProviderResponseResponseBody(val)
		}
	} else {
		body.Providers = []*IdentityProviderResponseResponseBody{}
	}
	return body
}

// NewCreateIdentityProviderResponseBody builds the HTTP response body from the
// result of the "create_identity_provider" endpoint of the "sso" service.
func NewCreateIdentityProviderResponseBody(res *sso.IdentityProviderResponse) *CreateIdentityProviderResponseBody {
	body := &CreateIdentityProviderResponseBody{
		ID:                    res.ID,
		Name:                  res.Name,
		OrganizationID:        res.OrganizationID,
		ProviderType:          res.ProviderType,
		ClientID:              res.ClientID,
		Issuer:                res.Issuer,
		AuthorizationEndpoint: res.AuthorizationEndpoint,
		TokenEndpoint:         res.TokenEndpoint,
		UserinfoEndpoint:      res.UserinfoEndpoint,
		JwksURI:               res.JwksURI,
		MetadataURL:           res.MetadataURL,
		RedirectURI:           res.RedirectURI,
		Active:                res.Active,
		Primary:               res.Primary,
		CreatedAt:             res.CreatedAt,
		UpdatedAt:             res.UpdatedAt,
	}
	if res.Domains != nil {
		body.Domains = make([]string, len(res.Domains))
		for i, val := range res.Domains {
			body.Domains[i] = val
		}
	}
	if res.AttributesMapping != nil {
		body.AttributesMapping = make(map[string]string, len(res.AttributesMapping))
		for key, val := range res.AttributesMapping {
			tk := key
			tv := val
			body.AttributesMapping[tk] = tv
		}
	}
	return body
}

// NewGetIdentityProviderResponseBody builds the HTTP response body from the
// result of the "get_identity_provider" endpoint of the "sso" service.
func NewGetIdentityProviderResponseBody(res *sso.IdentityProviderResponse) *GetIdentityProviderResponseBody {
	body := &GetIdentityProviderResponseBody{
		ID:                    res.ID,
		Name:                  res.Name,
		OrganizationID:        res.OrganizationID,
		ProviderType:          res.ProviderType,
		ClientID:              res.ClientID,
		Issuer:                res.Issuer,
		AuthorizationEndpoint: res.AuthorizationEndpoint,
		TokenEndpoint:         res.TokenEndpoint,
		UserinfoEndpoint:      res.UserinfoEndpoint,
		JwksURI:               res.JwksURI,
		MetadataURL:           res.MetadataURL,
		RedirectURI:           res.RedirectURI,
		Active:                res.Active,
		Primary:               res.Primary,
		CreatedAt:             res.CreatedAt,
		UpdatedAt:             res.UpdatedAt,
	}
	if res.Domains != nil {
		body.Domains = make([]string, len(res.Domains))
		for i, val := range res.Domains {
			body.Domains[i] = val
		}
	}
	if res.AttributesMapping != nil {
		body.AttributesMapping = make(map[string]string, len(res.AttributesMapping))
		for key, val := range res.AttributesMapping {
			tk := key
			tv := val
			body.AttributesMapping[tk] = tv
		}
	}
	return body
}

// NewUpdateIdentityProviderResponseBody builds the HTTP response body from the
// result of the "update_identity_provider" endpoint of the "sso" service.
func NewUpdateIdentityProviderResponseBody(res *sso.IdentityProviderResponse) *UpdateIdentityProviderResponseBody {
	body := &UpdateIdentityProviderResponseBody{
		ID:                    res.ID,
		Name:                  res.Name,
		OrganizationID:        res.OrganizationID,
		ProviderType:          res.ProviderType,
		ClientID:              res.ClientID,
		Issuer:                res.Issuer,
		AuthorizationEndpoint: res.AuthorizationEndpoint,
		TokenEndpoint:         res.TokenEndpoint,
		UserinfoEndpoint:      res.UserinfoEndpoint,
		JwksURI:               res.JwksURI,
		MetadataURL:           res.MetadataURL,
		RedirectURI:           res.RedirectURI,
		Active:                res.Active,
		Primary:               res.Primary,
		CreatedAt:             res.CreatedAt,
		UpdatedAt:             res.UpdatedAt,
	}
	if res.Domains != nil {
		body.Domains = make([]string, len(res.Domains))
		for i, val := range res.Domains {
			body.Domains[i] = val
		}
	}
	if res.AttributesMapping != nil {
		body.AttributesMapping = make(map[string]string, len(res.AttributesMapping))
		for key, val := range res.AttributesMapping {
			tk := key
			tv := val
			body.AttributesMapping[tk] = tv
		}
	}
	return body
}

// NewSamlMetadataResponseBody builds the HTTP response body from the result of
// the "saml_metadata" endpoint of the "sso" service.
func NewSamlMetadataResponseBody(res *sso.SamlMetadataResult) *SamlMetadataResponseBody {
	body := &SamlMetadataResponseBody{
		Metadata: res.Metadata,
	}
	return body
}

// NewListProvidersBadRequestResponseBody builds the HTTP response body from
// the result of the "list_providers" endpoint of the "sso" service.
func NewListProvidersBadRequestResponseBody(res *sso.BadRequestError) *ListProvidersBadRequestResponseBody {
	body := &ListProvidersBadRequestResponseBody{
		Code:    res.Code,
		Message: res.Message,
		Details: res.Details,
		ID:      res.ID,
	}
	return body
}

// NewListProvidersConflictResponseBody builds the HTTP response body from the
// result of the "list_providers" endpoint of the "sso" service.
func NewListProvidersConflictResponseBody(res *sso.ConflictError) *ListProvidersConflictResponseBody {
	body := &ListProvidersConflictResponseBody{
		Code:    res.Code,
		Message: res.Message,
		Details: res.Details,
		ID:      res.ID,
	}
	return body
}

// NewListProvidersForbiddenResponseBody builds the HTTP response body from the
// result of the "list_providers" endpoint of the "sso" service.
func NewListProvidersForbiddenResponseBody(res *sso.ForbiddenError) *ListProvidersForbiddenResponseBody {
	body := &ListProvidersForbiddenResponseBody{
		Code:    res.Code,
		Message: res.Message,
		Details: res.Details,
		ID:      res.ID,
	}
	return body
}

// NewListProvidersInternalErrorResponseBody builds the HTTP response body from
// the result of the "list_providers" endpoint of the "sso" service.
func NewListProvidersInternalErrorResponseBody(res *sso.InternalServerError) *ListProvidersInternalErrorResponseBody {
	body := &ListProvidersInternalErrorResponseBody{
		Code:    res.Code,
		Message: res.Message,
		Details: res.Details,
		ID:      res.ID,
	}
	return body
}

// NewListProvidersNotFoundResponseBody builds the HTTP response body from the
// result of the "list_providers" endpoint of the "sso" service.
func NewListProvidersNotFoundResponseBody(res *sso.NotFoundError) *ListProvidersNotFoundResponseBody {
	body := &ListProvidersNotFoundResponseBody{
		Code:    res.Code,
		Message: res.Message,
		Details: res.Details,
		ID:      res.ID,
	}
	return body
}

// NewListProvidersUnauthorizedResponseBody builds the HTTP response body from
// the result of the "list_providers" endpoint of the "sso" service.
func NewListProvidersUnauthorizedResponseBody(res *sso.UnauthorizedError) *ListProvidersUnauthorizedResponseBody {
	body := &ListProvidersUnauthorizedResponseBody{
		Code:    res.Code,
		Message: res.Message,
		Details: res.Details,
		ID:      res.ID,
	}
	return body
}

// NewProviderAuthBadRequestResponseBody builds the HTTP response body from the
// result of the "provider_auth" endpoint of the "sso" service.
func NewProviderAuthBadRequestResponseBody(res *sso.BadRequestError) *ProviderAuthBadRequestResponseBody {
	body := &ProviderAuthBadRequestResponseBody{
		Code:    res.Code,
		Message: res.Message,
		Details: res.Details,
		ID:      res.ID,
	}
	return body
}

// NewProviderAuthConflictResponseBody builds the HTTP response body from the
// result of the "provider_auth" endpoint of the "sso" service.
func NewProviderAuthConflictResponseBody(res *sso.ConflictError) *ProviderAuthConflictResponseBody {
	body := &ProviderAuthConflictResponseBody{
		Code:    res.Code,
		Message: res.Message,
		Details: res.Details,
		ID:      res.ID,
	}
	return body
}

// NewProviderAuthForbiddenResponseBody builds the HTTP response body from the
// result of the "provider_auth" endpoint of the "sso" service.
func NewProviderAuthForbiddenResponseBody(res *sso.ForbiddenError) *ProviderAuthForbiddenResponseBody {
	body := &ProviderAuthForbiddenResponseBody{
		Code:    res.Code,
		Message: res.Message,
		Details: res.Details,
		ID:      res.ID,
	}
	return body
}

// NewProviderAuthInternalErrorResponseBody builds the HTTP response body from
// the result of the "provider_auth" endpoint of the "sso" service.
func NewProviderAuthInternalErrorResponseBody(res *sso.InternalServerError) *ProviderAuthInternalErrorResponseBody {
	body := &ProviderAuthInternalErrorResponseBody{
		Code:    res.Code,
		Message: res.Message,
		Details: res.Details,
		ID:      res.ID,
	}
	return body
}

// NewProviderAuthNotFoundResponseBody builds the HTTP response body from the
// result of the "provider_auth" endpoint of the "sso" service.
func NewProviderAuthNotFoundResponseBody(res *sso.NotFoundError) *ProviderAuthNotFoundResponseBody {
	body := &ProviderAuthNotFoundResponseBody{
		Code:    res.Code,
		Message: res.Message,
		Details: res.Details,
		ID:      res.ID,
	}
	return body
}

// NewProviderAuthUnauthorizedResponseBody builds the HTTP response body from
// the result of the "provider_auth" endpoint of the "sso" service.
func NewProviderAuthUnauthorizedResponseBody(res *sso.UnauthorizedError) *ProviderAuthUnauthorizedResponseBody {
	body := &ProviderAuthUnauthorizedResponseBody{
		Code:    res.Code,
		Message: res.Message,
		Details: res.Details,
		ID:      res.ID,
	}
	return body
}

// NewProviderCallbackBadRequestResponseBody builds the HTTP response body from
// the result of the "provider_callback" endpoint of the "sso" service.
func NewProviderCallbackBadRequestResponseBody(res *sso.BadRequestError) *ProviderCallbackBadRequestResponseBody {
	body := &ProviderCallbackBadRequestResponseBody{
		Code:    res.Code,
		Message: res.Message,
		Details: res.Details,
		ID:      res.ID,
	}
	return body
}

// NewProviderCallbackConflictResponseBody builds the HTTP response body from
// the result of the "provider_callback" endpoint of the "sso" service.
func NewProviderCallbackConflictResponseBody(res *sso.ConflictError) *ProviderCallbackConflictResponseBody {
	body := &ProviderCallbackConflictResponseBody{
		Code:    res.Code,
		Message: res.Message,
		Details: res.Details,
		ID:      res.ID,
	}
	return body
}

// NewProviderCallbackForbiddenResponseBody builds the HTTP response body from
// the result of the "provider_callback" endpoint of the "sso" service.
func NewProviderCallbackForbiddenResponseBody(res *sso.ForbiddenError) *ProviderCallbackForbiddenResponseBody {
	body := &ProviderCallbackForbiddenResponseBody{
		Code:    res.Code,
		Message: res.Message,
		Details: res.Details,
		ID:      res.ID,
	}
	return body
}

// NewProviderCallbackInternalErrorResponseBody builds the HTTP response body
// from the result of the "provider_callback" endpoint of the "sso" service.
func NewProviderCallbackInternalErrorResponseBody(res *sso.InternalServerError) *ProviderCallbackInternalErrorResponseBody {
	body := &ProviderCallbackInternalErrorResponseBody{
		Code:    res.Code,
		Message: res.Message,
		Details: res.Details,
		ID:      res.ID,
	}
	return body
}

// NewProviderCallbackNotFoundResponseBody builds the HTTP response body from
// the result of the "provider_callback" endpoint of the "sso" service.
func NewProviderCallbackNotFoundResponseBody(res *sso.NotFoundError) *ProviderCallbackNotFoundResponseBody {
	body := &ProviderCallbackNotFoundResponseBody{
		Code:    res.Code,
		Message: res.Message,
		Details: res.Details,
		ID:      res.ID,
	}
	return body
}

// NewProviderCallbackUnauthorizedResponseBody builds the HTTP response body
// from the result of the "provider_callback" endpoint of the "sso" service.
func NewProviderCallbackUnauthorizedResponseBody(res *sso.UnauthorizedError) *ProviderCallbackUnauthorizedResponseBody {
	body := &ProviderCallbackUnauthorizedResponseBody{
		Code:    res.Code,
		Message: res.Message,
		Details: res.Details,
		ID:      res.ID,
	}
	return body
}

// NewListIdentityProvidersBadRequestResponseBody builds the HTTP response body
// from the result of the "list_identity_providers" endpoint of the "sso"
// service.
func NewListIdentityProvidersBadRequestResponseBody(res *sso.BadRequestError) *ListIdentityProvidersBadRequestResponseBody {
	body := &ListIdentityProvidersBadRequestResponseBody{
		Code:    res.Code,
		Message: res.Message,
		Details: res.Details,
		ID:      res.ID,
	}
	return body
}

// NewListIdentityProvidersConflictResponseBody builds the HTTP response body
// from the result of the "list_identity_providers" endpoint of the "sso"
// service.
func NewListIdentityProvidersConflictResponseBody(res *sso.ConflictError) *ListIdentityProvidersConflictResponseBody {
	body := &ListIdentityProvidersConflictResponseBody{
		Code:    res.Code,
		Message: res.Message,
		Details: res.Details,
		ID:      res.ID,
	}
	return body
}

// NewListIdentityProvidersForbiddenResponseBody builds the HTTP response body
// from the result of the "list_identity_providers" endpoint of the "sso"
// service.
func NewListIdentityProvidersForbiddenResponseBody(res *sso.ForbiddenError) *ListIdentityProvidersForbiddenResponseBody {
	body := &ListIdentityProvidersForbiddenResponseBody{
		Code:    res.Code,
		Message: res.Message,
		Details: res.Details,
		ID:      res.ID,
	}
	return body
}

// NewListIdentityProvidersInternalErrorResponseBody builds the HTTP response
// body from the result of the "list_identity_providers" endpoint of the "sso"
// service.
func NewListIdentityProvidersInternalErrorResponseBody(res *sso.InternalServerError) *ListIdentityProvidersInternalErrorResponseBody {
	body := &ListIdentityProvidersInternalErrorResponseBody{
		Code:    res.Code,
		Message: res.Message,
		Details: res.Details,
		ID:      res.ID,
	}
	return body
}

// NewListIdentityProvidersNotFoundResponseBody builds the HTTP response body
// from the result of the "list_identity_providers" endpoint of the "sso"
// service.
func NewListIdentityProvidersNotFoundResponseBody(res *sso.NotFoundError) *ListIdentityProvidersNotFoundResponseBody {
	body := &ListIdentityProvidersNotFoundResponseBody{
		Code:    res.Code,
		Message: res.Message,
		Details: res.Details,
		ID:      res.ID,
	}
	return body
}

// NewListIdentityProvidersUnauthorizedResponseBody builds the HTTP response
// body from the result of the "list_identity_providers" endpoint of the "sso"
// service.
func NewListIdentityProvidersUnauthorizedResponseBody(res *sso.UnauthorizedError) *ListIdentityProvidersUnauthorizedResponseBody {
	body := &ListIdentityProvidersUnauthorizedResponseBody{
		Code:    res.Code,
		Message: res.Message,
		Details: res.Details,
		ID:      res.ID,
	}
	return body
}

// NewCreateIdentityProviderBadRequestResponseBody builds the HTTP response
// body from the result of the "create_identity_provider" endpoint of the "sso"
// service.
func NewCreateIdentityProviderBadRequestResponseBody(res *sso.BadRequestError) *CreateIdentityProviderBadRequestResponseBody {
	body := &CreateIdentityProviderBadRequestResponseBody{
		Code:    res.Code,
		Message: res.Message,
		Details: res.Details,
		ID:      res.ID,
	}
	return body
}

// NewCreateIdentityProviderConflictResponseBody builds the HTTP response body
// from the result of the "create_identity_provider" endpoint of the "sso"
// service.
func NewCreateIdentityProviderConflictResponseBody(res *sso.ConflictError) *CreateIdentityProviderConflictResponseBody {
	body := &CreateIdentityProviderConflictResponseBody{
		Code:    res.Code,
		Message: res.Message,
		Details: res.Details,
		ID:      res.ID,
	}
	return body
}

// NewCreateIdentityProviderForbiddenResponseBody builds the HTTP response body
// from the result of the "create_identity_provider" endpoint of the "sso"
// service.
func NewCreateIdentityProviderForbiddenResponseBody(res *sso.ForbiddenError) *CreateIdentityProviderForbiddenResponseBody {
	body := &CreateIdentityProviderForbiddenResponseBody{
		Code:    res.Code,
		Message: res.Message,
		Details: res.Details,
		ID:      res.ID,
	}
	return body
}

// NewCreateIdentityProviderInternalErrorResponseBody builds the HTTP response
// body from the result of the "create_identity_provider" endpoint of the "sso"
// service.
func NewCreateIdentityProviderInternalErrorResponseBody(res *sso.InternalServerError) *CreateIdentityProviderInternalErrorResponseBody {
	body := &CreateIdentityProviderInternalErrorResponseBody{
		Code:    res.Code,
		Message: res.Message,
		Details: res.Details,
		ID:      res.ID,
	}
	return body
}

// NewCreateIdentityProviderNotFoundResponseBody builds the HTTP response body
// from the result of the "create_identity_provider" endpoint of the "sso"
// service.
func NewCreateIdentityProviderNotFoundResponseBody(res *sso.NotFoundError) *CreateIdentityProviderNotFoundResponseBody {
	body := &CreateIdentityProviderNotFoundResponseBody{
		Code:    res.Code,
		Message: res.Message,
		Details: res.Details,
		ID:      res.ID,
	}
	return body
}

// NewCreateIdentityProviderUnauthorizedResponseBody builds the HTTP response
// body from the result of the "create_identity_provider" endpoint of the "sso"
// service.
func NewCreateIdentityProviderUnauthorizedResponseBody(res *sso.UnauthorizedError) *CreateIdentityProviderUnauthorizedResponseBody {
	body := &CreateIdentityProviderUnauthorizedResponseBody{
		Code:    res.Code,
		Message: res.Message,
		Details: res.Details,
		ID:      res.ID,
	}
	return body
}

// NewGetIdentityProviderBadRequestResponseBody builds the HTTP response body
// from the result of the "get_identity_provider" endpoint of the "sso" service.
func NewGetIdentityProviderBadRequestResponseBody(res *sso.BadRequestError) *GetIdentityProviderBadRequestResponseBody {
	body := &GetIdentityProviderBadRequestResponseBody{
		Code:    res.Code,
		Message: res.Message,
		Details: res.Details,
		ID:      res.ID,
	}
	return body
}

// NewGetIdentityProviderConflictResponseBody builds the HTTP response body
// from the result of the "get_identity_provider" endpoint of the "sso" service.
func NewGetIdentityProviderConflictResponseBody(res *sso.ConflictError) *GetIdentityProviderConflictResponseBody {
	body := &GetIdentityProviderConflictResponseBody{
		Code:    res.Code,
		Message: res.Message,
		Details: res.Details,
		ID:      res.ID,
	}
	return body
}

// NewGetIdentityProviderForbiddenResponseBody builds the HTTP response body
// from the result of the "get_identity_provider" endpoint of the "sso" service.
func NewGetIdentityProviderForbiddenResponseBody(res *sso.ForbiddenError) *GetIdentityProviderForbiddenResponseBody {
	body := &GetIdentityProviderForbiddenResponseBody{
		Code:    res.Code,
		Message: res.Message,
		Details: res.Details,
		ID:      res.ID,
	}
	return body
}

// NewGetIdentityProviderInternalErrorResponseBody builds the HTTP response
// body from the result of the "get_identity_provider" endpoint of the "sso"
// service.
func NewGetIdentityProviderInternalErrorResponseBody(res *sso.InternalServerError) *GetIdentityProviderInternalErrorResponseBody {
	body := &GetIdentityProviderInternalErrorResponseBody{
		Code:    res.Code,
		Message: res.Message,
		Details: res.Details,
		ID:      res.ID,
	}
	return body
}

// NewGetIdentityProviderNotFoundResponseBody builds the HTTP response body
// from the result of the "get_identity_provider" endpoint of the "sso" service.
func NewGetIdentityProviderNotFoundResponseBody(res *sso.NotFoundError) *GetIdentityProviderNotFoundResponseBody {
	body := &GetIdentityProviderNotFoundResponseBody{
		Code:    res.Code,
		Message: res.Message,
		Details: res.Details,
		ID:      res.ID,
	}
	return body
}

// NewGetIdentityProviderUnauthorizedResponseBody builds the HTTP response body
// from the result of the "get_identity_provider" endpoint of the "sso" service.
func NewGetIdentityProviderUnauthorizedResponseBody(res *sso.UnauthorizedError) *GetIdentityProviderUnauthorizedResponseBody {
	body := &GetIdentityProviderUnauthorizedResponseBody{
		Code:    res.Code,
		Message: res.Message,
		Details: res.Details,
		ID:      res.ID,
	}
	return body
}

// NewUpdateIdentityProviderBadRequestResponseBody builds the HTTP response
// body from the result of the "update_identity_provider" endpoint of the "sso"
// service.
func NewUpdateIdentityProviderBadRequestResponseBody(res *sso.BadRequestError) *UpdateIdentityProviderBadRequestResponseBody {
	body := &UpdateIdentityProviderBadRequestResponseBody{
		Code:    res.Code,
		Message: res.Message,
		Details: res.Details,
		ID:      res.ID,
	}
	return body
}

// NewUpdateIdentityProviderConflictResponseBody builds the HTTP response body
// from the result of the "update_identity_provider" endpoint of the "sso"
// service.
func NewUpdateIdentityProviderConflictResponseBody(res *sso.ConflictError) *UpdateIdentityProviderConflictResponseBody {
	body := &UpdateIdentityProviderConflictResponseBody{
		Code:    res.Code,
		Message: res.Message,
		Details: res.Details,
		ID:      res.ID,
	}
	return body
}

// NewUpdateIdentityProviderForbiddenResponseBody builds the HTTP response body
// from the result of the "update_identity_provider" endpoint of the "sso"
// service.
func NewUpdateIdentityProviderForbiddenResponseBody(res *sso.ForbiddenError) *UpdateIdentityProviderForbiddenResponseBody {
	body := &UpdateIdentityProviderForbiddenResponseBody{
		Code:    res.Code,
		Message: res.Message,
		Details: res.Details,
		ID:      res.ID,
	}
	return body
}

// NewUpdateIdentityProviderInternalErrorResponseBody builds the HTTP response
// body from the result of the "update_identity_provider" endpoint of the "sso"
// service.
func NewUpdateIdentityProviderInternalErrorResponseBody(res *sso.InternalServerError) *UpdateIdentityProviderInternalErrorResponseBody {
	body := &UpdateIdentityProviderInternalErrorResponseBody{
		Code:    res.Code,
		Message: res.Message,
		Details: res.Details,
		ID:      res.ID,
	}
	return body
}

// NewUpdateIdentityProviderNotFoundResponseBody builds the HTTP response body
// from the result of the "update_identity_provider" endpoint of the "sso"
// service.
func NewUpdateIdentityProviderNotFoundResponseBody(res *sso.NotFoundError) *UpdateIdentityProviderNotFoundResponseBody {
	body := &UpdateIdentityProviderNotFoundResponseBody{
		Code:    res.Code,
		Message: res.Message,
		Details: res.Details,
		ID:      res.ID,
	}
	return body
}

// NewUpdateIdentityProviderUnauthorizedResponseBody builds the HTTP response
// body from the result of the "update_identity_provider" endpoint of the "sso"
// service.
func NewUpdateIdentityProviderUnauthorizedResponseBody(res *sso.UnauthorizedError) *UpdateIdentityProviderUnauthorizedResponseBody {
	body := &UpdateIdentityProviderUnauthorizedResponseBody{
		Code:    res.Code,
		Message: res.Message,
		Details: res.Details,
		ID:      res.ID,
	}
	return body
}

// NewDeleteIdentityProviderBadRequestResponseBody builds the HTTP response
// body from the result of the "delete_identity_provider" endpoint of the "sso"
// service.
func NewDeleteIdentityProviderBadRequestResponseBody(res *sso.BadRequestError) *DeleteIdentityProviderBadRequestResponseBody {
	body := &DeleteIdentityProviderBadRequestResponseBody{
		Code:    res.Code,
		Message: res.Message,
		Details: res.Details,
		ID:      res.ID,
	}
	return body
}

// NewDeleteIdentityProviderConflictResponseBody builds the HTTP response body
// from the result of the "delete_identity_provider" endpoint of the "sso"
// service.
func NewDeleteIdentityProviderConflictResponseBody(res *sso.ConflictError) *DeleteIdentityProviderConflictResponseBody {
	body := &DeleteIdentityProviderConflictResponseBody{
		Code:    res.Code,
		Message: res.Message,
		Details: res.Details,
		ID:      res.ID,
	}
	return body
}

// NewDeleteIdentityProviderForbiddenResponseBody builds the HTTP response body
// from the result of the "delete_identity_provider" endpoint of the "sso"
// service.
func NewDeleteIdentityProviderForbiddenResponseBody(res *sso.ForbiddenError) *DeleteIdentityProviderForbiddenResponseBody {
	body := &DeleteIdentityProviderForbiddenResponseBody{
		Code:    res.Code,
		Message: res.Message,
		Details: res.Details,
		ID:      res.ID,
	}
	return body
}

// NewDeleteIdentityProviderInternalErrorResponseBody builds the HTTP response
// body from the result of the "delete_identity_provider" endpoint of the "sso"
// service.
func NewDeleteIdentityProviderInternalErrorResponseBody(res *sso.InternalServerError) *DeleteIdentityProviderInternalErrorResponseBody {
	body := &DeleteIdentityProviderInternalErrorResponseBody{
		Code:    res.Code,
		Message: res.Message,
		Details: res.Details,
		ID:      res.ID,
	}
	return body
}

// NewDeleteIdentityProviderNotFoundResponseBody builds the HTTP response body
// from the result of the "delete_identity_provider" endpoint of the "sso"
// service.
func NewDeleteIdentityProviderNotFoundResponseBody(res *sso.NotFoundError) *DeleteIdentityProviderNotFoundResponseBody {
	body := &DeleteIdentityProviderNotFoundResponseBody{
		Code:    res.Code,
		Message: res.Message,
		Details: res.Details,
		ID:      res.ID,
	}
	return body
}

// NewDeleteIdentityProviderUnauthorizedResponseBody builds the HTTP response
// body from the result of the "delete_identity_provider" endpoint of the "sso"
// service.
func NewDeleteIdentityProviderUnauthorizedResponseBody(res *sso.UnauthorizedError) *DeleteIdentityProviderUnauthorizedResponseBody {
	body := &DeleteIdentityProviderUnauthorizedResponseBody{
		Code:    res.Code,
		Message: res.Message,
		Details: res.Details,
		ID:      res.ID,
	}
	return body
}

// NewSamlMetadataBadRequestResponseBody builds the HTTP response body from the
// result of the "saml_metadata" endpoint of the "sso" service.
func NewSamlMetadataBadRequestResponseBody(res *sso.BadRequestError) *SamlMetadataBadRequestResponseBody {
	body := &SamlMetadataBadRequestResponseBody{
		Code:    res.Code,
		Message: res.Message,
		Details: res.Details,
		ID:      res.ID,
	}
	return body
}

// NewSamlMetadataConflictResponseBody builds the HTTP response body from the
// result of the "saml_metadata" endpoint of the "sso" service.
func NewSamlMetadataConflictResponseBody(res *sso.ConflictError) *SamlMetadataConflictResponseBody {
	body := &SamlMetadataConflictResponseBody{
		Code:    res.Code,
		Message: res.Message,
		Details: res.Details,
		ID:      res.ID,
	}
	return body
}

// NewSamlMetadataForbiddenResponseBody builds the HTTP response body from the
// result of the "saml_metadata" endpoint of the "sso" service.
func NewSamlMetadataForbiddenResponseBody(res *sso.ForbiddenError) *SamlMetadataForbiddenResponseBody {
	body := &SamlMetadataForbiddenResponseBody{
		Code:    res.Code,
		Message: res.Message,
		Details: res.Details,
		ID:      res.ID,
	}
	return body
}

// NewSamlMetadataInternalErrorResponseBody builds the HTTP response body from
// the result of the "saml_metadata" endpoint of the "sso" service.
func NewSamlMetadataInternalErrorResponseBody(res *sso.InternalServerError) *SamlMetadataInternalErrorResponseBody {
	body := &SamlMetadataInternalErrorResponseBody{
		Code:    res.Code,
		Message: res.Message,
		Details: res.Details,
		ID:      res.ID,
	}
	return body
}

// NewSamlMetadataNotFoundResponseBody builds the HTTP response body from the
// result of the "saml_metadata" endpoint of the "sso" service.
func NewSamlMetadataNotFoundResponseBody(res *sso.NotFoundError) *SamlMetadataNotFoundResponseBody {
	body := &SamlMetadataNotFoundResponseBody{
		Code:    res.Code,
		Message: res.Message,
		Details: res.Details,
		ID:      res.ID,
	}
	return body
}

// NewSamlMetadataUnauthorizedResponseBody builds the HTTP response body from
// the result of the "saml_metadata" endpoint of the "sso" service.
func NewSamlMetadataUnauthorizedResponseBody(res *sso.UnauthorizedError) *SamlMetadataUnauthorizedResponseBody {
	body := &SamlMetadataUnauthorizedResponseBody{
		Code:    res.Code,
		Message: res.Message,
		Details: res.Details,
		ID:      res.ID,
	}
	return body
}

// NewSamlAcsBadRequestResponseBody builds the HTTP response body from the
// result of the "saml_acs" endpoint of the "sso" service.
func NewSamlAcsBadRequestResponseBody(res *sso.BadRequestError) *SamlAcsBadRequestResponseBody {
	body := &SamlAcsBadRequestResponseBody{
		Code:    res.Code,
		Message: res.Message,
		Details: res.Details,
		ID:      res.ID,
	}
	return body
}

// NewSamlAcsConflictResponseBody builds the HTTP response body from the result
// of the "saml_acs" endpoint of the "sso" service.
func NewSamlAcsConflictResponseBody(res *sso.ConflictError) *SamlAcsConflictResponseBody {
	body := &SamlAcsConflictResponseBody{
		Code:    res.Code,
		Message: res.Message,
		Details: res.Details,
		ID:      res.ID,
	}
	return body
}

// NewSamlAcsForbiddenResponseBody builds the HTTP response body from the
// result of the "saml_acs" endpoint of the "sso" service.
func NewSamlAcsForbiddenResponseBody(res *sso.ForbiddenError) *SamlAcsForbiddenResponseBody {
	body := &SamlAcsForbiddenResponseBody{
		Code:    res.Code,
		Message: res.Message,
		Details: res.Details,
		ID:      res.ID,
	}
	return body
}

// NewSamlAcsInternalErrorResponseBody builds the HTTP response body from the
// result of the "saml_acs" endpoint of the "sso" service.
func NewSamlAcsInternalErrorResponseBody(res *sso.InternalServerError) *SamlAcsInternalErrorResponseBody {
	body := &SamlAcsInternalErrorResponseBody{
		Code:    res.Code,
		Message: res.Message,
		Details: res.Details,
		ID:      res.ID,
	}
	return body
}

// NewSamlAcsNotFoundResponseBody builds the HTTP response body from the result
// of the "saml_acs" endpoint of the "sso" service.
func NewSamlAcsNotFoundResponseBody(res *sso.NotFoundError) *SamlAcsNotFoundResponseBody {
	body := &SamlAcsNotFoundResponseBody{
		Code:    res.Code,
		Message: res.Message,
		Details: res.Details,
		ID:      res.ID,
	}
	return body
}

// NewSamlAcsUnauthorizedResponseBody builds the HTTP response body from the
// result of the "saml_acs" endpoint of the "sso" service.
func NewSamlAcsUnauthorizedResponseBody(res *sso.UnauthorizedError) *SamlAcsUnauthorizedResponseBody {
	body := &SamlAcsUnauthorizedResponseBody{
		Code:    res.Code,
		Message: res.Message,
		Details: res.Details,
		ID:      res.ID,
	}
	return body
}

// NewListProvidersPayload builds a sso service list_providers endpoint payload.
func NewListProvidersPayload(organizationID *string, oauth2 *string, xAPIKey *string, jwt *string) *sso.ListProvidersPayload {
	v := &sso.ListProvidersPayload{}
	v.OrganizationID = organizationID
	v.Oauth2 = oauth2
	v.XAPIKey = xAPIKey
	v.JWT = jwt

	return v
}

// NewProviderAuthPayload builds a sso service provider_auth endpoint payload.
func NewProviderAuthPayload(provider string, redirectURI *string, oauth2 *string, xAPIKey *string, jwt *string) *sso.ProviderAuthPayload {
	v := &sso.ProviderAuthPayload{}
	v.Provider = provider
	v.RedirectURI = redirectURI
	v.Oauth2 = oauth2
	v.XAPIKey = xAPIKey
	v.JWT = jwt

	return v
}

// NewProviderCallbackPayload builds a sso service provider_callback endpoint
// payload.
func NewProviderCallbackPayload(provider string, code *string, state *string, sAMLResponse *string, relayState *string, oauth2 *string, xAPIKey *string, jwt *string) *sso.ProviderCallbackPayload {
	v := &sso.ProviderCallbackPayload{}
	v.Provider = provider
	v.Code = code
	v.State = state
	v.SAMLResponse = sAMLResponse
	v.RelayState = relayState
	v.Oauth2 = oauth2
	v.XAPIKey = xAPIKey
	v.JWT = jwt

	return v
}

// NewListIdentityProvidersPayload builds a sso service list_identity_providers
// endpoint payload.
func NewListIdentityProvidersPayload(organizationID string, jwt *string) *sso.ListIdentityProvidersPayload {
	v := &sso.ListIdentityProvidersPayload{}
	v.OrganizationID = organizationID
	v.JWT = jwt

	return v
}

// NewCreateIdentityProviderPayload builds a sso service
// create_identity_provider endpoint payload.
func NewCreateIdentityProviderPayload(body *CreateIdentityProviderRequestBody, jwt *string) *sso.CreateIdentityProviderPayload {
	v := &sso.CreateIdentityProviderPayload{
		OrganizationID: *body.OrganizationID,
	}
	v.Provider = unmarshalCreateIdentityProviderRequestRequestBodyToSsoCreateIdentityProviderRequest(body.Provider)
	v.JWT = jwt

	return v
}

// NewGetIdentityProviderPayload builds a sso service get_identity_provider
// endpoint payload.
func NewGetIdentityProviderPayload(id string, jwt *string) *sso.GetIdentityProviderPayload {
	v := &sso.GetIdentityProviderPayload{}
	v.ID = id
	v.JWT = jwt

	return v
}

// NewUpdateIdentityProviderPayload builds a sso service
// update_identity_provider endpoint payload.
func NewUpdateIdentityProviderPayload(body *UpdateIdentityProviderRequestBody, id string, jwt *string) *sso.UpdateIdentityProviderPayload {
	v := &sso.UpdateIdentityProviderPayload{}
	v.Provider = unmarshalUpdateIdentityProviderRequestRequestBodyToSsoUpdateIdentityProviderRequest(body.Provider)
	v.ID = id
	v.JWT = jwt

	return v
}

// NewDeleteIdentityProviderPayload builds a sso service
// delete_identity_provider endpoint payload.
func NewDeleteIdentityProviderPayload(id string, jwt *string) *sso.DeleteIdentityProviderPayload {
	v := &sso.DeleteIdentityProviderPayload{}
	v.ID = id
	v.JWT = jwt

	return v
}

// NewSamlMetadataPayload builds a sso service saml_metadata endpoint payload.
func NewSamlMetadataPayload(id string) *sso.SamlMetadataPayload {
	v := &sso.SamlMetadataPayload{}
	v.ID = id

	return v
}

// NewSamlAcsPayload builds a sso service saml_acs endpoint payload.
func NewSamlAcsPayload(id string) *sso.SamlAcsPayload {
	v := &sso.SamlAcsPayload{}
	v.ID = id

	return v
}

// ValidateCreateIdentityProviderRequestBody runs the validations defined on
// create_identity_provider_request_body
func ValidateCreateIdentityProviderRequestBody(body *CreateIdentityProviderRequestBody) (err error) {
	if body.OrganizationID == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("organization_id", "body"))
	}
	if body.Provider == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("provider", "body"))
	}
	if body.Provider != nil {
		if err2 := ValidateCreateIdentityProviderRequestRequestBody(body.Provider); err2 != nil {
			err = goa.MergeErrors(err, err2)
		}
	}
	return
}

// ValidateUpdateIdentityProviderRequestBody runs the validations defined on
// update_identity_provider_request_body
func ValidateUpdateIdentityProviderRequestBody(body *UpdateIdentityProviderRequestBody) (err error) {
	if body.Provider == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("provider", "body"))
	}
	return
}

// ValidateCreateIdentityProviderRequestRequestBody runs the validations
// defined on CreateIdentityProviderRequestRequestBody
func ValidateCreateIdentityProviderRequestRequestBody(body *CreateIdentityProviderRequestRequestBody) (err error) {
	if body.Name == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("name", "body"))
	}
	if body.ProviderType == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("provider_type", "body"))
	}
	if body.ProviderType != nil {
		if !(*body.ProviderType == "oauth2" || *body.ProviderType == "oidc" || *body.ProviderType == "saml") {
			err = goa.MergeErrors(err, goa.InvalidEnumValueError("body.provider_type", *body.ProviderType, []any{"oauth2", "oidc", "saml"}))
		}
	}
	return
}
