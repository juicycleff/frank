// Code generated by goa v3.20.0, DO NOT EDIT.
//
// oauth_client HTTP server types
//
// Command:
// $ goa gen github.com/juicycleff/frank/design -o .

package server

import (
	oauthclient "github.com/juicycleff/frank/gen/oauth_client"
)

// ListProvidersResponseBody is the type of the "oauth_client" service
// "list_providers" endpoint HTTP response body.
type ListProvidersResponseBody struct {
	Providers []*SSOProviderResponseBody `form:"providers" json:"providers" xml:"providers"`
}

// ProviderCallbackResponseBody is the type of the "oauth_client" service
// "provider_callback" endpoint HTTP response body.
type ProviderCallbackResponseBody struct {
	// Whether authentication was successful
	Authenticated bool `form:"authenticated" json:"authenticated" xml:"authenticated"`
	// User data if authentication successful
	User *UserResponseBody `form:"user,omitempty" json:"user,omitempty" xml:"user,omitempty"`
	// Success or error message
	Message string `form:"message" json:"message" xml:"message"`
}

// ListProvidersBadRequestResponseBody is the type of the "oauth_client"
// service "list_providers" endpoint HTTP response body for the "bad_request"
// error.
type ListProvidersBadRequestResponseBody struct {
	// Error code
	Code string `form:"code" json:"code" xml:"code"`
	// Error message
	Message string `form:"message" json:"message" xml:"message"`
	// Additional error details
	Details any `form:"details,omitempty" json:"details,omitempty" xml:"details,omitempty"`
	// Unique error ID
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
}

// ListProvidersForbiddenResponseBody is the type of the "oauth_client" service
// "list_providers" endpoint HTTP response body for the "forbidden" error.
type ListProvidersForbiddenResponseBody struct {
	// Error code
	Code string `form:"code" json:"code" xml:"code"`
	// Error message
	Message string `form:"message" json:"message" xml:"message"`
	// Additional error details
	Details any `form:"details,omitempty" json:"details,omitempty" xml:"details,omitempty"`
	// Unique error ID
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
}

// ListProvidersInternalErrorResponseBody is the type of the "oauth_client"
// service "list_providers" endpoint HTTP response body for the
// "internal_error" error.
type ListProvidersInternalErrorResponseBody struct {
	// Error code
	Code string `form:"code" json:"code" xml:"code"`
	// Error message
	Message string `form:"message" json:"message" xml:"message"`
	// Additional error details
	Details any `form:"details,omitempty" json:"details,omitempty" xml:"details,omitempty"`
	// Unique error ID
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
}

// ListProvidersNotFoundResponseBody is the type of the "oauth_client" service
// "list_providers" endpoint HTTP response body for the "not_found" error.
type ListProvidersNotFoundResponseBody struct {
	// Error code
	Code string `form:"code" json:"code" xml:"code"`
	// Error message
	Message string `form:"message" json:"message" xml:"message"`
	// Additional error details
	Details any `form:"details,omitempty" json:"details,omitempty" xml:"details,omitempty"`
	// Unique error ID
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
}

// ListProvidersUnauthorizedResponseBody is the type of the "oauth_client"
// service "list_providers" endpoint HTTP response body for the "unauthorized"
// error.
type ListProvidersUnauthorizedResponseBody struct {
	// Error code
	Code string `form:"code" json:"code" xml:"code"`
	// Error message
	Message string `form:"message" json:"message" xml:"message"`
	// Additional error details
	Details any `form:"details,omitempty" json:"details,omitempty" xml:"details,omitempty"`
	// Unique error ID
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
}

// ProviderAuthBadRequestResponseBody is the type of the "oauth_client" service
// "provider_auth" endpoint HTTP response body for the "bad_request" error.
type ProviderAuthBadRequestResponseBody struct {
	// Error code
	Code string `form:"code" json:"code" xml:"code"`
	// Error message
	Message string `form:"message" json:"message" xml:"message"`
	// Additional error details
	Details any `form:"details,omitempty" json:"details,omitempty" xml:"details,omitempty"`
	// Unique error ID
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
}

// ProviderAuthForbiddenResponseBody is the type of the "oauth_client" service
// "provider_auth" endpoint HTTP response body for the "forbidden" error.
type ProviderAuthForbiddenResponseBody struct {
	// Error code
	Code string `form:"code" json:"code" xml:"code"`
	// Error message
	Message string `form:"message" json:"message" xml:"message"`
	// Additional error details
	Details any `form:"details,omitempty" json:"details,omitempty" xml:"details,omitempty"`
	// Unique error ID
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
}

// ProviderAuthInternalErrorResponseBody is the type of the "oauth_client"
// service "provider_auth" endpoint HTTP response body for the "internal_error"
// error.
type ProviderAuthInternalErrorResponseBody struct {
	// Error code
	Code string `form:"code" json:"code" xml:"code"`
	// Error message
	Message string `form:"message" json:"message" xml:"message"`
	// Additional error details
	Details any `form:"details,omitempty" json:"details,omitempty" xml:"details,omitempty"`
	// Unique error ID
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
}

// ProviderAuthNotFoundResponseBody is the type of the "oauth_client" service
// "provider_auth" endpoint HTTP response body for the "not_found" error.
type ProviderAuthNotFoundResponseBody struct {
	// Error code
	Code string `form:"code" json:"code" xml:"code"`
	// Error message
	Message string `form:"message" json:"message" xml:"message"`
	// Additional error details
	Details any `form:"details,omitempty" json:"details,omitempty" xml:"details,omitempty"`
	// Unique error ID
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
}

// ProviderAuthUnauthorizedResponseBody is the type of the "oauth_client"
// service "provider_auth" endpoint HTTP response body for the "unauthorized"
// error.
type ProviderAuthUnauthorizedResponseBody struct {
	// Error code
	Code string `form:"code" json:"code" xml:"code"`
	// Error message
	Message string `form:"message" json:"message" xml:"message"`
	// Additional error details
	Details any `form:"details,omitempty" json:"details,omitempty" xml:"details,omitempty"`
	// Unique error ID
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
}

// ProviderCallbackBadRequestResponseBody is the type of the "oauth_client"
// service "provider_callback" endpoint HTTP response body for the
// "bad_request" error.
type ProviderCallbackBadRequestResponseBody struct {
	// Error code
	Code string `form:"code" json:"code" xml:"code"`
	// Error message
	Message string `form:"message" json:"message" xml:"message"`
	// Additional error details
	Details any `form:"details,omitempty" json:"details,omitempty" xml:"details,omitempty"`
	// Unique error ID
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
}

// ProviderCallbackForbiddenResponseBody is the type of the "oauth_client"
// service "provider_callback" endpoint HTTP response body for the "forbidden"
// error.
type ProviderCallbackForbiddenResponseBody struct {
	// Error code
	Code string `form:"code" json:"code" xml:"code"`
	// Error message
	Message string `form:"message" json:"message" xml:"message"`
	// Additional error details
	Details any `form:"details,omitempty" json:"details,omitempty" xml:"details,omitempty"`
	// Unique error ID
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
}

// ProviderCallbackInternalErrorResponseBody is the type of the "oauth_client"
// service "provider_callback" endpoint HTTP response body for the
// "internal_error" error.
type ProviderCallbackInternalErrorResponseBody struct {
	// Error code
	Code string `form:"code" json:"code" xml:"code"`
	// Error message
	Message string `form:"message" json:"message" xml:"message"`
	// Additional error details
	Details any `form:"details,omitempty" json:"details,omitempty" xml:"details,omitempty"`
	// Unique error ID
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
}

// ProviderCallbackNotFoundResponseBody is the type of the "oauth_client"
// service "provider_callback" endpoint HTTP response body for the "not_found"
// error.
type ProviderCallbackNotFoundResponseBody struct {
	// Error code
	Code string `form:"code" json:"code" xml:"code"`
	// Error message
	Message string `form:"message" json:"message" xml:"message"`
	// Additional error details
	Details any `form:"details,omitempty" json:"details,omitempty" xml:"details,omitempty"`
	// Unique error ID
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
}

// ProviderCallbackUnauthorizedResponseBody is the type of the "oauth_client"
// service "provider_callback" endpoint HTTP response body for the
// "unauthorized" error.
type ProviderCallbackUnauthorizedResponseBody struct {
	// Error code
	Code string `form:"code" json:"code" xml:"code"`
	// Error message
	Message string `form:"message" json:"message" xml:"message"`
	// Additional error details
	Details any `form:"details,omitempty" json:"details,omitempty" xml:"details,omitempty"`
	// Unique error ID
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
}

// SSOProviderResponseBody is used to define fields on response body types.
type SSOProviderResponseBody struct {
	// Provider ID
	ID string `form:"id" json:"id" xml:"id"`
	// Provider name
	Name string `form:"name" json:"name" xml:"name"`
	// Provider type (oauth2, oidc, saml)
	Type string `form:"type" json:"type" xml:"type"`
	// Provider icon URL
	IconURL *string `form:"icon_url,omitempty" json:"icon_url,omitempty" xml:"icon_url,omitempty"`
}

// UserResponseBody is used to define fields on response body types.
type UserResponseBody struct {
	// Whether account is active
	Active bool `form:"active" json:"active" xml:"active"`
	// Whether email is verified
	EmailVerified bool `json:"email_verified,emailVerified"`
	// Whether phone is verified
	PhoneVerified *bool `json:"phone_verified,phoneVerified"`
	// URL to user's profile image
	ProfileImageURL *string `json:"profile_image_url,profileImageUrl"`
	// User first name
	FirstName *string `json:"first_name,firstName"`
	// User last name
	LastName *string `json:"last_name,lastName"`
	// User phone number
	PhoneNumber *string `json:"phone_number,phoneNumber"`
	// User metadata
	Metadata map[string]any `json:"metadata"`
	// User locale
	Locale string `json:"locale"`
	// Email address
	Email string `json:"email"`
}

// NewListProvidersResponseBody builds the HTTP response body from the result
// of the "list_providers" endpoint of the "oauth_client" service.
func NewListProvidersResponseBody(res *oauthclient.ListProvidersResult) *ListProvidersResponseBody {
	body := &ListProvidersResponseBody{}
	if res.Providers != nil {
		body.Providers = make([]*SSOProviderResponseBody, len(res.Providers))
		for i, val := range res.Providers {
			body.Providers[i] = marshalOauthclientSSOProviderToSSOProviderResponseBody(val)
		}
	} else {
		body.Providers = []*SSOProviderResponseBody{}
	}
	return body
}

// NewProviderCallbackResponseBody builds the HTTP response body from the
// result of the "provider_callback" endpoint of the "oauth_client" service.
func NewProviderCallbackResponseBody(res *oauthclient.ProviderCallbackResult) *ProviderCallbackResponseBody {
	body := &ProviderCallbackResponseBody{
		Authenticated: res.Authenticated,
		Message:       res.Message,
	}
	if res.User != nil {
		body.User = marshalDesigntypesUserToUserResponseBody(res.User)
	}
	return body
}

// NewListProvidersBadRequestResponseBody builds the HTTP response body from
// the result of the "list_providers" endpoint of the "oauth_client" service.
func NewListProvidersBadRequestResponseBody(res *oauthclient.BadRequestError) *ListProvidersBadRequestResponseBody {
	body := &ListProvidersBadRequestResponseBody{
		Code:    res.Code,
		Message: res.Message,
		Details: res.Details,
		ID:      res.ID,
	}
	return body
}

// NewListProvidersForbiddenResponseBody builds the HTTP response body from the
// result of the "list_providers" endpoint of the "oauth_client" service.
func NewListProvidersForbiddenResponseBody(res *oauthclient.ForbiddenError) *ListProvidersForbiddenResponseBody {
	body := &ListProvidersForbiddenResponseBody{
		Code:    res.Code,
		Message: res.Message,
		Details: res.Details,
		ID:      res.ID,
	}
	return body
}

// NewListProvidersInternalErrorResponseBody builds the HTTP response body from
// the result of the "list_providers" endpoint of the "oauth_client" service.
func NewListProvidersInternalErrorResponseBody(res *oauthclient.InternalServerError) *ListProvidersInternalErrorResponseBody {
	body := &ListProvidersInternalErrorResponseBody{
		Code:    res.Code,
		Message: res.Message,
		Details: res.Details,
		ID:      res.ID,
	}
	return body
}

// NewListProvidersNotFoundResponseBody builds the HTTP response body from the
// result of the "list_providers" endpoint of the "oauth_client" service.
func NewListProvidersNotFoundResponseBody(res *oauthclient.NotFoundError) *ListProvidersNotFoundResponseBody {
	body := &ListProvidersNotFoundResponseBody{
		Code:    res.Code,
		Message: res.Message,
		Details: res.Details,
		ID:      res.ID,
	}
	return body
}

// NewListProvidersUnauthorizedResponseBody builds the HTTP response body from
// the result of the "list_providers" endpoint of the "oauth_client" service.
func NewListProvidersUnauthorizedResponseBody(res *oauthclient.UnauthorizedError) *ListProvidersUnauthorizedResponseBody {
	body := &ListProvidersUnauthorizedResponseBody{
		Code:    res.Code,
		Message: res.Message,
		Details: res.Details,
		ID:      res.ID,
	}
	return body
}

// NewProviderAuthBadRequestResponseBody builds the HTTP response body from the
// result of the "provider_auth" endpoint of the "oauth_client" service.
func NewProviderAuthBadRequestResponseBody(res *oauthclient.BadRequestError) *ProviderAuthBadRequestResponseBody {
	body := &ProviderAuthBadRequestResponseBody{
		Code:    res.Code,
		Message: res.Message,
		Details: res.Details,
		ID:      res.ID,
	}
	return body
}

// NewProviderAuthForbiddenResponseBody builds the HTTP response body from the
// result of the "provider_auth" endpoint of the "oauth_client" service.
func NewProviderAuthForbiddenResponseBody(res *oauthclient.ForbiddenError) *ProviderAuthForbiddenResponseBody {
	body := &ProviderAuthForbiddenResponseBody{
		Code:    res.Code,
		Message: res.Message,
		Details: res.Details,
		ID:      res.ID,
	}
	return body
}

// NewProviderAuthInternalErrorResponseBody builds the HTTP response body from
// the result of the "provider_auth" endpoint of the "oauth_client" service.
func NewProviderAuthInternalErrorResponseBody(res *oauthclient.InternalServerError) *ProviderAuthInternalErrorResponseBody {
	body := &ProviderAuthInternalErrorResponseBody{
		Code:    res.Code,
		Message: res.Message,
		Details: res.Details,
		ID:      res.ID,
	}
	return body
}

// NewProviderAuthNotFoundResponseBody builds the HTTP response body from the
// result of the "provider_auth" endpoint of the "oauth_client" service.
func NewProviderAuthNotFoundResponseBody(res *oauthclient.NotFoundError) *ProviderAuthNotFoundResponseBody {
	body := &ProviderAuthNotFoundResponseBody{
		Code:    res.Code,
		Message: res.Message,
		Details: res.Details,
		ID:      res.ID,
	}
	return body
}

// NewProviderAuthUnauthorizedResponseBody builds the HTTP response body from
// the result of the "provider_auth" endpoint of the "oauth_client" service.
func NewProviderAuthUnauthorizedResponseBody(res *oauthclient.UnauthorizedError) *ProviderAuthUnauthorizedResponseBody {
	body := &ProviderAuthUnauthorizedResponseBody{
		Code:    res.Code,
		Message: res.Message,
		Details: res.Details,
		ID:      res.ID,
	}
	return body
}

// NewProviderCallbackBadRequestResponseBody builds the HTTP response body from
// the result of the "provider_callback" endpoint of the "oauth_client" service.
func NewProviderCallbackBadRequestResponseBody(res *oauthclient.BadRequestError) *ProviderCallbackBadRequestResponseBody {
	body := &ProviderCallbackBadRequestResponseBody{
		Code:    res.Code,
		Message: res.Message,
		Details: res.Details,
		ID:      res.ID,
	}
	return body
}

// NewProviderCallbackForbiddenResponseBody builds the HTTP response body from
// the result of the "provider_callback" endpoint of the "oauth_client" service.
func NewProviderCallbackForbiddenResponseBody(res *oauthclient.ForbiddenError) *ProviderCallbackForbiddenResponseBody {
	body := &ProviderCallbackForbiddenResponseBody{
		Code:    res.Code,
		Message: res.Message,
		Details: res.Details,
		ID:      res.ID,
	}
	return body
}

// NewProviderCallbackInternalErrorResponseBody builds the HTTP response body
// from the result of the "provider_callback" endpoint of the "oauth_client"
// service.
func NewProviderCallbackInternalErrorResponseBody(res *oauthclient.InternalServerError) *ProviderCallbackInternalErrorResponseBody {
	body := &ProviderCallbackInternalErrorResponseBody{
		Code:    res.Code,
		Message: res.Message,
		Details: res.Details,
		ID:      res.ID,
	}
	return body
}

// NewProviderCallbackNotFoundResponseBody builds the HTTP response body from
// the result of the "provider_callback" endpoint of the "oauth_client" service.
func NewProviderCallbackNotFoundResponseBody(res *oauthclient.NotFoundError) *ProviderCallbackNotFoundResponseBody {
	body := &ProviderCallbackNotFoundResponseBody{
		Code:    res.Code,
		Message: res.Message,
		Details: res.Details,
		ID:      res.ID,
	}
	return body
}

// NewProviderCallbackUnauthorizedResponseBody builds the HTTP response body
// from the result of the "provider_callback" endpoint of the "oauth_client"
// service.
func NewProviderCallbackUnauthorizedResponseBody(res *oauthclient.UnauthorizedError) *ProviderCallbackUnauthorizedResponseBody {
	body := &ProviderCallbackUnauthorizedResponseBody{
		Code:    res.Code,
		Message: res.Message,
		Details: res.Details,
		ID:      res.ID,
	}
	return body
}

// NewListProvidersPayload builds a oauth_client service list_providers
// endpoint payload.
func NewListProvidersPayload(oauth2 *string, xAPIKey *string, jwt *string) *oauthclient.ListProvidersPayload {
	v := &oauthclient.ListProvidersPayload{}
	v.Oauth2 = oauth2
	v.XAPIKey = xAPIKey
	v.JWT = jwt

	return v
}

// NewProviderAuthPayload builds a oauth_client service provider_auth endpoint
// payload.
func NewProviderAuthPayload(provider string, redirectURI *string, oauth2 *string, xAPIKey *string, jwt *string) *oauthclient.ProviderAuthPayload {
	v := &oauthclient.ProviderAuthPayload{}
	v.Provider = provider
	v.RedirectURI = redirectURI
	v.Oauth2 = oauth2
	v.XAPIKey = xAPIKey
	v.JWT = jwt

	return v
}

// NewProviderCallbackPayload builds a oauth_client service provider_callback
// endpoint payload.
func NewProviderCallbackPayload(provider string, code *string, state *string, oauth2 *string, xAPIKey *string, jwt *string) *oauthclient.ProviderCallbackPayload {
	v := &oauthclient.ProviderCallbackPayload{}
	v.Provider = provider
	v.Code = code
	v.State = state
	v.Oauth2 = oauth2
	v.XAPIKey = xAPIKey
	v.JWT = jwt

	return v
}
