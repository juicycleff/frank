// Code generated by goa v3.20.0, DO NOT EDIT.
//
// organizations client
//
// Command:
// $ goa gen github.com/juicycleff/frank/design -o .

package organizations

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "organizations" service client.
type Client struct {
	ListEndpoint           goa.Endpoint
	CreateEndpoint         goa.Endpoint
	GetEndpoint            goa.Endpoint
	UpdateEndpoint         goa.Endpoint
	DeleteEndpoint         goa.Endpoint
	ListMembersEndpoint    goa.Endpoint
	AddMemberEndpoint      goa.Endpoint
	UpdateMemberEndpoint   goa.Endpoint
	RemoveMemberEndpoint   goa.Endpoint
	ListFeaturesEndpoint   goa.Endpoint
	EnableFeatureEndpoint  goa.Endpoint
	DisableFeatureEndpoint goa.Endpoint
}

// NewClient initializes a "organizations" service client given the endpoints.
func NewClient(list, create, get, update, delete_, listMembers, addMember, updateMember, removeMember, listFeatures, enableFeature, disableFeature goa.Endpoint) *Client {
	return &Client{
		ListEndpoint:           list,
		CreateEndpoint:         create,
		GetEndpoint:            get,
		UpdateEndpoint:         update,
		DeleteEndpoint:         delete_,
		ListMembersEndpoint:    listMembers,
		AddMemberEndpoint:      addMember,
		UpdateMemberEndpoint:   updateMember,
		RemoveMemberEndpoint:   removeMember,
		ListFeaturesEndpoint:   listFeatures,
		EnableFeatureEndpoint:  enableFeature,
		DisableFeatureEndpoint: disableFeature,
	}
}

// List calls the "list" endpoint of the "organizations" service.
// List may return the following errors:
//   - "unauthorized" (type *UnauthorizedError)
//   - "bad_request" (type *BadRequestError)
//   - "forbidden" (type *ForbiddenError)
//   - "not_found" (type *NotFoundError)
//   - "conflict" (type *ConflictError)
//   - "internal_error" (type *InternalServerError)
//   - error: internal error
func (c *Client) List(ctx context.Context, p *ListPayload) (res *ListResult, err error) {
	var ires any
	ires, err = c.ListEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*ListResult), nil
}

// Create calls the "create" endpoint of the "organizations" service.
// Create may return the following errors:
//   - "bad_request" (type *BadRequestError)
//   - "unauthorized" (type *UnauthorizedError)
//   - "conflict" (type *ConflictError): Organization with this slug or domain already exists
//   - "forbidden" (type *ForbiddenError)
//   - "not_found" (type *NotFoundError)
//   - "internal_error" (type *InternalServerError)
//   - error: internal error
func (c *Client) Create(ctx context.Context, p *CreatePayload) (res *OrganizationResponse, err error) {
	var ires any
	ires, err = c.CreateEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*OrganizationResponse), nil
}

// Get calls the "get" endpoint of the "organizations" service.
// Get may return the following errors:
//   - "not_found" (type *NotFoundError)
//   - "unauthorized" (type *UnauthorizedError)
//   - "bad_request" (type *BadRequestError)
//   - "forbidden" (type *ForbiddenError)
//   - "conflict" (type *ConflictError)
//   - "internal_error" (type *InternalServerError)
//   - error: internal error
func (c *Client) Get(ctx context.Context, p *GetPayload) (res *OrganizationResponse, err error) {
	var ires any
	ires, err = c.GetEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*OrganizationResponse), nil
}

// Update calls the "update" endpoint of the "organizations" service.
// Update may return the following errors:
//   - "bad_request" (type *BadRequestError)
//   - "not_found" (type *NotFoundError)
//   - "unauthorized" (type *UnauthorizedError)
//   - "forbidden" (type *ForbiddenError)
//   - "conflict" (type *ConflictError)
//   - "internal_error" (type *InternalServerError)
//   - error: internal error
func (c *Client) Update(ctx context.Context, p *UpdatePayload) (res *OrganizationResponse, err error) {
	var ires any
	ires, err = c.UpdateEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*OrganizationResponse), nil
}

// Delete calls the "delete" endpoint of the "organizations" service.
// Delete may return the following errors:
//   - "not_found" (type *NotFoundError)
//   - "unauthorized" (type *UnauthorizedError)
//   - "forbidden" (type *ForbiddenError)
//   - "bad_request" (type *BadRequestError)
//   - "conflict" (type *ConflictError)
//   - "internal_error" (type *InternalServerError)
//   - error: internal error
func (c *Client) Delete(ctx context.Context, p *DeletePayload) (err error) {
	_, err = c.DeleteEndpoint(ctx, p)
	return
}

// ListMembers calls the "list_members" endpoint of the "organizations" service.
// ListMembers may return the following errors:
//   - "not_found" (type *NotFoundError)
//   - "unauthorized" (type *UnauthorizedError)
//   - "forbidden" (type *ForbiddenError)
//   - "bad_request" (type *BadRequestError)
//   - "conflict" (type *ConflictError)
//   - "internal_error" (type *InternalServerError)
//   - error: internal error
func (c *Client) ListMembers(ctx context.Context, p *ListMembersPayload) (res *ListMembersResult, err error) {
	var ires any
	ires, err = c.ListMembersEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*ListMembersResult), nil
}

// AddMember calls the "add_member" endpoint of the "organizations" service.
// AddMember may return the following errors:
//   - "bad_request" (type *BadRequestError)
//   - "not_found" (type *NotFoundError)
//   - "unauthorized" (type *UnauthorizedError)
//   - "forbidden" (type *ForbiddenError)
//   - "conflict" (type *ConflictError)
//   - "internal_error" (type *InternalServerError)
//   - error: internal error
func (c *Client) AddMember(ctx context.Context, p *AddMemberPayload) (res *AddMemberResult, err error) {
	var ires any
	ires, err = c.AddMemberEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*AddMemberResult), nil
}

// UpdateMember calls the "update_member" endpoint of the "organizations"
// service.
// UpdateMember may return the following errors:
//   - "bad_request" (type *BadRequestError)
//   - "not_found" (type *NotFoundError)
//   - "unauthorized" (type *UnauthorizedError)
//   - "forbidden" (type *ForbiddenError)
//   - "conflict" (type *ConflictError)
//   - "internal_error" (type *InternalServerError)
//   - error: internal error
func (c *Client) UpdateMember(ctx context.Context, p *UpdateMemberPayload) (res *UpdateMemberResult, err error) {
	var ires any
	ires, err = c.UpdateMemberEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*UpdateMemberResult), nil
}

// RemoveMember calls the "remove_member" endpoint of the "organizations"
// service.
// RemoveMember may return the following errors:
//   - "not_found" (type *NotFoundError)
//   - "unauthorized" (type *UnauthorizedError)
//   - "forbidden" (type *ForbiddenError)
//   - "bad_request" (type *BadRequestError)
//   - "conflict" (type *ConflictError)
//   - "internal_error" (type *InternalServerError)
//   - error: internal error
func (c *Client) RemoveMember(ctx context.Context, p *RemoveMemberPayload) (err error) {
	_, err = c.RemoveMemberEndpoint(ctx, p)
	return
}

// ListFeatures calls the "list_features" endpoint of the "organizations"
// service.
// ListFeatures may return the following errors:
//   - "not_found" (type *NotFoundError)
//   - "unauthorized" (type *UnauthorizedError)
//   - "forbidden" (type *ForbiddenError)
//   - "bad_request" (type *BadRequestError)
//   - "conflict" (type *ConflictError)
//   - "internal_error" (type *InternalServerError)
//   - error: internal error
func (c *Client) ListFeatures(ctx context.Context, p *ListFeaturesPayload) (res *ListFeaturesResult, err error) {
	var ires any
	ires, err = c.ListFeaturesEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*ListFeaturesResult), nil
}

// EnableFeature calls the "enable_feature" endpoint of the "organizations"
// service.
// EnableFeature may return the following errors:
//   - "bad_request" (type *BadRequestError)
//   - "not_found" (type *NotFoundError)
//   - "unauthorized" (type *UnauthorizedError)
//   - "forbidden" (type *ForbiddenError)
//   - "conflict" (type *ConflictError)
//   - "internal_error" (type *InternalServerError)
//   - error: internal error
func (c *Client) EnableFeature(ctx context.Context, p *EnableFeaturePayload) (res *EnableFeatureResult, err error) {
	var ires any
	ires, err = c.EnableFeatureEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*EnableFeatureResult), nil
}

// DisableFeature calls the "disable_feature" endpoint of the "organizations"
// service.
// DisableFeature may return the following errors:
//   - "not_found" (type *NotFoundError)
//   - "unauthorized" (type *UnauthorizedError)
//   - "forbidden" (type *ForbiddenError)
//   - "bad_request" (type *BadRequestError)
//   - "conflict" (type *ConflictError)
//   - "internal_error" (type *InternalServerError)
//   - error: internal error
func (c *Client) DisableFeature(ctx context.Context, p *DisableFeaturePayload) (err error) {
	_, err = c.DisableFeatureEndpoint(ctx, p)
	return
}
