// Code generated by goa v3.20.0, DO NOT EDIT.
//
// users client
//
// Command:
// $ goa gen github.com/juicycleff/frank/design -o .

package users

import (
	"context"

	designtypes "github.com/juicycleff/frank/gen/designtypes"
	goa "goa.design/goa/v3/pkg"
)

// Client is the "users" service client.
type Client struct {
	ListEndpoint             goa.Endpoint
	CreateEndpoint           goa.Endpoint
	GetEndpoint              goa.Endpoint
	UpdateEndpoint           goa.Endpoint
	DeleteEndpoint           goa.Endpoint
	UpdateMeEndpoint         goa.Endpoint
	UpdatePasswordEndpoint   goa.Endpoint
	GetSessionsEndpoint      goa.Endpoint
	DeleteSessionEndpoint    goa.Endpoint
	GetOrganizationsEndpoint goa.Endpoint
}

// NewClient initializes a "users" service client given the endpoints.
func NewClient(list, create, get, update, delete_, updateMe, updatePassword, getSessions, deleteSession, getOrganizations goa.Endpoint) *Client {
	return &Client{
		ListEndpoint:             list,
		CreateEndpoint:           create,
		GetEndpoint:              get,
		UpdateEndpoint:           update,
		DeleteEndpoint:           delete_,
		UpdateMeEndpoint:         updateMe,
		UpdatePasswordEndpoint:   updatePassword,
		GetSessionsEndpoint:      getSessions,
		DeleteSessionEndpoint:    deleteSession,
		GetOrganizationsEndpoint: getOrganizations,
	}
}

// List calls the "list" endpoint of the "users" service.
// List may return the following errors:
//   - "unauthorized" (type *UnauthorizedError)
//   - "forbidden" (type *ForbiddenError)
//   - "bad_request" (type *BadRequestError)
//   - "not_found" (type *NotFoundError)
//   - "conflict" (type *ConflictError)
//   - "internal_error" (type *InternalServerError)
//   - error: internal error
func (c *Client) List(ctx context.Context, p *ListPayload) (res *ListResult, err error) {
	var ires any
	ires, err = c.ListEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*ListResult), nil
}

// Create calls the "create" endpoint of the "users" service.
// Create may return the following errors:
//   - "bad_request" (type *BadRequestError)
//   - "unauthorized" (type *UnauthorizedError): User must be an admin to create users
//   - "forbidden" (type *ForbiddenError): User must be an admin to create users
//   - "conflict" (type *ConflictError): User with this email already exists
//   - "not_found" (type *NotFoundError)
//   - "internal_error" (type *InternalServerError)
//   - error: internal error
func (c *Client) Create(ctx context.Context, p *CreatePayload) (res *designtypes.User, err error) {
	var ires any
	ires, err = c.CreateEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*designtypes.User), nil
}

// Get calls the "get" endpoint of the "users" service.
// Get may return the following errors:
//   - "not_found" (type *goa.ServiceError)
//   - "unauthorized" (type *goa.ServiceError)
//   - "forbidden" (type *goa.ServiceError)
//   - "bad_request" (type *BadRequestError)
//   - "conflict" (type *ConflictError)
//   - "internal_error" (type *InternalServerError)
//   - error: internal error
func (c *Client) Get(ctx context.Context, p *GetPayload) (res *designtypes.User, err error) {
	var ires any
	ires, err = c.GetEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*designtypes.User), nil
}

// Update calls the "update" endpoint of the "users" service.
// Update may return the following errors:
//   - "bad_request" (type *goa.ServiceError)
//   - "not_found" (type *goa.ServiceError)
//   - "unauthorized" (type *goa.ServiceError)
//   - "forbidden" (type *goa.ServiceError)
//   - "conflict" (type *ConflictError)
//   - "internal_error" (type *InternalServerError)
//   - error: internal error
func (c *Client) Update(ctx context.Context, p *UpdatePayload) (res *designtypes.User, err error) {
	var ires any
	ires, err = c.UpdateEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*designtypes.User), nil
}

// Delete calls the "delete" endpoint of the "users" service.
// Delete may return the following errors:
//   - "not_found" (type *goa.ServiceError)
//   - "unauthorized" (type *goa.ServiceError)
//   - "forbidden" (type *goa.ServiceError)
//   - "bad_request" (type *BadRequestError)
//   - "conflict" (type *ConflictError)
//   - "internal_error" (type *InternalServerError)
//   - error: internal error
func (c *Client) Delete(ctx context.Context, p *DeletePayload) (err error) {
	_, err = c.DeleteEndpoint(ctx, p)
	return
}

// UpdateMe calls the "update_me" endpoint of the "users" service.
// UpdateMe may return the following errors:
//   - "bad_request" (type *goa.ServiceError)
//   - "unauthorized" (type *goa.ServiceError)
//   - "forbidden" (type *ForbiddenError)
//   - "not_found" (type *NotFoundError)
//   - "conflict" (type *ConflictError)
//   - "internal_error" (type *InternalServerError)
//   - error: internal error
func (c *Client) UpdateMe(ctx context.Context, p *UpdateMePayload) (res *designtypes.User, err error) {
	var ires any
	ires, err = c.UpdateMeEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*designtypes.User), nil
}

// UpdatePassword calls the "update_password" endpoint of the "users" service.
// UpdatePassword may return the following errors:
//   - "bad_request" (type *BadRequestError)
//   - "unauthorized" (type *UnauthorizedError): Invalid current password
//   - "forbidden" (type *ForbiddenError): Password change not allowed
//   - "not_found" (type *NotFoundError)
//   - "conflict" (type *ConflictError)
//   - "internal_error" (type *InternalServerError)
//   - error: internal error
func (c *Client) UpdatePassword(ctx context.Context, p *UpdatePasswordPayload) (res *UpdatePasswordResult, err error) {
	var ires any
	ires, err = c.UpdatePasswordEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*UpdatePasswordResult), nil
}

// GetSessions calls the "get_sessions" endpoint of the "users" service.
// GetSessions may return the following errors:
//   - "unauthorized" (type *goa.ServiceError)
//   - "bad_request" (type *BadRequestError)
//   - "forbidden" (type *ForbiddenError)
//   - "not_found" (type *NotFoundError)
//   - "conflict" (type *ConflictError)
//   - "internal_error" (type *InternalServerError)
//   - error: internal error
func (c *Client) GetSessions(ctx context.Context, p *GetSessionsPayload) (res *GetUserSessionResponse, err error) {
	var ires any
	ires, err = c.GetSessionsEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*GetUserSessionResponse), nil
}

// DeleteSession calls the "delete_session" endpoint of the "users" service.
// DeleteSession may return the following errors:
//   - "not_found" (type *goa.ServiceError)
//   - "unauthorized" (type *goa.ServiceError)
//   - "forbidden" (type *goa.ServiceError)
//   - "bad_request" (type *BadRequestError)
//   - "conflict" (type *ConflictError)
//   - "internal_error" (type *InternalServerError)
//   - error: internal error
func (c *Client) DeleteSession(ctx context.Context, p *DeleteSessionPayload) (err error) {
	_, err = c.DeleteSessionEndpoint(ctx, p)
	return
}

// GetOrganizations calls the "get_organizations" endpoint of the "users"
// service.
// GetOrganizations may return the following errors:
//   - "not_found" (type *goa.ServiceError)
//   - "unauthorized" (type *goa.ServiceError)
//   - "forbidden" (type *goa.ServiceError)
//   - "bad_request" (type *BadRequestError)
//   - "conflict" (type *ConflictError)
//   - "internal_error" (type *InternalServerError)
//   - error: internal error
func (c *Client) GetOrganizations(ctx context.Context, p *GetOrganizationsPayload) (res *GetOrganizationsResult, err error) {
	var ires any
	ires, err = c.GetOrganizationsEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*GetOrganizationsResult), nil
}
