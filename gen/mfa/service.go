// Code generated by goa v3.20.0, DO NOT EDIT.
//
// mfa service
//
// Command:
// $ goa gen github.com/juicycleff/frank/design -o .

package mfa

import (
	"context"

	designtypes "github.com/juicycleff/frank/gen/designtypes"
	goa "goa.design/goa/v3/pkg"
	"goa.design/goa/v3/security"
)

// Multi-Factor Authentication service
type Service interface {
	// Start MFA enrollment
	Enroll(context.Context, *EnrollPayload) (res *EnrollResult, err error)
	// Verify MFA code
	Verify(context.Context, *VerifyPayload) (res *VerifyResult, err error)
	// Disable MFA method
	Unenroll(context.Context, *UnenrollPayload) (res *UnenrollResult, err error)
	// Get enabled MFA methods
	Methods(context.Context, *MethodsPayload) (res *MethodsResult, err error)
	// Send verification code
	SendCode(context.Context, *SendCodePayload) (res *SendCodeResult, err error)
}

// Auther defines the authorization functions to be implemented by the service.
type Auther interface {
	// JWTAuth implements the authorization logic for the JWT security scheme.
	JWTAuth(ctx context.Context, token string, schema *security.JWTScheme) (context.Context, error)
}

// APIName is the name of the API as defined in the design.
const APIName = "frank"

// APIVersion is the version of the API as defined in the design.
const APIVersion = "1.0.0"

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "mfa"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [5]string{"enroll", "verify", "unenroll", "methods", "send_code"}

// Bad request response
type BadRequestError struct {
	// Error code
	Code string
	// Error message
	Message string
	// Additional error details
	Details any
	// Unique error ID
	ID *string
}

// EnrollPayload is the payload type of the mfa service enroll method.
type EnrollPayload struct {
	JWT     *string
	Request *designtypes.MFAEnrollRequest
}

// EnrollResult is the result type of the mfa service enroll method.
type EnrollResult struct {
	Totp        *designtypes.TOTPEnrollResponse
	BackupCodes *designtypes.BackupCodesResponse
	// Success message for SMS/Email enrollment
	Message *string
}

// Forbidden response
type ForbiddenError struct {
	// Error code
	Code string
	// Error message
	Message string
	// Additional error details
	Details any
	// Unique error ID
	ID *string
}

// Internal server error response
type InternalServerError struct {
	// Error code
	Code string
	// Error message
	Message string
	// Additional error details
	Details any
	// Unique error ID
	ID *string
}

// MethodsPayload is the payload type of the mfa service methods method.
type MethodsPayload struct {
	JWT *string
}

// MethodsResult is the result type of the mfa service methods method.
type MethodsResult struct {
	// Enabled MFA methods
	Methods []string
}

// Not found response
type NotFoundError struct {
	// Error code
	Code string
	// Error message
	Message string
	// Additional error details
	Details any
	// Unique error ID
	ID *string
}

// SendCodePayload is the payload type of the mfa service send_code method.
type SendCodePayload struct {
	JWT     *string
	Request *designtypes.SendMFACodeRequest
}

// SendCodeResult is the result type of the mfa service send_code method.
type SendCodeResult struct {
	// Success message
	Message string
	// When the code expires
	ExpiresAt int64
}

// Unauthorized response
type UnauthorizedError struct {
	// Error code
	Code string
	// Error message
	Message string
	// Additional error details
	Details any
	// Unique error ID
	ID *string
}

// UnenrollPayload is the payload type of the mfa service unenroll method.
type UnenrollPayload struct {
	JWT     *string
	Request *designtypes.MFAUnEnrollRequest
}

// UnenrollResult is the result type of the mfa service unenroll method.
type UnenrollResult struct {
	// Success message
	Message string
}

// VerifyPayload is the payload type of the mfa service verify method.
type VerifyPayload struct {
	JWT     *string
	Request *designtypes.MFAVerifyRequest
}

// VerifyResult is the result type of the mfa service verify method.
type VerifyResult struct {
	// Whether verification was successful
	Verified bool
}

// Error returns an error description.
func (e *BadRequestError) Error() string {
	return "Bad request response"
}

// ErrorName returns "BadRequestError".
//
// Deprecated: Use GoaErrorName - https://github.com/goadesign/goa/issues/3105
func (e *BadRequestError) ErrorName() string {
	return e.GoaErrorName()
}

// GoaErrorName returns "BadRequestError".
func (e *BadRequestError) GoaErrorName() string {
	return "bad_request"
}

// Error returns an error description.
func (e *ForbiddenError) Error() string {
	return "Forbidden response"
}

// ErrorName returns "ForbiddenError".
//
// Deprecated: Use GoaErrorName - https://github.com/goadesign/goa/issues/3105
func (e *ForbiddenError) ErrorName() string {
	return e.GoaErrorName()
}

// GoaErrorName returns "ForbiddenError".
func (e *ForbiddenError) GoaErrorName() string {
	return "forbidden"
}

// Error returns an error description.
func (e *InternalServerError) Error() string {
	return "Internal server error response"
}

// ErrorName returns "InternalServerError".
//
// Deprecated: Use GoaErrorName - https://github.com/goadesign/goa/issues/3105
func (e *InternalServerError) ErrorName() string {
	return e.GoaErrorName()
}

// GoaErrorName returns "InternalServerError".
func (e *InternalServerError) GoaErrorName() string {
	return "internal_error"
}

// Error returns an error description.
func (e *NotFoundError) Error() string {
	return "Not found response"
}

// ErrorName returns "NotFoundError".
//
// Deprecated: Use GoaErrorName - https://github.com/goadesign/goa/issues/3105
func (e *NotFoundError) ErrorName() string {
	return e.GoaErrorName()
}

// GoaErrorName returns "NotFoundError".
func (e *NotFoundError) GoaErrorName() string {
	return "not_found"
}

// Error returns an error description.
func (e *UnauthorizedError) Error() string {
	return "Unauthorized response"
}

// ErrorName returns "UnauthorizedError".
//
// Deprecated: Use GoaErrorName - https://github.com/goadesign/goa/issues/3105
func (e *UnauthorizedError) ErrorName() string {
	return e.GoaErrorName()
}

// GoaErrorName returns "UnauthorizedError".
func (e *UnauthorizedError) GoaErrorName() string {
	return "unauthorized"
}

// MakeBadRequest builds a goa.ServiceError from an error.
func MakeBadRequest(err error) *goa.ServiceError {
	return goa.NewServiceError(err, "bad_request", false, false, false)
}

// MakeUnauthorized builds a goa.ServiceError from an error.
func MakeUnauthorized(err error) *goa.ServiceError {
	return goa.NewServiceError(err, "unauthorized", false, false, false)
}
