// Code generated by goa v3.20.0, DO NOT EDIT.
//
// webhooks service
//
// Command:
// $ goa gen github.com/juicycleff/frank/design -o .

package webhooks

import (
	"context"

	designtypes "github.com/juicycleff/frank/gen/designtypes"
	goa "goa.design/goa/v3/pkg"
	"goa.design/goa/v3/security"
)

// Webhook management service
type Service interface {
	// List webhooks
	List(context.Context, *ListPayload) (res *ListResult, err error)
	// Create a new webhook
	Create(context.Context, *CreatePayload) (res *WebhookSecretResponse, err error)
	// Get webhook by ID
	Get(context.Context, *GetPayload) (res *WebhookResponse, err error)
	// Update webhook
	Update(context.Context, *UpdatePayload) (res *WebhookResponse, err error)
	// Delete webhook
	Delete(context.Context, *DeletePayload) (err error)
	// Manually trigger a webhook event
	TriggerEvent(context.Context, *TriggerEventPayload) (res *WebhookEventResponse, err error)
	// List webhook events
	ListEvents(context.Context, *ListEventsPayload) (res *ListEventsResult, err error)
	// Replay a webhook event
	ReplayEvent(context.Context, *ReplayEventPayload) (res *WebhookEventResponse, err error)
	// Receive webhook callbacks from external sources
	Receive(context.Context, *ReceivePayload) (res *ReceiveResult, err error)
}

// Auther defines the authorization functions to be implemented by the service.
type Auther interface {
	// JWTAuth implements the authorization logic for the JWT security scheme.
	JWTAuth(ctx context.Context, token string, schema *security.JWTScheme) (context.Context, error)
}

// APIName is the name of the API as defined in the design.
const APIName = "frank"

// APIVersion is the version of the API as defined in the design.
const APIVersion = "1.0.0"

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "webhooks"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [9]string{"list", "create", "get", "update", "delete", "trigger_event", "list_events", "replay_event", "receive"}

// Bad request response
type BadRequestError struct {
	// Error code
	Code string
	// Error message
	Message string
	// Additional error details
	Details any
	// Unique error ID
	ID *string
}

// CreatePayload is the payload type of the webhooks service create method.
type CreatePayload struct {
	JWT *string
	// Organization ID
	OrganizationID string
	Webhook        *CreateWebhookRequest
}

// Create webhook request
type CreateWebhookRequest struct {
	// Webhook name
	Name string
	// Webhook URL
	URL string
	// Event types to subscribe to
	EventTypes []string
	// Number of retries on failure
	RetryCount int
	// Timeout in milliseconds
	TimeoutMs int
	// Payload format
	Format string
	// Webhook metadata
	Metadata map[string]any
}

// DeletePayload is the payload type of the webhooks service delete method.
type DeletePayload struct {
	JWT *string
	// Webhook ID
	ID string
}

// Forbidden response
type ForbiddenError struct {
	// Error code
	Code string
	// Error message
	Message string
	// Additional error details
	Details any
	// Unique error ID
	ID *string
}

// GetPayload is the payload type of the webhooks service get method.
type GetPayload struct {
	JWT *string
	// Webhook ID
	ID string
}

// Internal server error response
type InternalServerError struct {
	// Error code
	Code string
	// Error message
	Message string
	// Additional error details
	Details any
	// Unique error ID
	ID *string
}

// ListEventsPayload is the payload type of the webhooks service list_events
// method.
type ListEventsPayload struct {
	JWT *string
	// Webhook ID
	ID string
	// Pagination offset
	Offset int
	// Number of items to return
	Limit int
	// Filter by event type
	EventType *string
	// Filter by delivery status
	Delivered *bool
}

// ListEventsResult is the result type of the webhooks service list_events
// method.
type ListEventsResult struct {
	Data       []*WebhookEventResponse
	Pagination *designtypes.PaginationResponse
}

// ListPayload is the payload type of the webhooks service list method.
type ListPayload struct {
	JWT *string
	// Pagination offset
	Offset int
	// Number of items to return
	Limit int
	// Organization ID
	OrganizationID *string
	// Filter by event types
	EventTypes []string
}

// ListResult is the result type of the webhooks service list method.
type ListResult struct {
	Data       []*WebhookResponse
	Pagination *designtypes.PaginationResponse
}

// Not found response
type NotFoundError struct {
	// Error code
	Code string
	// Error message
	Message string
	// Additional error details
	Details any
	// Unique error ID
	ID *string
}

// ReceivePayload is the payload type of the webhooks service receive method.
type ReceivePayload struct {
	// Webhook receiver ID
	ID string
}

// ReceiveResult is the result type of the webhooks service receive method.
type ReceiveResult struct {
	// Success message
	Message string
}

// ReplayEventPayload is the payload type of the webhooks service replay_event
// method.
type ReplayEventPayload struct {
	JWT *string
	// Webhook ID
	ID string
	// Event ID
	EventID string
}

// TriggerEventPayload is the payload type of the webhooks service
// trigger_event method.
type TriggerEventPayload struct {
	JWT *string
	// Organization ID
	OrganizationID string
	Event          *TriggerEventRequest
}

// Trigger webhook event request
type TriggerEventRequest struct {
	// Event type
	EventType string
	// Event payload
	Payload any
	// Custom headers
	Headers map[string]string
}

// Unauthorized response
type UnauthorizedError struct {
	// Error code
	Code string
	// Error message
	Message string
	// Additional error details
	Details any
	// Unique error ID
	ID *string
}

// UpdatePayload is the payload type of the webhooks service update method.
type UpdatePayload struct {
	JWT *string
	// Webhook ID
	ID      string
	Webhook *UpdateWebhookRequest
}

// Update webhook request
type UpdateWebhookRequest struct {
	// Webhook name
	Name *string
	// Webhook URL
	URL *string
	// Whether webhook is active
	Active *bool
	// Event types to subscribe to
	EventTypes []string
	// Number of retries on failure
	RetryCount *int
	// Timeout in milliseconds
	TimeoutMs *int
	// Payload format
	Format *string
	// Webhook metadata
	Metadata map[string]any
}

// WebhookEventResponse is the result type of the webhooks service
// trigger_event method.
type WebhookEventResponse struct {
	// Event ID
	ID string
	// Webhook ID
	WebhookID string
	// Event type
	EventType string
	// Event payload
	Payload any
	// Event headers
	Headers map[string]string
	// Whether event was delivered
	Delivered bool
	// Delivery timestamp
	DeliveredAt *string
	// Number of delivery attempts
	Attempts int
	// Next retry timestamp
	NextRetry *string
	// HTTP status code from last attempt
	StatusCode *int
	// Response from last attempt
	ResponseBody *string
	// Error from last attempt
	Error *string
	// Creation timestamp
	CreatedAt string
	// Last update timestamp
	UpdatedAt *string
}

// WebhookResponse is the result type of the webhooks service get method.
type WebhookResponse struct {
	// Webhook ID
	ID string
	// Webhook name
	Name string
	// Webhook URL
	URL string
	// Organization ID
	OrganizationID string
	// Whether webhook is active
	Active bool
	// Event types webhook subscribes to
	EventTypes []string
	// Webhook version
	Version *string
	// Number of retries on failure
	RetryCount *int
	// Timeout in milliseconds
	TimeoutMs *int
	// Payload format (json/form)
	Format *string
	// Webhook metadata
	Metadata map[string]any
	// Creation timestamp
	CreatedAt string
	// Last update timestamp
	UpdatedAt *string
}

// WebhookSecretResponse is the result type of the webhooks service create
// method.
type WebhookSecretResponse struct {
	// Webhook secret for signature verification
	Secret string
	// Webhook ID
	ID string
	// Webhook name
	Name string
	// Webhook URL
	URL string
	// Organization ID
	OrganizationID string
	// Whether webhook is active
	Active bool
	// Event types webhook subscribes to
	EventTypes []string
	// Webhook version
	Version *string
	// Number of retries on failure
	RetryCount *int
	// Timeout in milliseconds
	TimeoutMs *int
	// Payload format (json/form)
	Format *string
	// Webhook metadata
	Metadata map[string]any
	// Creation timestamp
	CreatedAt string
	// Last update timestamp
	UpdatedAt *string
}

// Error returns an error description.
func (e *BadRequestError) Error() string {
	return "Bad request response"
}

// ErrorName returns "BadRequestError".
//
// Deprecated: Use GoaErrorName - https://github.com/goadesign/goa/issues/3105
func (e *BadRequestError) ErrorName() string {
	return e.GoaErrorName()
}

// GoaErrorName returns "BadRequestError".
func (e *BadRequestError) GoaErrorName() string {
	return "bad_request"
}

// Error returns an error description.
func (e *ForbiddenError) Error() string {
	return "Forbidden response"
}

// ErrorName returns "ForbiddenError".
//
// Deprecated: Use GoaErrorName - https://github.com/goadesign/goa/issues/3105
func (e *ForbiddenError) ErrorName() string {
	return e.GoaErrorName()
}

// GoaErrorName returns "ForbiddenError".
func (e *ForbiddenError) GoaErrorName() string {
	return "forbidden"
}

// Error returns an error description.
func (e *InternalServerError) Error() string {
	return "Internal server error response"
}

// ErrorName returns "InternalServerError".
//
// Deprecated: Use GoaErrorName - https://github.com/goadesign/goa/issues/3105
func (e *InternalServerError) ErrorName() string {
	return e.GoaErrorName()
}

// GoaErrorName returns "InternalServerError".
func (e *InternalServerError) GoaErrorName() string {
	return "internal_error"
}

// Error returns an error description.
func (e *NotFoundError) Error() string {
	return "Not found response"
}

// ErrorName returns "NotFoundError".
//
// Deprecated: Use GoaErrorName - https://github.com/goadesign/goa/issues/3105
func (e *NotFoundError) ErrorName() string {
	return e.GoaErrorName()
}

// GoaErrorName returns "NotFoundError".
func (e *NotFoundError) GoaErrorName() string {
	return "not_found"
}

// Error returns an error description.
func (e *UnauthorizedError) Error() string {
	return "Unauthorized response"
}

// ErrorName returns "UnauthorizedError".
//
// Deprecated: Use GoaErrorName - https://github.com/goadesign/goa/issues/3105
func (e *UnauthorizedError) ErrorName() string {
	return e.GoaErrorName()
}

// GoaErrorName returns "UnauthorizedError".
func (e *UnauthorizedError) GoaErrorName() string {
	return "unauthorized"
}

// MakeUnauthorized builds a goa.ServiceError from an error.
func MakeUnauthorized(err error) *goa.ServiceError {
	return goa.NewServiceError(err, "unauthorized", false, false, false)
}

// MakeBadRequest builds a goa.ServiceError from an error.
func MakeBadRequest(err error) *goa.ServiceError {
	return goa.NewServiceError(err, "bad_request", false, false, false)
}

// MakeForbidden builds a goa.ServiceError from an error.
func MakeForbidden(err error) *goa.ServiceError {
	return goa.NewServiceError(err, "forbidden", false, false, false)
}

// MakeNotFound builds a goa.ServiceError from an error.
func MakeNotFound(err error) *goa.ServiceError {
	return goa.NewServiceError(err, "not_found", false, false, false)
}
