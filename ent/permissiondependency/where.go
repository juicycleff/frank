// Copyright 2023-present XRaph LLC. All rights reserved.
// This source code is licensed under the XRaph LLC license found
// in the LICENSE file in the root directory of this source tree.
// Code generated by ent, DO NOT EDIT.

package permissiondependency

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"github.com/rs/xid"
	"github.com/xraph/frank/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id xid.ID) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id xid.ID) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id xid.ID) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...xid.ID) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...xid.ID) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id xid.ID) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id xid.ID) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id xid.ID) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id xid.ID) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldLTE(FieldID, id))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldEQ(FieldUpdatedAt, v))
}

// DeletedAt applies equality check predicate on the "deleted_at" field. It's identical to DeletedAtEQ.
func DeletedAt(v time.Time) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldEQ(FieldDeletedAt, v))
}

// PermissionID applies equality check predicate on the "permission_id" field. It's identical to PermissionIDEQ.
func PermissionID(v xid.ID) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldEQ(FieldPermissionID, v))
}

// RequiredPermissionID applies equality check predicate on the "required_permission_id" field. It's identical to RequiredPermissionIDEQ.
func RequiredPermissionID(v xid.ID) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldEQ(FieldRequiredPermissionID, v))
}

// Condition applies equality check predicate on the "condition" field. It's identical to ConditionEQ.
func Condition(v string) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldEQ(FieldCondition, v))
}

// Active applies equality check predicate on the "active" field. It's identical to ActiveEQ.
func Active(v bool) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldEQ(FieldActive, v))
}

// CreatedBy applies equality check predicate on the "created_by" field. It's identical to CreatedByEQ.
func CreatedBy(v string) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldEQ(FieldCreatedBy, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldLTE(FieldUpdatedAt, v))
}

// DeletedAtEQ applies the EQ predicate on the "deleted_at" field.
func DeletedAtEQ(v time.Time) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldEQ(FieldDeletedAt, v))
}

// DeletedAtNEQ applies the NEQ predicate on the "deleted_at" field.
func DeletedAtNEQ(v time.Time) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldNEQ(FieldDeletedAt, v))
}

// DeletedAtIn applies the In predicate on the "deleted_at" field.
func DeletedAtIn(vs ...time.Time) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldIn(FieldDeletedAt, vs...))
}

// DeletedAtNotIn applies the NotIn predicate on the "deleted_at" field.
func DeletedAtNotIn(vs ...time.Time) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldNotIn(FieldDeletedAt, vs...))
}

// DeletedAtGT applies the GT predicate on the "deleted_at" field.
func DeletedAtGT(v time.Time) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldGT(FieldDeletedAt, v))
}

// DeletedAtGTE applies the GTE predicate on the "deleted_at" field.
func DeletedAtGTE(v time.Time) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldGTE(FieldDeletedAt, v))
}

// DeletedAtLT applies the LT predicate on the "deleted_at" field.
func DeletedAtLT(v time.Time) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldLT(FieldDeletedAt, v))
}

// DeletedAtLTE applies the LTE predicate on the "deleted_at" field.
func DeletedAtLTE(v time.Time) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldLTE(FieldDeletedAt, v))
}

// DeletedAtIsNil applies the IsNil predicate on the "deleted_at" field.
func DeletedAtIsNil() predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldIsNull(FieldDeletedAt))
}

// DeletedAtNotNil applies the NotNil predicate on the "deleted_at" field.
func DeletedAtNotNil() predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldNotNull(FieldDeletedAt))
}

// PermissionIDEQ applies the EQ predicate on the "permission_id" field.
func PermissionIDEQ(v xid.ID) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldEQ(FieldPermissionID, v))
}

// PermissionIDNEQ applies the NEQ predicate on the "permission_id" field.
func PermissionIDNEQ(v xid.ID) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldNEQ(FieldPermissionID, v))
}

// PermissionIDIn applies the In predicate on the "permission_id" field.
func PermissionIDIn(vs ...xid.ID) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldIn(FieldPermissionID, vs...))
}

// PermissionIDNotIn applies the NotIn predicate on the "permission_id" field.
func PermissionIDNotIn(vs ...xid.ID) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldNotIn(FieldPermissionID, vs...))
}

// PermissionIDGT applies the GT predicate on the "permission_id" field.
func PermissionIDGT(v xid.ID) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldGT(FieldPermissionID, v))
}

// PermissionIDGTE applies the GTE predicate on the "permission_id" field.
func PermissionIDGTE(v xid.ID) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldGTE(FieldPermissionID, v))
}

// PermissionIDLT applies the LT predicate on the "permission_id" field.
func PermissionIDLT(v xid.ID) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldLT(FieldPermissionID, v))
}

// PermissionIDLTE applies the LTE predicate on the "permission_id" field.
func PermissionIDLTE(v xid.ID) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldLTE(FieldPermissionID, v))
}

// PermissionIDContains applies the Contains predicate on the "permission_id" field.
func PermissionIDContains(v xid.ID) predicate.PermissionDependency {
	vc := v.String()
	return predicate.PermissionDependency(sql.FieldContains(FieldPermissionID, vc))
}

// PermissionIDHasPrefix applies the HasPrefix predicate on the "permission_id" field.
func PermissionIDHasPrefix(v xid.ID) predicate.PermissionDependency {
	vc := v.String()
	return predicate.PermissionDependency(sql.FieldHasPrefix(FieldPermissionID, vc))
}

// PermissionIDHasSuffix applies the HasSuffix predicate on the "permission_id" field.
func PermissionIDHasSuffix(v xid.ID) predicate.PermissionDependency {
	vc := v.String()
	return predicate.PermissionDependency(sql.FieldHasSuffix(FieldPermissionID, vc))
}

// PermissionIDEqualFold applies the EqualFold predicate on the "permission_id" field.
func PermissionIDEqualFold(v xid.ID) predicate.PermissionDependency {
	vc := v.String()
	return predicate.PermissionDependency(sql.FieldEqualFold(FieldPermissionID, vc))
}

// PermissionIDContainsFold applies the ContainsFold predicate on the "permission_id" field.
func PermissionIDContainsFold(v xid.ID) predicate.PermissionDependency {
	vc := v.String()
	return predicate.PermissionDependency(sql.FieldContainsFold(FieldPermissionID, vc))
}

// RequiredPermissionIDEQ applies the EQ predicate on the "required_permission_id" field.
func RequiredPermissionIDEQ(v xid.ID) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldEQ(FieldRequiredPermissionID, v))
}

// RequiredPermissionIDNEQ applies the NEQ predicate on the "required_permission_id" field.
func RequiredPermissionIDNEQ(v xid.ID) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldNEQ(FieldRequiredPermissionID, v))
}

// RequiredPermissionIDIn applies the In predicate on the "required_permission_id" field.
func RequiredPermissionIDIn(vs ...xid.ID) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldIn(FieldRequiredPermissionID, vs...))
}

// RequiredPermissionIDNotIn applies the NotIn predicate on the "required_permission_id" field.
func RequiredPermissionIDNotIn(vs ...xid.ID) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldNotIn(FieldRequiredPermissionID, vs...))
}

// RequiredPermissionIDGT applies the GT predicate on the "required_permission_id" field.
func RequiredPermissionIDGT(v xid.ID) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldGT(FieldRequiredPermissionID, v))
}

// RequiredPermissionIDGTE applies the GTE predicate on the "required_permission_id" field.
func RequiredPermissionIDGTE(v xid.ID) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldGTE(FieldRequiredPermissionID, v))
}

// RequiredPermissionIDLT applies the LT predicate on the "required_permission_id" field.
func RequiredPermissionIDLT(v xid.ID) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldLT(FieldRequiredPermissionID, v))
}

// RequiredPermissionIDLTE applies the LTE predicate on the "required_permission_id" field.
func RequiredPermissionIDLTE(v xid.ID) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldLTE(FieldRequiredPermissionID, v))
}

// RequiredPermissionIDContains applies the Contains predicate on the "required_permission_id" field.
func RequiredPermissionIDContains(v xid.ID) predicate.PermissionDependency {
	vc := v.String()
	return predicate.PermissionDependency(sql.FieldContains(FieldRequiredPermissionID, vc))
}

// RequiredPermissionIDHasPrefix applies the HasPrefix predicate on the "required_permission_id" field.
func RequiredPermissionIDHasPrefix(v xid.ID) predicate.PermissionDependency {
	vc := v.String()
	return predicate.PermissionDependency(sql.FieldHasPrefix(FieldRequiredPermissionID, vc))
}

// RequiredPermissionIDHasSuffix applies the HasSuffix predicate on the "required_permission_id" field.
func RequiredPermissionIDHasSuffix(v xid.ID) predicate.PermissionDependency {
	vc := v.String()
	return predicate.PermissionDependency(sql.FieldHasSuffix(FieldRequiredPermissionID, vc))
}

// RequiredPermissionIDEqualFold applies the EqualFold predicate on the "required_permission_id" field.
func RequiredPermissionIDEqualFold(v xid.ID) predicate.PermissionDependency {
	vc := v.String()
	return predicate.PermissionDependency(sql.FieldEqualFold(FieldRequiredPermissionID, vc))
}

// RequiredPermissionIDContainsFold applies the ContainsFold predicate on the "required_permission_id" field.
func RequiredPermissionIDContainsFold(v xid.ID) predicate.PermissionDependency {
	vc := v.String()
	return predicate.PermissionDependency(sql.FieldContainsFold(FieldRequiredPermissionID, vc))
}

// DependencyTypeEQ applies the EQ predicate on the "dependency_type" field.
func DependencyTypeEQ(v DependencyType) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldEQ(FieldDependencyType, v))
}

// DependencyTypeNEQ applies the NEQ predicate on the "dependency_type" field.
func DependencyTypeNEQ(v DependencyType) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldNEQ(FieldDependencyType, v))
}

// DependencyTypeIn applies the In predicate on the "dependency_type" field.
func DependencyTypeIn(vs ...DependencyType) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldIn(FieldDependencyType, vs...))
}

// DependencyTypeNotIn applies the NotIn predicate on the "dependency_type" field.
func DependencyTypeNotIn(vs ...DependencyType) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldNotIn(FieldDependencyType, vs...))
}

// ConditionEQ applies the EQ predicate on the "condition" field.
func ConditionEQ(v string) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldEQ(FieldCondition, v))
}

// ConditionNEQ applies the NEQ predicate on the "condition" field.
func ConditionNEQ(v string) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldNEQ(FieldCondition, v))
}

// ConditionIn applies the In predicate on the "condition" field.
func ConditionIn(vs ...string) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldIn(FieldCondition, vs...))
}

// ConditionNotIn applies the NotIn predicate on the "condition" field.
func ConditionNotIn(vs ...string) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldNotIn(FieldCondition, vs...))
}

// ConditionGT applies the GT predicate on the "condition" field.
func ConditionGT(v string) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldGT(FieldCondition, v))
}

// ConditionGTE applies the GTE predicate on the "condition" field.
func ConditionGTE(v string) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldGTE(FieldCondition, v))
}

// ConditionLT applies the LT predicate on the "condition" field.
func ConditionLT(v string) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldLT(FieldCondition, v))
}

// ConditionLTE applies the LTE predicate on the "condition" field.
func ConditionLTE(v string) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldLTE(FieldCondition, v))
}

// ConditionContains applies the Contains predicate on the "condition" field.
func ConditionContains(v string) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldContains(FieldCondition, v))
}

// ConditionHasPrefix applies the HasPrefix predicate on the "condition" field.
func ConditionHasPrefix(v string) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldHasPrefix(FieldCondition, v))
}

// ConditionHasSuffix applies the HasSuffix predicate on the "condition" field.
func ConditionHasSuffix(v string) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldHasSuffix(FieldCondition, v))
}

// ConditionIsNil applies the IsNil predicate on the "condition" field.
func ConditionIsNil() predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldIsNull(FieldCondition))
}

// ConditionNotNil applies the NotNil predicate on the "condition" field.
func ConditionNotNil() predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldNotNull(FieldCondition))
}

// ConditionEqualFold applies the EqualFold predicate on the "condition" field.
func ConditionEqualFold(v string) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldEqualFold(FieldCondition, v))
}

// ConditionContainsFold applies the ContainsFold predicate on the "condition" field.
func ConditionContainsFold(v string) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldContainsFold(FieldCondition, v))
}

// ActiveEQ applies the EQ predicate on the "active" field.
func ActiveEQ(v bool) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldEQ(FieldActive, v))
}

// ActiveNEQ applies the NEQ predicate on the "active" field.
func ActiveNEQ(v bool) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldNEQ(FieldActive, v))
}

// CreatedByEQ applies the EQ predicate on the "created_by" field.
func CreatedByEQ(v string) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldEQ(FieldCreatedBy, v))
}

// CreatedByNEQ applies the NEQ predicate on the "created_by" field.
func CreatedByNEQ(v string) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldNEQ(FieldCreatedBy, v))
}

// CreatedByIn applies the In predicate on the "created_by" field.
func CreatedByIn(vs ...string) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldIn(FieldCreatedBy, vs...))
}

// CreatedByNotIn applies the NotIn predicate on the "created_by" field.
func CreatedByNotIn(vs ...string) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldNotIn(FieldCreatedBy, vs...))
}

// CreatedByGT applies the GT predicate on the "created_by" field.
func CreatedByGT(v string) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldGT(FieldCreatedBy, v))
}

// CreatedByGTE applies the GTE predicate on the "created_by" field.
func CreatedByGTE(v string) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldGTE(FieldCreatedBy, v))
}

// CreatedByLT applies the LT predicate on the "created_by" field.
func CreatedByLT(v string) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldLT(FieldCreatedBy, v))
}

// CreatedByLTE applies the LTE predicate on the "created_by" field.
func CreatedByLTE(v string) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldLTE(FieldCreatedBy, v))
}

// CreatedByContains applies the Contains predicate on the "created_by" field.
func CreatedByContains(v string) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldContains(FieldCreatedBy, v))
}

// CreatedByHasPrefix applies the HasPrefix predicate on the "created_by" field.
func CreatedByHasPrefix(v string) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldHasPrefix(FieldCreatedBy, v))
}

// CreatedByHasSuffix applies the HasSuffix predicate on the "created_by" field.
func CreatedByHasSuffix(v string) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldHasSuffix(FieldCreatedBy, v))
}

// CreatedByIsNil applies the IsNil predicate on the "created_by" field.
func CreatedByIsNil() predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldIsNull(FieldCreatedBy))
}

// CreatedByNotNil applies the NotNil predicate on the "created_by" field.
func CreatedByNotNil() predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldNotNull(FieldCreatedBy))
}

// CreatedByEqualFold applies the EqualFold predicate on the "created_by" field.
func CreatedByEqualFold(v string) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldEqualFold(FieldCreatedBy, v))
}

// CreatedByContainsFold applies the ContainsFold predicate on the "created_by" field.
func CreatedByContainsFold(v string) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.FieldContainsFold(FieldCreatedBy, v))
}

// HasPermission applies the HasEdge predicate on the "permission" edge.
func HasPermission() predicate.PermissionDependency {
	return predicate.PermissionDependency(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, PermissionTable, PermissionColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasPermissionWith applies the HasEdge predicate on the "permission" edge with a given conditions (other predicates).
func HasPermissionWith(preds ...predicate.Permission) predicate.PermissionDependency {
	return predicate.PermissionDependency(func(s *sql.Selector) {
		step := newPermissionStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasRequiredPermission applies the HasEdge predicate on the "required_permission" edge.
func HasRequiredPermission() predicate.PermissionDependency {
	return predicate.PermissionDependency(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, RequiredPermissionTable, RequiredPermissionColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasRequiredPermissionWith applies the HasEdge predicate on the "required_permission" edge with a given conditions (other predicates).
func HasRequiredPermissionWith(preds ...predicate.Permission) predicate.PermissionDependency {
	return predicate.PermissionDependency(func(s *sql.Selector) {
		step := newRequiredPermissionStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.PermissionDependency) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.PermissionDependency) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.PermissionDependency) predicate.PermissionDependency {
	return predicate.PermissionDependency(sql.NotPredicates(p))
}
