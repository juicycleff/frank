// Copyright 2023-present XRaph LLC. All rights reserved.
// This source code is licensed under the XRaph LLC license found
// in the LICENSE file in the root directory of this source tree.
// Code generated by ent, DO NOT EDIT.

package providertemplate

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"github.com/rs/xid"
	"github.com/xraph/frank/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id xid.ID) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id xid.ID) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id xid.ID) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...xid.ID) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...xid.ID) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id xid.ID) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id xid.ID) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id xid.ID) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id xid.ID) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldLTE(FieldID, id))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldEQ(FieldUpdatedAt, v))
}

// DeletedAt applies equality check predicate on the "deleted_at" field. It's identical to DeletedAtEQ.
func DeletedAt(v time.Time) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldEQ(FieldDeletedAt, v))
}

// Key applies equality check predicate on the "key" field. It's identical to KeyEQ.
func Key(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldEQ(FieldKey, v))
}

// Name applies equality check predicate on the "name" field. It's identical to NameEQ.
func Name(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldEQ(FieldName, v))
}

// DisplayName applies equality check predicate on the "display_name" field. It's identical to DisplayNameEQ.
func DisplayName(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldEQ(FieldDisplayName, v))
}

// Type applies equality check predicate on the "type" field. It's identical to TypeEQ.
func Type(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldEQ(FieldType, v))
}

// Protocol applies equality check predicate on the "protocol" field. It's identical to ProtocolEQ.
func Protocol(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldEQ(FieldProtocol, v))
}

// IconURL applies equality check predicate on the "icon_url" field. It's identical to IconURLEQ.
func IconURL(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldEQ(FieldIconURL, v))
}

// Category applies equality check predicate on the "category" field. It's identical to CategoryEQ.
func Category(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldEQ(FieldCategory, v))
}

// Popular applies equality check predicate on the "popular" field. It's identical to PopularEQ.
func Popular(v bool) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldEQ(FieldPopular, v))
}

// Active applies equality check predicate on the "active" field. It's identical to ActiveEQ.
func Active(v bool) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldEQ(FieldActive, v))
}

// Description applies equality check predicate on the "description" field. It's identical to DescriptionEQ.
func Description(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldEQ(FieldDescription, v))
}

// DocumentationURL applies equality check predicate on the "documentation_url" field. It's identical to DocumentationURLEQ.
func DocumentationURL(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldEQ(FieldDocumentationURL, v))
}

// SetupGuideURL applies equality check predicate on the "setup_guide_url" field. It's identical to SetupGuideURLEQ.
func SetupGuideURL(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldEQ(FieldSetupGuideURL, v))
}

// UsageCount applies equality check predicate on the "usage_count" field. It's identical to UsageCountEQ.
func UsageCount(v int) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldEQ(FieldUsageCount, v))
}

// AverageSetupTime applies equality check predicate on the "average_setup_time" field. It's identical to AverageSetupTimeEQ.
func AverageSetupTime(v float64) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldEQ(FieldAverageSetupTime, v))
}

// SuccessRate applies equality check predicate on the "success_rate" field. It's identical to SuccessRateEQ.
func SuccessRate(v float64) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldEQ(FieldSuccessRate, v))
}

// PopularityRank applies equality check predicate on the "popularity_rank" field. It's identical to PopularityRankEQ.
func PopularityRank(v int) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldEQ(FieldPopularityRank, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldLTE(FieldUpdatedAt, v))
}

// DeletedAtEQ applies the EQ predicate on the "deleted_at" field.
func DeletedAtEQ(v time.Time) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldEQ(FieldDeletedAt, v))
}

// DeletedAtNEQ applies the NEQ predicate on the "deleted_at" field.
func DeletedAtNEQ(v time.Time) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldNEQ(FieldDeletedAt, v))
}

// DeletedAtIn applies the In predicate on the "deleted_at" field.
func DeletedAtIn(vs ...time.Time) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldIn(FieldDeletedAt, vs...))
}

// DeletedAtNotIn applies the NotIn predicate on the "deleted_at" field.
func DeletedAtNotIn(vs ...time.Time) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldNotIn(FieldDeletedAt, vs...))
}

// DeletedAtGT applies the GT predicate on the "deleted_at" field.
func DeletedAtGT(v time.Time) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldGT(FieldDeletedAt, v))
}

// DeletedAtGTE applies the GTE predicate on the "deleted_at" field.
func DeletedAtGTE(v time.Time) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldGTE(FieldDeletedAt, v))
}

// DeletedAtLT applies the LT predicate on the "deleted_at" field.
func DeletedAtLT(v time.Time) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldLT(FieldDeletedAt, v))
}

// DeletedAtLTE applies the LTE predicate on the "deleted_at" field.
func DeletedAtLTE(v time.Time) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldLTE(FieldDeletedAt, v))
}

// DeletedAtIsNil applies the IsNil predicate on the "deleted_at" field.
func DeletedAtIsNil() predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldIsNull(FieldDeletedAt))
}

// DeletedAtNotNil applies the NotNil predicate on the "deleted_at" field.
func DeletedAtNotNil() predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldNotNull(FieldDeletedAt))
}

// KeyEQ applies the EQ predicate on the "key" field.
func KeyEQ(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldEQ(FieldKey, v))
}

// KeyNEQ applies the NEQ predicate on the "key" field.
func KeyNEQ(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldNEQ(FieldKey, v))
}

// KeyIn applies the In predicate on the "key" field.
func KeyIn(vs ...string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldIn(FieldKey, vs...))
}

// KeyNotIn applies the NotIn predicate on the "key" field.
func KeyNotIn(vs ...string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldNotIn(FieldKey, vs...))
}

// KeyGT applies the GT predicate on the "key" field.
func KeyGT(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldGT(FieldKey, v))
}

// KeyGTE applies the GTE predicate on the "key" field.
func KeyGTE(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldGTE(FieldKey, v))
}

// KeyLT applies the LT predicate on the "key" field.
func KeyLT(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldLT(FieldKey, v))
}

// KeyLTE applies the LTE predicate on the "key" field.
func KeyLTE(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldLTE(FieldKey, v))
}

// KeyContains applies the Contains predicate on the "key" field.
func KeyContains(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldContains(FieldKey, v))
}

// KeyHasPrefix applies the HasPrefix predicate on the "key" field.
func KeyHasPrefix(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldHasPrefix(FieldKey, v))
}

// KeyHasSuffix applies the HasSuffix predicate on the "key" field.
func KeyHasSuffix(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldHasSuffix(FieldKey, v))
}

// KeyEqualFold applies the EqualFold predicate on the "key" field.
func KeyEqualFold(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldEqualFold(FieldKey, v))
}

// KeyContainsFold applies the ContainsFold predicate on the "key" field.
func KeyContainsFold(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldContainsFold(FieldKey, v))
}

// NameEQ applies the EQ predicate on the "name" field.
func NameEQ(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldEQ(FieldName, v))
}

// NameNEQ applies the NEQ predicate on the "name" field.
func NameNEQ(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldNEQ(FieldName, v))
}

// NameIn applies the In predicate on the "name" field.
func NameIn(vs ...string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldIn(FieldName, vs...))
}

// NameNotIn applies the NotIn predicate on the "name" field.
func NameNotIn(vs ...string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldNotIn(FieldName, vs...))
}

// NameGT applies the GT predicate on the "name" field.
func NameGT(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldGT(FieldName, v))
}

// NameGTE applies the GTE predicate on the "name" field.
func NameGTE(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldGTE(FieldName, v))
}

// NameLT applies the LT predicate on the "name" field.
func NameLT(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldLT(FieldName, v))
}

// NameLTE applies the LTE predicate on the "name" field.
func NameLTE(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldLTE(FieldName, v))
}

// NameContains applies the Contains predicate on the "name" field.
func NameContains(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldContains(FieldName, v))
}

// NameHasPrefix applies the HasPrefix predicate on the "name" field.
func NameHasPrefix(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldHasPrefix(FieldName, v))
}

// NameHasSuffix applies the HasSuffix predicate on the "name" field.
func NameHasSuffix(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldHasSuffix(FieldName, v))
}

// NameEqualFold applies the EqualFold predicate on the "name" field.
func NameEqualFold(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldEqualFold(FieldName, v))
}

// NameContainsFold applies the ContainsFold predicate on the "name" field.
func NameContainsFold(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldContainsFold(FieldName, v))
}

// DisplayNameEQ applies the EQ predicate on the "display_name" field.
func DisplayNameEQ(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldEQ(FieldDisplayName, v))
}

// DisplayNameNEQ applies the NEQ predicate on the "display_name" field.
func DisplayNameNEQ(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldNEQ(FieldDisplayName, v))
}

// DisplayNameIn applies the In predicate on the "display_name" field.
func DisplayNameIn(vs ...string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldIn(FieldDisplayName, vs...))
}

// DisplayNameNotIn applies the NotIn predicate on the "display_name" field.
func DisplayNameNotIn(vs ...string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldNotIn(FieldDisplayName, vs...))
}

// DisplayNameGT applies the GT predicate on the "display_name" field.
func DisplayNameGT(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldGT(FieldDisplayName, v))
}

// DisplayNameGTE applies the GTE predicate on the "display_name" field.
func DisplayNameGTE(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldGTE(FieldDisplayName, v))
}

// DisplayNameLT applies the LT predicate on the "display_name" field.
func DisplayNameLT(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldLT(FieldDisplayName, v))
}

// DisplayNameLTE applies the LTE predicate on the "display_name" field.
func DisplayNameLTE(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldLTE(FieldDisplayName, v))
}

// DisplayNameContains applies the Contains predicate on the "display_name" field.
func DisplayNameContains(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldContains(FieldDisplayName, v))
}

// DisplayNameHasPrefix applies the HasPrefix predicate on the "display_name" field.
func DisplayNameHasPrefix(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldHasPrefix(FieldDisplayName, v))
}

// DisplayNameHasSuffix applies the HasSuffix predicate on the "display_name" field.
func DisplayNameHasSuffix(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldHasSuffix(FieldDisplayName, v))
}

// DisplayNameEqualFold applies the EqualFold predicate on the "display_name" field.
func DisplayNameEqualFold(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldEqualFold(FieldDisplayName, v))
}

// DisplayNameContainsFold applies the ContainsFold predicate on the "display_name" field.
func DisplayNameContainsFold(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldContainsFold(FieldDisplayName, v))
}

// TypeEQ applies the EQ predicate on the "type" field.
func TypeEQ(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldEQ(FieldType, v))
}

// TypeNEQ applies the NEQ predicate on the "type" field.
func TypeNEQ(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldNEQ(FieldType, v))
}

// TypeIn applies the In predicate on the "type" field.
func TypeIn(vs ...string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldIn(FieldType, vs...))
}

// TypeNotIn applies the NotIn predicate on the "type" field.
func TypeNotIn(vs ...string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldNotIn(FieldType, vs...))
}

// TypeGT applies the GT predicate on the "type" field.
func TypeGT(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldGT(FieldType, v))
}

// TypeGTE applies the GTE predicate on the "type" field.
func TypeGTE(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldGTE(FieldType, v))
}

// TypeLT applies the LT predicate on the "type" field.
func TypeLT(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldLT(FieldType, v))
}

// TypeLTE applies the LTE predicate on the "type" field.
func TypeLTE(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldLTE(FieldType, v))
}

// TypeContains applies the Contains predicate on the "type" field.
func TypeContains(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldContains(FieldType, v))
}

// TypeHasPrefix applies the HasPrefix predicate on the "type" field.
func TypeHasPrefix(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldHasPrefix(FieldType, v))
}

// TypeHasSuffix applies the HasSuffix predicate on the "type" field.
func TypeHasSuffix(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldHasSuffix(FieldType, v))
}

// TypeEqualFold applies the EqualFold predicate on the "type" field.
func TypeEqualFold(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldEqualFold(FieldType, v))
}

// TypeContainsFold applies the ContainsFold predicate on the "type" field.
func TypeContainsFold(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldContainsFold(FieldType, v))
}

// ProtocolEQ applies the EQ predicate on the "protocol" field.
func ProtocolEQ(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldEQ(FieldProtocol, v))
}

// ProtocolNEQ applies the NEQ predicate on the "protocol" field.
func ProtocolNEQ(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldNEQ(FieldProtocol, v))
}

// ProtocolIn applies the In predicate on the "protocol" field.
func ProtocolIn(vs ...string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldIn(FieldProtocol, vs...))
}

// ProtocolNotIn applies the NotIn predicate on the "protocol" field.
func ProtocolNotIn(vs ...string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldNotIn(FieldProtocol, vs...))
}

// ProtocolGT applies the GT predicate on the "protocol" field.
func ProtocolGT(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldGT(FieldProtocol, v))
}

// ProtocolGTE applies the GTE predicate on the "protocol" field.
func ProtocolGTE(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldGTE(FieldProtocol, v))
}

// ProtocolLT applies the LT predicate on the "protocol" field.
func ProtocolLT(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldLT(FieldProtocol, v))
}

// ProtocolLTE applies the LTE predicate on the "protocol" field.
func ProtocolLTE(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldLTE(FieldProtocol, v))
}

// ProtocolContains applies the Contains predicate on the "protocol" field.
func ProtocolContains(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldContains(FieldProtocol, v))
}

// ProtocolHasPrefix applies the HasPrefix predicate on the "protocol" field.
func ProtocolHasPrefix(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldHasPrefix(FieldProtocol, v))
}

// ProtocolHasSuffix applies the HasSuffix predicate on the "protocol" field.
func ProtocolHasSuffix(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldHasSuffix(FieldProtocol, v))
}

// ProtocolEqualFold applies the EqualFold predicate on the "protocol" field.
func ProtocolEqualFold(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldEqualFold(FieldProtocol, v))
}

// ProtocolContainsFold applies the ContainsFold predicate on the "protocol" field.
func ProtocolContainsFold(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldContainsFold(FieldProtocol, v))
}

// IconURLEQ applies the EQ predicate on the "icon_url" field.
func IconURLEQ(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldEQ(FieldIconURL, v))
}

// IconURLNEQ applies the NEQ predicate on the "icon_url" field.
func IconURLNEQ(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldNEQ(FieldIconURL, v))
}

// IconURLIn applies the In predicate on the "icon_url" field.
func IconURLIn(vs ...string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldIn(FieldIconURL, vs...))
}

// IconURLNotIn applies the NotIn predicate on the "icon_url" field.
func IconURLNotIn(vs ...string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldNotIn(FieldIconURL, vs...))
}

// IconURLGT applies the GT predicate on the "icon_url" field.
func IconURLGT(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldGT(FieldIconURL, v))
}

// IconURLGTE applies the GTE predicate on the "icon_url" field.
func IconURLGTE(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldGTE(FieldIconURL, v))
}

// IconURLLT applies the LT predicate on the "icon_url" field.
func IconURLLT(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldLT(FieldIconURL, v))
}

// IconURLLTE applies the LTE predicate on the "icon_url" field.
func IconURLLTE(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldLTE(FieldIconURL, v))
}

// IconURLContains applies the Contains predicate on the "icon_url" field.
func IconURLContains(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldContains(FieldIconURL, v))
}

// IconURLHasPrefix applies the HasPrefix predicate on the "icon_url" field.
func IconURLHasPrefix(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldHasPrefix(FieldIconURL, v))
}

// IconURLHasSuffix applies the HasSuffix predicate on the "icon_url" field.
func IconURLHasSuffix(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldHasSuffix(FieldIconURL, v))
}

// IconURLIsNil applies the IsNil predicate on the "icon_url" field.
func IconURLIsNil() predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldIsNull(FieldIconURL))
}

// IconURLNotNil applies the NotNil predicate on the "icon_url" field.
func IconURLNotNil() predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldNotNull(FieldIconURL))
}

// IconURLEqualFold applies the EqualFold predicate on the "icon_url" field.
func IconURLEqualFold(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldEqualFold(FieldIconURL, v))
}

// IconURLContainsFold applies the ContainsFold predicate on the "icon_url" field.
func IconURLContainsFold(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldContainsFold(FieldIconURL, v))
}

// CategoryEQ applies the EQ predicate on the "category" field.
func CategoryEQ(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldEQ(FieldCategory, v))
}

// CategoryNEQ applies the NEQ predicate on the "category" field.
func CategoryNEQ(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldNEQ(FieldCategory, v))
}

// CategoryIn applies the In predicate on the "category" field.
func CategoryIn(vs ...string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldIn(FieldCategory, vs...))
}

// CategoryNotIn applies the NotIn predicate on the "category" field.
func CategoryNotIn(vs ...string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldNotIn(FieldCategory, vs...))
}

// CategoryGT applies the GT predicate on the "category" field.
func CategoryGT(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldGT(FieldCategory, v))
}

// CategoryGTE applies the GTE predicate on the "category" field.
func CategoryGTE(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldGTE(FieldCategory, v))
}

// CategoryLT applies the LT predicate on the "category" field.
func CategoryLT(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldLT(FieldCategory, v))
}

// CategoryLTE applies the LTE predicate on the "category" field.
func CategoryLTE(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldLTE(FieldCategory, v))
}

// CategoryContains applies the Contains predicate on the "category" field.
func CategoryContains(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldContains(FieldCategory, v))
}

// CategoryHasPrefix applies the HasPrefix predicate on the "category" field.
func CategoryHasPrefix(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldHasPrefix(FieldCategory, v))
}

// CategoryHasSuffix applies the HasSuffix predicate on the "category" field.
func CategoryHasSuffix(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldHasSuffix(FieldCategory, v))
}

// CategoryEqualFold applies the EqualFold predicate on the "category" field.
func CategoryEqualFold(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldEqualFold(FieldCategory, v))
}

// CategoryContainsFold applies the ContainsFold predicate on the "category" field.
func CategoryContainsFold(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldContainsFold(FieldCategory, v))
}

// PopularEQ applies the EQ predicate on the "popular" field.
func PopularEQ(v bool) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldEQ(FieldPopular, v))
}

// PopularNEQ applies the NEQ predicate on the "popular" field.
func PopularNEQ(v bool) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldNEQ(FieldPopular, v))
}

// ActiveEQ applies the EQ predicate on the "active" field.
func ActiveEQ(v bool) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldEQ(FieldActive, v))
}

// ActiveNEQ applies the NEQ predicate on the "active" field.
func ActiveNEQ(v bool) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldNEQ(FieldActive, v))
}

// DescriptionEQ applies the EQ predicate on the "description" field.
func DescriptionEQ(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldEQ(FieldDescription, v))
}

// DescriptionNEQ applies the NEQ predicate on the "description" field.
func DescriptionNEQ(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldNEQ(FieldDescription, v))
}

// DescriptionIn applies the In predicate on the "description" field.
func DescriptionIn(vs ...string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldIn(FieldDescription, vs...))
}

// DescriptionNotIn applies the NotIn predicate on the "description" field.
func DescriptionNotIn(vs ...string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldNotIn(FieldDescription, vs...))
}

// DescriptionGT applies the GT predicate on the "description" field.
func DescriptionGT(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldGT(FieldDescription, v))
}

// DescriptionGTE applies the GTE predicate on the "description" field.
func DescriptionGTE(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldGTE(FieldDescription, v))
}

// DescriptionLT applies the LT predicate on the "description" field.
func DescriptionLT(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldLT(FieldDescription, v))
}

// DescriptionLTE applies the LTE predicate on the "description" field.
func DescriptionLTE(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldLTE(FieldDescription, v))
}

// DescriptionContains applies the Contains predicate on the "description" field.
func DescriptionContains(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldContains(FieldDescription, v))
}

// DescriptionHasPrefix applies the HasPrefix predicate on the "description" field.
func DescriptionHasPrefix(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldHasPrefix(FieldDescription, v))
}

// DescriptionHasSuffix applies the HasSuffix predicate on the "description" field.
func DescriptionHasSuffix(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldHasSuffix(FieldDescription, v))
}

// DescriptionIsNil applies the IsNil predicate on the "description" field.
func DescriptionIsNil() predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldIsNull(FieldDescription))
}

// DescriptionNotNil applies the NotNil predicate on the "description" field.
func DescriptionNotNil() predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldNotNull(FieldDescription))
}

// DescriptionEqualFold applies the EqualFold predicate on the "description" field.
func DescriptionEqualFold(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldEqualFold(FieldDescription, v))
}

// DescriptionContainsFold applies the ContainsFold predicate on the "description" field.
func DescriptionContainsFold(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldContainsFold(FieldDescription, v))
}

// RequiredFieldsIsNil applies the IsNil predicate on the "required_fields" field.
func RequiredFieldsIsNil() predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldIsNull(FieldRequiredFields))
}

// RequiredFieldsNotNil applies the NotNil predicate on the "required_fields" field.
func RequiredFieldsNotNil() predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldNotNull(FieldRequiredFields))
}

// SupportedFeaturesIsNil applies the IsNil predicate on the "supported_features" field.
func SupportedFeaturesIsNil() predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldIsNull(FieldSupportedFeatures))
}

// SupportedFeaturesNotNil applies the NotNil predicate on the "supported_features" field.
func SupportedFeaturesNotNil() predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldNotNull(FieldSupportedFeatures))
}

// DocumentationURLEQ applies the EQ predicate on the "documentation_url" field.
func DocumentationURLEQ(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldEQ(FieldDocumentationURL, v))
}

// DocumentationURLNEQ applies the NEQ predicate on the "documentation_url" field.
func DocumentationURLNEQ(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldNEQ(FieldDocumentationURL, v))
}

// DocumentationURLIn applies the In predicate on the "documentation_url" field.
func DocumentationURLIn(vs ...string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldIn(FieldDocumentationURL, vs...))
}

// DocumentationURLNotIn applies the NotIn predicate on the "documentation_url" field.
func DocumentationURLNotIn(vs ...string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldNotIn(FieldDocumentationURL, vs...))
}

// DocumentationURLGT applies the GT predicate on the "documentation_url" field.
func DocumentationURLGT(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldGT(FieldDocumentationURL, v))
}

// DocumentationURLGTE applies the GTE predicate on the "documentation_url" field.
func DocumentationURLGTE(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldGTE(FieldDocumentationURL, v))
}

// DocumentationURLLT applies the LT predicate on the "documentation_url" field.
func DocumentationURLLT(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldLT(FieldDocumentationURL, v))
}

// DocumentationURLLTE applies the LTE predicate on the "documentation_url" field.
func DocumentationURLLTE(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldLTE(FieldDocumentationURL, v))
}

// DocumentationURLContains applies the Contains predicate on the "documentation_url" field.
func DocumentationURLContains(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldContains(FieldDocumentationURL, v))
}

// DocumentationURLHasPrefix applies the HasPrefix predicate on the "documentation_url" field.
func DocumentationURLHasPrefix(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldHasPrefix(FieldDocumentationURL, v))
}

// DocumentationURLHasSuffix applies the HasSuffix predicate on the "documentation_url" field.
func DocumentationURLHasSuffix(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldHasSuffix(FieldDocumentationURL, v))
}

// DocumentationURLIsNil applies the IsNil predicate on the "documentation_url" field.
func DocumentationURLIsNil() predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldIsNull(FieldDocumentationURL))
}

// DocumentationURLNotNil applies the NotNil predicate on the "documentation_url" field.
func DocumentationURLNotNil() predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldNotNull(FieldDocumentationURL))
}

// DocumentationURLEqualFold applies the EqualFold predicate on the "documentation_url" field.
func DocumentationURLEqualFold(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldEqualFold(FieldDocumentationURL, v))
}

// DocumentationURLContainsFold applies the ContainsFold predicate on the "documentation_url" field.
func DocumentationURLContainsFold(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldContainsFold(FieldDocumentationURL, v))
}

// SetupGuideURLEQ applies the EQ predicate on the "setup_guide_url" field.
func SetupGuideURLEQ(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldEQ(FieldSetupGuideURL, v))
}

// SetupGuideURLNEQ applies the NEQ predicate on the "setup_guide_url" field.
func SetupGuideURLNEQ(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldNEQ(FieldSetupGuideURL, v))
}

// SetupGuideURLIn applies the In predicate on the "setup_guide_url" field.
func SetupGuideURLIn(vs ...string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldIn(FieldSetupGuideURL, vs...))
}

// SetupGuideURLNotIn applies the NotIn predicate on the "setup_guide_url" field.
func SetupGuideURLNotIn(vs ...string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldNotIn(FieldSetupGuideURL, vs...))
}

// SetupGuideURLGT applies the GT predicate on the "setup_guide_url" field.
func SetupGuideURLGT(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldGT(FieldSetupGuideURL, v))
}

// SetupGuideURLGTE applies the GTE predicate on the "setup_guide_url" field.
func SetupGuideURLGTE(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldGTE(FieldSetupGuideURL, v))
}

// SetupGuideURLLT applies the LT predicate on the "setup_guide_url" field.
func SetupGuideURLLT(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldLT(FieldSetupGuideURL, v))
}

// SetupGuideURLLTE applies the LTE predicate on the "setup_guide_url" field.
func SetupGuideURLLTE(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldLTE(FieldSetupGuideURL, v))
}

// SetupGuideURLContains applies the Contains predicate on the "setup_guide_url" field.
func SetupGuideURLContains(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldContains(FieldSetupGuideURL, v))
}

// SetupGuideURLHasPrefix applies the HasPrefix predicate on the "setup_guide_url" field.
func SetupGuideURLHasPrefix(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldHasPrefix(FieldSetupGuideURL, v))
}

// SetupGuideURLHasSuffix applies the HasSuffix predicate on the "setup_guide_url" field.
func SetupGuideURLHasSuffix(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldHasSuffix(FieldSetupGuideURL, v))
}

// SetupGuideURLIsNil applies the IsNil predicate on the "setup_guide_url" field.
func SetupGuideURLIsNil() predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldIsNull(FieldSetupGuideURL))
}

// SetupGuideURLNotNil applies the NotNil predicate on the "setup_guide_url" field.
func SetupGuideURLNotNil() predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldNotNull(FieldSetupGuideURL))
}

// SetupGuideURLEqualFold applies the EqualFold predicate on the "setup_guide_url" field.
func SetupGuideURLEqualFold(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldEqualFold(FieldSetupGuideURL, v))
}

// SetupGuideURLContainsFold applies the ContainsFold predicate on the "setup_guide_url" field.
func SetupGuideURLContainsFold(v string) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldContainsFold(FieldSetupGuideURL, v))
}

// UsageCountEQ applies the EQ predicate on the "usage_count" field.
func UsageCountEQ(v int) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldEQ(FieldUsageCount, v))
}

// UsageCountNEQ applies the NEQ predicate on the "usage_count" field.
func UsageCountNEQ(v int) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldNEQ(FieldUsageCount, v))
}

// UsageCountIn applies the In predicate on the "usage_count" field.
func UsageCountIn(vs ...int) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldIn(FieldUsageCount, vs...))
}

// UsageCountNotIn applies the NotIn predicate on the "usage_count" field.
func UsageCountNotIn(vs ...int) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldNotIn(FieldUsageCount, vs...))
}

// UsageCountGT applies the GT predicate on the "usage_count" field.
func UsageCountGT(v int) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldGT(FieldUsageCount, v))
}

// UsageCountGTE applies the GTE predicate on the "usage_count" field.
func UsageCountGTE(v int) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldGTE(FieldUsageCount, v))
}

// UsageCountLT applies the LT predicate on the "usage_count" field.
func UsageCountLT(v int) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldLT(FieldUsageCount, v))
}

// UsageCountLTE applies the LTE predicate on the "usage_count" field.
func UsageCountLTE(v int) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldLTE(FieldUsageCount, v))
}

// AverageSetupTimeEQ applies the EQ predicate on the "average_setup_time" field.
func AverageSetupTimeEQ(v float64) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldEQ(FieldAverageSetupTime, v))
}

// AverageSetupTimeNEQ applies the NEQ predicate on the "average_setup_time" field.
func AverageSetupTimeNEQ(v float64) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldNEQ(FieldAverageSetupTime, v))
}

// AverageSetupTimeIn applies the In predicate on the "average_setup_time" field.
func AverageSetupTimeIn(vs ...float64) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldIn(FieldAverageSetupTime, vs...))
}

// AverageSetupTimeNotIn applies the NotIn predicate on the "average_setup_time" field.
func AverageSetupTimeNotIn(vs ...float64) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldNotIn(FieldAverageSetupTime, vs...))
}

// AverageSetupTimeGT applies the GT predicate on the "average_setup_time" field.
func AverageSetupTimeGT(v float64) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldGT(FieldAverageSetupTime, v))
}

// AverageSetupTimeGTE applies the GTE predicate on the "average_setup_time" field.
func AverageSetupTimeGTE(v float64) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldGTE(FieldAverageSetupTime, v))
}

// AverageSetupTimeLT applies the LT predicate on the "average_setup_time" field.
func AverageSetupTimeLT(v float64) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldLT(FieldAverageSetupTime, v))
}

// AverageSetupTimeLTE applies the LTE predicate on the "average_setup_time" field.
func AverageSetupTimeLTE(v float64) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldLTE(FieldAverageSetupTime, v))
}

// AverageSetupTimeIsNil applies the IsNil predicate on the "average_setup_time" field.
func AverageSetupTimeIsNil() predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldIsNull(FieldAverageSetupTime))
}

// AverageSetupTimeNotNil applies the NotNil predicate on the "average_setup_time" field.
func AverageSetupTimeNotNil() predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldNotNull(FieldAverageSetupTime))
}

// SuccessRateEQ applies the EQ predicate on the "success_rate" field.
func SuccessRateEQ(v float64) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldEQ(FieldSuccessRate, v))
}

// SuccessRateNEQ applies the NEQ predicate on the "success_rate" field.
func SuccessRateNEQ(v float64) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldNEQ(FieldSuccessRate, v))
}

// SuccessRateIn applies the In predicate on the "success_rate" field.
func SuccessRateIn(vs ...float64) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldIn(FieldSuccessRate, vs...))
}

// SuccessRateNotIn applies the NotIn predicate on the "success_rate" field.
func SuccessRateNotIn(vs ...float64) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldNotIn(FieldSuccessRate, vs...))
}

// SuccessRateGT applies the GT predicate on the "success_rate" field.
func SuccessRateGT(v float64) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldGT(FieldSuccessRate, v))
}

// SuccessRateGTE applies the GTE predicate on the "success_rate" field.
func SuccessRateGTE(v float64) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldGTE(FieldSuccessRate, v))
}

// SuccessRateLT applies the LT predicate on the "success_rate" field.
func SuccessRateLT(v float64) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldLT(FieldSuccessRate, v))
}

// SuccessRateLTE applies the LTE predicate on the "success_rate" field.
func SuccessRateLTE(v float64) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldLTE(FieldSuccessRate, v))
}

// PopularityRankEQ applies the EQ predicate on the "popularity_rank" field.
func PopularityRankEQ(v int) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldEQ(FieldPopularityRank, v))
}

// PopularityRankNEQ applies the NEQ predicate on the "popularity_rank" field.
func PopularityRankNEQ(v int) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldNEQ(FieldPopularityRank, v))
}

// PopularityRankIn applies the In predicate on the "popularity_rank" field.
func PopularityRankIn(vs ...int) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldIn(FieldPopularityRank, vs...))
}

// PopularityRankNotIn applies the NotIn predicate on the "popularity_rank" field.
func PopularityRankNotIn(vs ...int) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldNotIn(FieldPopularityRank, vs...))
}

// PopularityRankGT applies the GT predicate on the "popularity_rank" field.
func PopularityRankGT(v int) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldGT(FieldPopularityRank, v))
}

// PopularityRankGTE applies the GTE predicate on the "popularity_rank" field.
func PopularityRankGTE(v int) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldGTE(FieldPopularityRank, v))
}

// PopularityRankLT applies the LT predicate on the "popularity_rank" field.
func PopularityRankLT(v int) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldLT(FieldPopularityRank, v))
}

// PopularityRankLTE applies the LTE predicate on the "popularity_rank" field.
func PopularityRankLTE(v int) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldLTE(FieldPopularityRank, v))
}

// MetadataIsNil applies the IsNil predicate on the "metadata" field.
func MetadataIsNil() predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldIsNull(FieldMetadata))
}

// MetadataNotNil applies the NotNil predicate on the "metadata" field.
func MetadataNotNil() predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.FieldNotNull(FieldMetadata))
}

// HasOrganizationProviders applies the HasEdge predicate on the "organization_providers" edge.
func HasOrganizationProviders() predicate.ProviderTemplate {
	return predicate.ProviderTemplate(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.O2M, false, OrganizationProvidersTable, OrganizationProvidersColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasOrganizationProvidersWith applies the HasEdge predicate on the "organization_providers" edge with a given conditions (other predicates).
func HasOrganizationProvidersWith(preds ...predicate.OrganizationProvider) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(func(s *sql.Selector) {
		step := newOrganizationProvidersStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.ProviderTemplate) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.ProviderTemplate) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.ProviderTemplate) predicate.ProviderTemplate {
	return predicate.ProviderTemplate(sql.NotPredicates(p))
}
